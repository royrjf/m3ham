08/16/2022 01:47:49 PM daemon.py[line:45]INFO - hello
08/16/2022 01:47:49 PM daemon.py[line:46]INFO - /home/ruijunfeng/works/fusion/m3ham/log/ham.log
08/16/2022 01:47:49 PM rcomm.py[line:72]INFO - ruijunfeng-PC
08/16/2022 01:47:49 PM rcomm.py[line:74]INFO - hello m3
08/16/2022 01:47:49 PM rcomm.py[line:51]INFO - found FTDI device:/dev/serial/by-id/usb-FTDI_FT230X_Basic_UART_DK0B3QX3-if00-port0
08/16/2022 01:47:50 PM rcomm.py[line:111]DEBUG - dev: Y opened
08/16/2022 01:47:50 PM rcomm.py[line:115]ERROR - failed to open device: AC as [Errno 2] could not open port /dev/serial/by-id/usb-1a86_USB2.0-Serial-if00-port0: [Errno 2] No such file or directory: '/dev/serial/by-id/usb-1a86_USB2.0-Serial-if00-port0'
08/16/2022 01:47:50 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 01:47:50 PM daemon.py[line:723]INFO - b'lg\x06R'
08/16/2022 01:47:50 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 01:47:50 PM daemon.py[line:732]ERROR - no ack
08/16/2022 01:47:50 PM daemon.py[line:723]INFO - b'lg\x06R'
08/16/2022 01:47:50 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 01:47:51 PM daemon.py[line:732]ERROR - no ack
08/16/2022 01:47:51 PM daemon.py[line:723]INFO - b'lg\x06R'
08/16/2022 01:47:51 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 01:47:52 PM daemon.py[line:732]ERROR - no ack
08/16/2022 01:47:52 PM daemon.py[line:77]INFO - hello beans_control
08/16/2022 01:49:12 PM daemon.py[line:93]INFO - gui msg: {'req': {'ch': '6', 'duty': '8', 'device': 'm3', 'command': 'open_lid'}}
08/16/2022 01:49:12 PM daemon.py[line:1148]INFO - b'Ol\x06\x08\xc8<\x01'
08/16/2022 01:49:12 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 01:49:12 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 01:49:12 PM rcomm.py[line:143]INFO - data -> b'Olok\xa1\x92'
08/16/2022 01:49:12 PM daemon.py[line:111]DEBUG - send_json -> {'rep': {'device': 'm3', 'result': 'success'}}
08/16/2022 01:49:16 PM daemon.py[line:93]INFO - gui msg: {'req': {'ch': '6', 'duty': '8', 'device': 'm3', 'command': 'open_lid'}}
08/16/2022 01:49:16 PM daemon.py[line:1148]INFO - b'Ol\x06\x08\xc8<\x01'
08/16/2022 01:49:16 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 01:49:16 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 01:49:16 PM rcomm.py[line:143]INFO - data -> b'Olok\xa1\x92'
08/16/2022 01:49:16 PM daemon.py[line:111]DEBUG - send_json -> {'rep': {'device': 'm3', 'result': 'success'}}
08/16/2022 01:49:24 PM daemon.py[line:93]INFO - gui msg: {'req': {'ch': '1', 'duty': '8', 'device': 'm3', 'command': 'open_lid'}}
08/16/2022 01:49:24 PM daemon.py[line:1148]INFO - b'Ol\x01\x08\xc8\xac\x84'
08/16/2022 01:49:24 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 01:49:24 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 01:49:25 PM rcomm.py[line:143]INFO - data -> b'Olok\xa1\x92'
08/16/2022 01:49:25 PM daemon.py[line:111]DEBUG - send_json -> {'rep': {'device': 'm3', 'result': 'success'}}
08/16/2022 01:49:28 PM daemon.py[line:93]INFO - gui msg: {'req': {'ch': '1', 'duty': '8', 'device': 'm3', 'command': 'open_lid'}}
08/16/2022 01:49:28 PM daemon.py[line:1148]INFO - b'Ol\x01\x08\xc8\xac\x84'
08/16/2022 01:49:28 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 01:49:28 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 01:49:28 PM rcomm.py[line:143]INFO - data -> b'Olok\xa1\x92'
08/16/2022 01:49:28 PM daemon.py[line:111]DEBUG - send_json -> {'rep': {'device': 'm3', 'result': 'success'}}
08/16/2022 01:49:29 PM daemon.py[line:93]INFO - gui msg: {'req': {'ch': '1', 'duty': '8', 'device': 'm3', 'command': 'open_lid'}}
08/16/2022 01:49:29 PM daemon.py[line:1148]INFO - b'Ol\x01\x08\xc8\xac\x84'
08/16/2022 01:49:29 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 01:49:29 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 01:49:29 PM rcomm.py[line:143]INFO - data -> b'Olok\xa1\x92'
08/16/2022 01:49:29 PM daemon.py[line:111]DEBUG - send_json -> {'rep': {'device': 'm3', 'result': 'success'}}
08/16/2022 01:49:31 PM daemon.py[line:93]INFO - gui msg: {'req': {'ch': '1', 'duty': '8', 'device': 'm3', 'command': 'open_lid'}}
08/16/2022 01:49:31 PM daemon.py[line:1148]INFO - b'Ol\x01\x08\xc8\xac\x84'
08/16/2022 01:49:31 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 01:49:31 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 01:49:31 PM rcomm.py[line:143]INFO - data -> b'Olok\xa1\x92'
08/16/2022 01:49:31 PM daemon.py[line:111]DEBUG - send_json -> {'rep': {'device': 'm3', 'result': 'success'}}
08/16/2022 01:49:32 PM daemon.py[line:93]INFO - gui msg: {'req': {'ch': '1', 'duty': '8', 'device': 'm3', 'command': 'open_lid'}}
08/16/2022 01:49:32 PM daemon.py[line:1148]INFO - b'Ol\x01\x08\xc8\xac\x84'
08/16/2022 01:49:32 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 01:49:32 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 01:49:32 PM rcomm.py[line:143]INFO - data -> b'Olok\xa1\x92'
08/16/2022 01:49:32 PM daemon.py[line:111]DEBUG - send_json -> {'rep': {'device': 'm3', 'result': 'success'}}
08/16/2022 01:49:33 PM daemon.py[line:93]INFO - gui msg: {'req': {'ch': '1', 'duty': '8', 'device': 'm3', 'command': 'open_lid'}}
08/16/2022 01:49:33 PM daemon.py[line:1148]INFO - b'Ol\x01\x08\xc8\xac\x84'
08/16/2022 01:49:33 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 01:49:33 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 01:49:33 PM rcomm.py[line:143]INFO - data -> b'Olok\xa1\x92'
08/16/2022 01:49:33 PM daemon.py[line:111]DEBUG - send_json -> {'rep': {'device': 'm3', 'result': 'success'}}
08/16/2022 01:49:35 PM daemon.py[line:93]INFO - gui msg: {'req': {'ch': '1', 'duty': '8', 'device': 'm3', 'command': 'open_lid'}}
08/16/2022 01:49:35 PM daemon.py[line:1148]INFO - b'Ol\x01\x08\xc8\xac\x84'
08/16/2022 01:49:35 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 01:49:35 PM rcomm.py[line:226]ERROR - failed to flush Y -> (4, 'Interrupted system call')
08/16/2022 01:49:35 PM rcomm.py[line:111]DEBUG - dev: Y opened
08/16/2022 01:49:35 PM rcomm.py[line:115]ERROR - failed to open device: AC as [Errno 2] could not open port /dev/serial/by-id/usb-1a86_USB2.0-Serial-if00-port0: [Errno 2] No such file or directory: '/dev/serial/by-id/usb-1a86_USB2.0-Serial-if00-port0'
08/16/2022 01:49:35 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 01:49:35 PM rcomm.py[line:143]INFO - data -> b'Olok\xa1\x92'
08/16/2022 01:49:35 PM daemon.py[line:111]DEBUG - send_json -> {'rep': {'device': 'm3', 'result': 'success'}}
08/16/2022 01:49:36 PM daemon.py[line:93]INFO - gui msg: {'req': {'ch': '1', 'duty': '8', 'device': 'm3', 'command': 'open_lid'}}
08/16/2022 01:49:36 PM daemon.py[line:1148]INFO - b'Ol\x01\x08\xc8\xac\x84'
08/16/2022 01:49:36 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 01:49:36 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 01:49:36 PM rcomm.py[line:143]INFO - data -> b'Olok\xa1\x92'
08/16/2022 01:49:36 PM daemon.py[line:111]DEBUG - send_json -> {'rep': {'device': 'm3', 'result': 'success'}}
08/16/2022 01:49:37 PM daemon.py[line:93]INFO - gui msg: {'req': {'ch': '1', 'duty': '8', 'device': 'm3', 'command': 'open_lid'}}
08/16/2022 01:49:37 PM daemon.py[line:1148]INFO - b'Ol\x01\x08\xc8\xac\x84'
08/16/2022 01:49:37 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 01:49:37 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 01:49:37 PM rcomm.py[line:143]INFO - data -> b'Olok\xa1\x92'
08/16/2022 01:49:37 PM daemon.py[line:111]DEBUG - send_json -> {'rep': {'device': 'm3', 'result': 'success'}}
08/16/2022 01:49:38 PM daemon.py[line:93]INFO - gui msg: {'req': {'ch': '1', 'duty': '8', 'device': 'm3', 'command': 'open_lid'}}
08/16/2022 01:49:38 PM daemon.py[line:1148]INFO - b'Ol\x01\x08\xc8\xac\x84'
08/16/2022 01:49:38 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 01:49:38 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 01:49:39 PM rcomm.py[line:143]INFO - data -> b'Olok\xa1\x92'
08/16/2022 01:49:39 PM daemon.py[line:111]DEBUG - send_json -> {'rep': {'device': 'm3', 'result': 'success'}}
08/16/2022 01:49:40 PM daemon.py[line:93]INFO - gui msg: {'req': {'ch': '1', 'duty': '8', 'device': 'm3', 'command': 'open_lid'}}
08/16/2022 01:49:40 PM daemon.py[line:1148]INFO - b'Ol\x01\x08\xc8\xac\x84'
08/16/2022 01:49:40 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 01:49:40 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 01:49:40 PM rcomm.py[line:143]INFO - data -> b'Olok\xa1\x92'
08/16/2022 01:49:40 PM daemon.py[line:111]DEBUG - send_json -> {'rep': {'device': 'm3', 'result': 'success'}}
08/16/2022 01:49:41 PM daemon.py[line:93]INFO - gui msg: {'req': {'ch': '1', 'duty': '8', 'device': 'm3', 'command': 'open_lid'}}
08/16/2022 01:49:41 PM daemon.py[line:1148]INFO - b'Ol\x01\x08\xc8\xac\x84'
08/16/2022 01:49:41 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 01:49:41 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 01:49:41 PM rcomm.py[line:143]INFO - data -> b'Olok\xa1\x92'
08/16/2022 01:49:41 PM daemon.py[line:111]DEBUG - send_json -> {'rep': {'device': 'm3', 'result': 'success'}}
08/16/2022 01:49:42 PM daemon.py[line:93]INFO - gui msg: {'req': {'ch': '1', 'duty': '8', 'device': 'm3', 'command': 'open_lid'}}
08/16/2022 01:49:42 PM daemon.py[line:1148]INFO - b'Ol\x01\x08\xc8\xac\x84'
08/16/2022 01:49:42 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 01:49:42 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 01:49:42 PM rcomm.py[line:143]INFO - data -> b'Olok\xa1\x92'
08/16/2022 01:49:42 PM daemon.py[line:111]DEBUG - send_json -> {'rep': {'device': 'm3', 'result': 'success'}}
08/16/2022 01:49:43 PM daemon.py[line:93]INFO - gui msg: {'req': {'ch': '1', 'duty': '8', 'device': 'm3', 'command': 'open_lid'}}
08/16/2022 01:49:43 PM daemon.py[line:1148]INFO - b'Ol\x01\x08\xc8\xac\x84'
08/16/2022 01:49:43 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 01:49:43 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 01:49:43 PM rcomm.py[line:143]INFO - data -> b'Olok\xa1\x92'
08/16/2022 01:49:43 PM daemon.py[line:111]DEBUG - send_json -> {'rep': {'device': 'm3', 'result': 'success'}}
08/16/2022 01:49:44 PM daemon.py[line:93]INFO - gui msg: {'req': {'ch': '1', 'duty': '8', 'device': 'm3', 'command': 'open_lid'}}
08/16/2022 01:49:44 PM daemon.py[line:1148]INFO - b'Ol\x01\x08\xc8\xac\x84'
08/16/2022 01:49:44 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 01:49:44 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 01:49:44 PM rcomm.py[line:143]INFO - data -> b'Olok\xa1\x92'
08/16/2022 01:49:44 PM daemon.py[line:111]DEBUG - send_json -> {'rep': {'device': 'm3', 'result': 'success'}}
08/16/2022 01:49:46 PM daemon.py[line:93]INFO - gui msg: {'req': {'ch': '1', 'duty': '8', 'device': 'm3', 'command': 'open_lid'}}
08/16/2022 01:49:46 PM daemon.py[line:1148]INFO - b'Ol\x01\x08\xc8\xac\x84'
08/16/2022 01:49:46 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 01:49:46 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 01:49:46 PM rcomm.py[line:143]INFO - data -> b'Olok\xa1\x92'
08/16/2022 01:49:46 PM daemon.py[line:111]DEBUG - send_json -> {'rep': {'device': 'm3', 'result': 'success'}}
08/16/2022 01:49:47 PM daemon.py[line:93]INFO - gui msg: {'req': {'ch': '1', 'duty': '8', 'device': 'm3', 'command': 'open_lid'}}
08/16/2022 01:49:47 PM daemon.py[line:1148]INFO - b'Ol\x01\x08\xc8\xac\x84'
08/16/2022 01:49:47 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 01:49:47 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 01:49:47 PM rcomm.py[line:143]INFO - data -> b'Olok\xa1\x92'
08/16/2022 01:49:47 PM daemon.py[line:111]DEBUG - send_json -> {'rep': {'device': 'm3', 'result': 'success'}}
08/16/2022 01:49:48 PM daemon.py[line:93]INFO - gui msg: {'req': {'ch': '1', 'duty': '8', 'device': 'm3', 'command': 'open_lid'}}
08/16/2022 01:49:48 PM daemon.py[line:1148]INFO - b'Ol\x01\x08\xc8\xac\x84'
08/16/2022 01:49:48 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 01:49:48 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 01:49:48 PM rcomm.py[line:143]INFO - data -> b'Olok\xa1\x92'
08/16/2022 01:49:48 PM daemon.py[line:111]DEBUG - send_json -> {'rep': {'device': 'm3', 'result': 'success'}}
08/16/2022 01:49:49 PM daemon.py[line:93]INFO - gui msg: {'req': {'ch': '1', 'duty': '8', 'device': 'm3', 'command': 'open_lid'}}
08/16/2022 01:49:49 PM daemon.py[line:1148]INFO - b'Ol\x01\x08\xc8\xac\x84'
08/16/2022 01:49:49 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 01:49:49 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 01:49:49 PM rcomm.py[line:143]INFO - data -> b'Olok\xa1\x92'
08/16/2022 01:49:49 PM daemon.py[line:111]DEBUG - send_json -> {'rep': {'device': 'm3', 'result': 'success'}}
08/16/2022 01:49:50 PM daemon.py[line:93]INFO - gui msg: {'req': {'ch': '1', 'duty': '8', 'device': 'm3', 'command': 'open_lid'}}
08/16/2022 01:49:50 PM daemon.py[line:1148]INFO - b'Ol\x01\x08\xc8\xac\x84'
08/16/2022 01:49:50 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 01:49:50 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 01:49:50 PM rcomm.py[line:143]INFO - data -> b'Olok\xa1\x92'
08/16/2022 01:49:50 PM daemon.py[line:111]DEBUG - send_json -> {'rep': {'device': 'm3', 'result': 'success'}}
08/16/2022 01:49:51 PM daemon.py[line:93]INFO - gui msg: {'req': {'ch': '1', 'duty': '8', 'device': 'm3', 'command': 'open_lid'}}
08/16/2022 01:49:51 PM daemon.py[line:1148]INFO - b'Ol\x01\x08\xc8\xac\x84'
08/16/2022 01:49:51 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 01:49:51 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 01:49:51 PM rcomm.py[line:143]INFO - data -> b'Olok\xa1\x92'
08/16/2022 01:49:51 PM daemon.py[line:111]DEBUG - send_json -> {'rep': {'device': 'm3', 'result': 'success'}}
08/16/2022 01:49:52 PM daemon.py[line:93]INFO - gui msg: {'req': {'ch': '1', 'duty': '8', 'device': 'm3', 'command': 'open_lid'}}
08/16/2022 01:49:52 PM daemon.py[line:1148]INFO - b'Ol\x01\x08\xc8\xac\x84'
08/16/2022 01:49:52 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 01:49:52 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 01:49:52 PM rcomm.py[line:143]INFO - data -> b'Olok\xa1\x92'
08/16/2022 01:49:52 PM daemon.py[line:111]DEBUG - send_json -> {'rep': {'device': 'm3', 'result': 'success'}}
08/16/2022 01:49:53 PM daemon.py[line:93]INFO - gui msg: {'req': {'ch': '1', 'duty': '8', 'device': 'm3', 'command': 'open_lid'}}
08/16/2022 01:49:53 PM daemon.py[line:1148]INFO - b'Ol\x01\x08\xc8\xac\x84'
08/16/2022 01:49:53 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 01:49:53 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 01:49:53 PM rcomm.py[line:143]INFO - data -> b'Olok\xa1\x92'
08/16/2022 01:49:53 PM daemon.py[line:111]DEBUG - send_json -> {'rep': {'device': 'm3', 'result': 'success'}}
08/16/2022 01:49:54 PM daemon.py[line:93]INFO - gui msg: {'req': {'ch': '1', 'duty': '8', 'device': 'm3', 'command': 'open_lid'}}
08/16/2022 01:49:54 PM daemon.py[line:1148]INFO - b'Ol\x01\x08\xc8\xac\x84'
08/16/2022 01:49:54 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 01:49:54 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 01:49:54 PM rcomm.py[line:143]INFO - data -> b'Olok\xa1\x92'
08/16/2022 01:49:54 PM daemon.py[line:111]DEBUG - send_json -> {'rep': {'device': 'm3', 'result': 'success'}}
08/16/2022 01:49:55 PM daemon.py[line:93]INFO - gui msg: {'req': {'ch': '1', 'duty': '8', 'device': 'm3', 'command': 'open_lid'}}
08/16/2022 01:49:55 PM daemon.py[line:1148]INFO - b'Ol\x01\x08\xc8\xac\x84'
08/16/2022 01:49:55 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 01:49:55 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 01:49:55 PM rcomm.py[line:143]INFO - data -> b'Olok\xa1\x92'
08/16/2022 01:49:55 PM daemon.py[line:111]DEBUG - send_json -> {'rep': {'device': 'm3', 'result': 'success'}}
08/16/2022 01:49:56 PM daemon.py[line:93]INFO - gui msg: {'req': {'ch': '1', 'duty': '8', 'device': 'm3', 'command': 'open_lid'}}
08/16/2022 01:49:56 PM daemon.py[line:1148]INFO - b'Ol\x01\x08\xc8\xac\x84'
08/16/2022 01:49:56 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 01:49:56 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 01:49:56 PM rcomm.py[line:143]INFO - data -> b'Olok\xa1\x92'
08/16/2022 01:49:56 PM daemon.py[line:111]DEBUG - send_json -> {'rep': {'device': 'm3', 'result': 'success'}}
08/16/2022 01:49:57 PM daemon.py[line:93]INFO - gui msg: {'req': {'ch': '1', 'duty': '8', 'device': 'm3', 'command': 'open_lid'}}
08/16/2022 01:49:57 PM daemon.py[line:1148]INFO - b'Ol\x01\x08\xc8\xac\x84'
08/16/2022 01:49:57 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 01:49:57 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 01:49:57 PM rcomm.py[line:143]INFO - data -> b'Olok\xa1\x92'
08/16/2022 01:49:57 PM daemon.py[line:111]DEBUG - send_json -> {'rep': {'device': 'm3', 'result': 'success'}}
08/16/2022 01:49:58 PM daemon.py[line:93]INFO - gui msg: {'req': {'ch': '1', 'duty': '8', 'device': 'm3', 'command': 'open_lid'}}
08/16/2022 01:49:58 PM daemon.py[line:1148]INFO - b'Ol\x01\x08\xc8\xac\x84'
08/16/2022 01:49:58 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 01:49:58 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 01:49:58 PM rcomm.py[line:143]INFO - data -> b'Olok\xa1\x92'
08/16/2022 01:49:58 PM daemon.py[line:111]DEBUG - send_json -> {'rep': {'device': 'm3', 'result': 'success'}}
08/16/2022 01:51:02 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 01:51:02 PM rcomm.py[line:171]ERROR - failed to read dev: Y as [Errno 5] Input/output error
08/16/2022 01:51:02 PM rcomm.py[line:115]ERROR - failed to open device: Y as [Errno 2] could not open port /dev/serial/by-id/usb-FTDI_FT230X_Basic_UART_DK0B3QX3-if00-port0: [Errno 2] No such file or directory: '/dev/serial/by-id/usb-FTDI_FT230X_Basic_UART_DK0B3QX3-if00-port0'
08/16/2022 01:51:02 PM rcomm.py[line:115]ERROR - failed to open device: AC as [Errno 2] could not open port /dev/serial/by-id/usb-1a86_USB2.0-Serial-if00-port0: [Errno 2] No such file or directory: '/dev/serial/by-id/usb-1a86_USB2.0-Serial-if00-port0'
08/16/2022 01:57:50 PM serv.py[line:49]INFO - serv heatbeat
08/16/2022 01:59:46 PM daemon.py[line:93]INFO - gui msg: {'req': {'colour': [0, 0, 0], 'device': 'm3', 'led_ids': '101', 'command': 'lattice_led_control'}}
08/16/2022 01:59:46 PM daemon.py[line:652]INFO - b'lw-\x01\x00\x00\x00\x01\x11\xc0'
08/16/2022 01:59:46 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 01:59:46 PM rcomm.py[line:226]ERROR - failed to flush Y -> 'NoneType' object has no attribute 'flush'
08/16/2022 01:59:46 PM rcomm.py[line:111]DEBUG - dev: Y opened
08/16/2022 01:59:46 PM rcomm.py[line:115]ERROR - failed to open device: AC as [Errno 2] could not open port /dev/serial/by-id/usb-1a86_USB2.0-Serial-if00-port0: [Errno 2] No such file or directory: '/dev/serial/by-id/usb-1a86_USB2.0-Serial-if00-port0'
08/16/2022 01:59:46 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 01:59:46 PM rcomm.py[line:143]INFO - data -> b'lLEDU\x84'
08/16/2022 01:59:46 PM daemon.py[line:658]DEBUG - r -> b'lLEDU\x84'
08/16/2022 01:59:46 PM daemon.py[line:111]DEBUG - send_json -> {'rep': {'device': 'm3', 'result': 'success'}}
08/16/2022 01:59:49 PM daemon.py[line:93]INFO - gui msg: {'req': {'colour': [0, 0, 0], 'device': 'm3', 'led_ids': '101', 'command': 'lattice_led_control'}}
08/16/2022 01:59:49 PM daemon.py[line:652]INFO - b'lw-\x01\x00\x00\x00\x01\x11\xc0'
08/16/2022 01:59:49 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 01:59:49 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 01:59:49 PM rcomm.py[line:143]INFO - data -> b'lLEDU\x84'
08/16/2022 01:59:49 PM daemon.py[line:658]DEBUG - r -> b'lLEDU\x84'
08/16/2022 01:59:49 PM daemon.py[line:111]DEBUG - send_json -> {'rep': {'device': 'm3', 'result': 'success'}}
08/16/2022 02:07:50 PM serv.py[line:49]INFO - serv heatbeat
08/16/2022 02:47:10 PM daemon.py[line:45]INFO - hello
08/16/2022 02:47:10 PM daemon.py[line:46]INFO - /home/ruijunfeng/works/fusion/m3ham/log/ham.log
08/16/2022 02:47:10 PM rcomm.py[line:72]INFO - ruijunfeng-PC
08/16/2022 02:47:10 PM rcomm.py[line:74]INFO - hello m3
08/16/2022 02:47:10 PM rcomm.py[line:51]INFO - found FTDI device:/dev/serial/by-id/usb-FTDI_FT230X_Basic_UART_DK0B3QX3-if00-port0
08/16/2022 02:47:10 PM rcomm.py[line:111]DEBUG - dev: Y opened
08/16/2022 02:47:10 PM rcomm.py[line:115]ERROR - failed to open device: AC as [Errno 2] could not open port /dev/serial/by-id/usb-1a86_USB2.0-Serial-if00-port0: [Errno 2] No such file or directory: '/dev/serial/by-id/usb-1a86_USB2.0-Serial-if00-port0'
08/16/2022 02:47:10 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 02:47:10 PM daemon.py[line:723]INFO - b'lg\x06R'
08/16/2022 02:47:10 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 02:47:10 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 02:47:10 PM rcomm.py[line:143]INFO - data -> b'lgok\xc2\xce'
08/16/2022 02:47:10 PM daemon.py[line:728]DEBUG - r -> b'lgok\xc2\xce'
08/16/2022 02:47:10 PM daemon.py[line:77]INFO - hello beans_control
08/16/2022 02:48:19 PM daemon.py[line:93]INFO - gui msg: {'req': {'command': 'lattice_led_control', 'led_ids': '101', 'device': 'm3', 'colour': [0, 0, 0]}}
08/16/2022 02:48:19 PM daemon.py[line:652]INFO - b'lw-\x01\x00\x00\x00\x01\x11\xc0'
08/16/2022 02:48:19 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 02:48:19 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 02:48:19 PM rcomm.py[line:143]INFO - data -> b'lLEDU\x84'
08/16/2022 02:48:19 PM daemon.py[line:658]DEBUG - r -> b'lLEDU\x84'
08/16/2022 02:48:19 PM daemon.py[line:111]DEBUG - send_json -> {'rep': {'device': 'm3', 'result': 'success'}}
08/16/2022 02:48:22 PM daemon.py[line:93]INFO - gui msg: {'req': {'command': 'lattice_led_control', 'led_ids': '101', 'device': 'm3', 'colour': [20, 0, 0]}}
08/16/2022 02:48:22 PM daemon.py[line:652]INFO - b'lw-\x01\x14\x00\x00\x01G\x11'
08/16/2022 02:48:22 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 02:48:22 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 02:48:23 PM rcomm.py[line:143]INFO - data -> b'lLEDU\x84'
08/16/2022 02:48:23 PM daemon.py[line:658]DEBUG - r -> b'lLEDU\x84'
08/16/2022 02:48:23 PM daemon.py[line:111]DEBUG - send_json -> {'rep': {'device': 'm3', 'result': 'success'}}
08/16/2022 02:49:11 PM daemon.py[line:93]INFO - gui msg: {'req': {'command': 'lattice_led_control', 'led_ids': '101', 'device': 'm3', 'colour': [20, 0, 0]}}
08/16/2022 02:49:11 PM daemon.py[line:652]INFO - b'lw-\x01\x14\x00\x00\x01G\x11'
08/16/2022 02:49:11 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 02:49:11 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 02:49:11 PM rcomm.py[line:143]INFO - data -> b'lLEDU\x84'
08/16/2022 02:49:11 PM daemon.py[line:658]DEBUG - r -> b'lLEDU\x84'
08/16/2022 02:49:11 PM daemon.py[line:111]DEBUG - send_json -> {'rep': {'device': 'm3', 'result': 'success'}}
08/16/2022 02:49:12 PM daemon.py[line:93]INFO - gui msg: {'req': {'command': 'lattice_led_control', 'led_ids': '102', 'device': 'm3', 'colour': [20, 0, 0]}}
08/16/2022 02:49:12 PM daemon.py[line:652]INFO - b'lw-\x01\x14\x00\x00\x02$!'
08/16/2022 02:49:12 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 02:49:12 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 02:49:12 PM rcomm.py[line:143]INFO - data -> b'lLEDU\x84'
08/16/2022 02:49:12 PM daemon.py[line:658]DEBUG - r -> b'lLEDU\x84'
08/16/2022 02:49:12 PM daemon.py[line:111]DEBUG - send_json -> {'rep': {'device': 'm3', 'result': 'success'}}
08/16/2022 02:49:12 PM daemon.py[line:93]INFO - gui msg: {'req': {'command': 'lattice_led_control', 'led_ids': '103', 'device': 'm3', 'colour': [20, 0, 0]}}
08/16/2022 02:49:12 PM daemon.py[line:652]INFO - b'lw-\x01\x14\x00\x00\x03\x051'
08/16/2022 02:49:12 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 02:49:12 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 02:49:12 PM rcomm.py[line:143]INFO - data -> b'lLEDU\x84'
08/16/2022 02:49:12 PM daemon.py[line:658]DEBUG - r -> b'lLEDU\x84'
08/16/2022 02:49:12 PM daemon.py[line:111]DEBUG - send_json -> {'rep': {'device': 'm3', 'result': 'success'}}
08/16/2022 02:49:13 PM daemon.py[line:93]INFO - gui msg: {'req': {'command': 'lattice_led_control', 'led_ids': '104', 'device': 'm3', 'colour': [20, 0, 0]}}
08/16/2022 02:49:13 PM daemon.py[line:652]INFO - b'lw-\x01\x14\x00\x00\x04\xe2A'
08/16/2022 02:49:13 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 02:49:13 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 02:49:13 PM rcomm.py[line:143]INFO - data -> b'lLEDU\x84'
08/16/2022 02:49:13 PM daemon.py[line:658]DEBUG - r -> b'lLEDU\x84'
08/16/2022 02:49:13 PM daemon.py[line:111]DEBUG - send_json -> {'rep': {'device': 'm3', 'result': 'success'}}
08/16/2022 02:49:13 PM daemon.py[line:93]INFO - gui msg: {'req': {'command': 'lattice_led_control', 'led_ids': '105', 'device': 'm3', 'colour': [20, 0, 0]}}
08/16/2022 02:49:13 PM daemon.py[line:652]INFO - b'lw-\x01\x14\x00\x00\x08n\x80'
08/16/2022 02:49:13 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 02:49:13 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 02:49:13 PM rcomm.py[line:143]INFO - data -> b'lLEDU\x84'
08/16/2022 02:49:13 PM daemon.py[line:658]DEBUG - r -> b'lLEDU\x84'
08/16/2022 02:49:13 PM daemon.py[line:111]DEBUG - send_json -> {'rep': {'device': 'm3', 'result': 'success'}}
08/16/2022 02:49:14 PM daemon.py[line:93]INFO - gui msg: {'req': {'command': 'lattice_led_control', 'led_ids': '106', 'device': 'm3', 'colour': [20, 0, 0]}}
08/16/2022 02:49:14 PM daemon.py[line:652]INFO - b'lw-\x01\x14\x00\x00\tO\x90'
08/16/2022 02:49:14 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 02:49:14 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 02:49:14 PM rcomm.py[line:143]INFO - data -> b'lLEDU\x84'
08/16/2022 02:49:14 PM daemon.py[line:658]DEBUG - r -> b'lLEDU\x84'
08/16/2022 02:49:14 PM daemon.py[line:111]DEBUG - send_json -> {'rep': {'device': 'm3', 'result': 'success'}}
08/16/2022 02:49:15 PM daemon.py[line:93]INFO - gui msg: {'req': {'command': 'lattice_led_control', 'led_ids': '107', 'device': 'm3', 'colour': [20, 0, 0]}}
08/16/2022 02:49:15 PM daemon.py[line:652]INFO - b'lw-\x01\x14\x00\x00\n,\xa0'
08/16/2022 02:49:15 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 02:49:15 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 02:49:15 PM rcomm.py[line:143]INFO - data -> b'lLEDU\x84'
08/16/2022 02:49:15 PM daemon.py[line:658]DEBUG - r -> b'lLEDU\x84'
08/16/2022 02:49:15 PM daemon.py[line:111]DEBUG - send_json -> {'rep': {'device': 'm3', 'result': 'success'}}
08/16/2022 02:49:29 PM daemon.py[line:93]INFO - gui msg: {'req': {'command': 'lattice_led_control', 'led_ids': '101', 'device': 'm3', 'colour': [20, 0, 0]}}
08/16/2022 02:49:29 PM daemon.py[line:652]INFO - b'lw-\x01\x14\x00\x00\x01G\x11'
08/16/2022 02:49:29 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 02:49:29 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 02:49:29 PM rcomm.py[line:143]INFO - data -> b'lLEDU\x84'
08/16/2022 02:49:29 PM daemon.py[line:658]DEBUG - r -> b'lLEDU\x84'
08/16/2022 02:49:29 PM daemon.py[line:111]DEBUG - send_json -> {'rep': {'device': 'm3', 'result': 'success'}}
08/16/2022 02:49:54 PM daemon.py[line:93]INFO - gui msg: {'req': {'command': 'lattice_led_control', 'led_ids': '101', 'device': 'm3', 'colour': [20, 0, 20]}}
08/16/2022 02:49:54 PM daemon.py[line:652]INFO - b'lw-\x01\x14\x00\x14\x01\xf0\xde'
08/16/2022 02:49:54 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 02:49:54 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 02:49:54 PM rcomm.py[line:143]INFO - data -> b'lLEDU\x84'
08/16/2022 02:49:54 PM daemon.py[line:658]DEBUG - r -> b'lLEDU\x84'
08/16/2022 02:49:54 PM daemon.py[line:111]DEBUG - send_json -> {'rep': {'device': 'm3', 'result': 'success'}}
08/16/2022 02:49:54 PM daemon.py[line:93]INFO - gui msg: {'req': {'command': 'lattice_led_control', 'led_ids': '102', 'device': 'm3', 'colour': [20, 0, 20]}}
08/16/2022 02:49:54 PM daemon.py[line:652]INFO - b'lw-\x01\x14\x00\x14\x02\x93\xee'
08/16/2022 02:49:54 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 02:49:54 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 02:49:54 PM rcomm.py[line:143]INFO - data -> b'lLEDU\x84'
08/16/2022 02:49:54 PM daemon.py[line:658]DEBUG - r -> b'lLEDU\x84'
08/16/2022 02:49:54 PM daemon.py[line:111]DEBUG - send_json -> {'rep': {'device': 'm3', 'result': 'success'}}
08/16/2022 02:49:55 PM daemon.py[line:93]INFO - gui msg: {'req': {'command': 'lattice_led_control', 'led_ids': '103', 'device': 'm3', 'colour': [20, 0, 20]}}
08/16/2022 02:49:55 PM daemon.py[line:652]INFO - b'lw-\x01\x14\x00\x14\x03\xb2\xfe'
08/16/2022 02:49:55 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 02:49:55 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 02:49:55 PM rcomm.py[line:143]INFO - data -> b'lLEDU\x84'
08/16/2022 02:49:55 PM daemon.py[line:658]DEBUG - r -> b'lLEDU\x84'
08/16/2022 02:49:55 PM daemon.py[line:111]DEBUG - send_json -> {'rep': {'device': 'm3', 'result': 'success'}}
08/16/2022 02:49:56 PM daemon.py[line:93]INFO - gui msg: {'req': {'command': 'lattice_led_control', 'led_ids': '104', 'device': 'm3', 'colour': [20, 0, 20]}}
08/16/2022 02:49:56 PM daemon.py[line:652]INFO - b'lw-\x01\x14\x00\x14\x04U\x8e'
08/16/2022 02:49:56 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 02:49:56 PM rcomm.py[line:226]ERROR - failed to flush Y -> (4, 'Interrupted system call')
08/16/2022 02:49:56 PM rcomm.py[line:111]DEBUG - dev: Y opened
08/16/2022 02:49:56 PM rcomm.py[line:115]ERROR - failed to open device: AC as [Errno 2] could not open port /dev/serial/by-id/usb-1a86_USB2.0-Serial-if00-port0: [Errno 2] No such file or directory: '/dev/serial/by-id/usb-1a86_USB2.0-Serial-if00-port0'
08/16/2022 02:49:56 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 02:49:56 PM rcomm.py[line:143]INFO - data -> b'lLEDU\x84'
08/16/2022 02:49:56 PM daemon.py[line:658]DEBUG - r -> b'lLEDU\x84'
08/16/2022 02:49:56 PM daemon.py[line:111]DEBUG - send_json -> {'rep': {'device': 'm3', 'result': 'success'}}
08/16/2022 02:49:56 PM daemon.py[line:93]INFO - gui msg: {'req': {'command': 'lattice_led_control', 'led_ids': '105', 'device': 'm3', 'colour': [20, 0, 20]}}
08/16/2022 02:49:56 PM daemon.py[line:652]INFO - b'lw-\x01\x14\x00\x14\x08\xd9O'
08/16/2022 02:49:56 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 02:49:56 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 02:49:56 PM rcomm.py[line:143]INFO - data -> b'lLEDU\x84'
08/16/2022 02:49:56 PM daemon.py[line:658]DEBUG - r -> b'lLEDU\x84'
08/16/2022 02:49:56 PM daemon.py[line:111]DEBUG - send_json -> {'rep': {'device': 'm3', 'result': 'success'}}
08/16/2022 02:49:57 PM daemon.py[line:93]INFO - gui msg: {'req': {'command': 'lattice_led_control', 'led_ids': '106', 'device': 'm3', 'colour': [20, 0, 20]}}
08/16/2022 02:49:57 PM daemon.py[line:652]INFO - b'lw-\x01\x14\x00\x14\t\xf8_'
08/16/2022 02:49:57 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 02:49:57 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 02:49:57 PM rcomm.py[line:143]INFO - data -> b'lLEDU\x84'
08/16/2022 02:49:57 PM daemon.py[line:658]DEBUG - r -> b'lLEDU\x84'
08/16/2022 02:49:57 PM daemon.py[line:111]DEBUG - send_json -> {'rep': {'device': 'm3', 'result': 'success'}}
08/16/2022 02:49:57 PM daemon.py[line:93]INFO - gui msg: {'req': {'command': 'lattice_led_control', 'led_ids': '107', 'device': 'm3', 'colour': [20, 0, 20]}}
08/16/2022 02:49:57 PM daemon.py[line:652]INFO - b'lw-\x01\x14\x00\x14\n\x9bo'
08/16/2022 02:49:57 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 02:49:57 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 02:49:57 PM rcomm.py[line:143]INFO - data -> b'lLEDU\x84'
08/16/2022 02:49:57 PM daemon.py[line:658]DEBUG - r -> b'lLEDU\x84'
08/16/2022 02:49:57 PM daemon.py[line:111]DEBUG - send_json -> {'rep': {'device': 'm3', 'result': 'success'}}
08/16/2022 02:50:06 PM daemon.py[line:93]INFO - gui msg: {'req': {'command': 'lattice_led_control', 'led_ids': '101', 'device': 'm3', 'colour': [20, 0, 20]}}
08/16/2022 02:50:06 PM daemon.py[line:652]INFO - b'lw-\x01\x14\x00\x14\x01\xf0\xde'
08/16/2022 02:50:06 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 02:50:06 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 02:50:06 PM rcomm.py[line:143]INFO - data -> b'lLEDU\x84'
08/16/2022 02:50:06 PM daemon.py[line:658]DEBUG - r -> b'lLEDU\x84'
08/16/2022 02:50:06 PM daemon.py[line:111]DEBUG - send_json -> {'rep': {'device': 'm3', 'result': 'success'}}
08/16/2022 02:50:06 PM daemon.py[line:93]INFO - gui msg: {'req': {'command': 'lattice_led_control', 'led_ids': '102', 'device': 'm3', 'colour': [20, 0, 20]}}
08/16/2022 02:50:06 PM daemon.py[line:652]INFO - b'lw-\x01\x14\x00\x14\x02\x93\xee'
08/16/2022 02:50:06 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 02:50:06 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 02:50:06 PM rcomm.py[line:143]INFO - data -> b'lLEDU\x84'
08/16/2022 02:50:06 PM daemon.py[line:658]DEBUG - r -> b'lLEDU\x84'
08/16/2022 02:50:06 PM daemon.py[line:111]DEBUG - send_json -> {'rep': {'device': 'm3', 'result': 'success'}}
08/16/2022 02:50:57 PM daemon.py[line:93]INFO - gui msg: {'req': {'command': 'lattice_led_control', 'led_ids': '101', 'device': 'm3', 'colour': [40, 0, 0]}}
08/16/2022 02:50:57 PM daemon.py[line:652]INFO - b'lw-\x01(\x00\x00\x01\x9cr'
08/16/2022 02:50:57 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 02:50:57 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 02:50:57 PM rcomm.py[line:143]INFO - data -> b'lLEDU\x84'
08/16/2022 02:50:57 PM daemon.py[line:658]DEBUG - r -> b'lLEDU\x84'
08/16/2022 02:50:57 PM daemon.py[line:111]DEBUG - send_json -> {'rep': {'device': 'm3', 'result': 'success'}}
08/16/2022 02:50:57 PM daemon.py[line:93]INFO - gui msg: {'req': {'command': 'lattice_led_control', 'led_ids': '102', 'device': 'm3', 'colour': [40, 0, 0]}}
08/16/2022 02:50:57 PM daemon.py[line:652]INFO - b'lw-\x01(\x00\x00\x02\xffB'
08/16/2022 02:50:57 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 02:50:57 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 02:50:57 PM rcomm.py[line:143]INFO - data -> b'lLEDU\x84'
08/16/2022 02:50:57 PM daemon.py[line:658]DEBUG - r -> b'lLEDU\x84'
08/16/2022 02:50:57 PM daemon.py[line:111]DEBUG - send_json -> {'rep': {'device': 'm3', 'result': 'success'}}
08/16/2022 02:51:36 PM daemon.py[line:93]INFO - gui msg: {'req': {'command': 'lattice_led_control', 'led_ids': '101', 'device': 'm3', 'colour': [40, 0, 0]}}
08/16/2022 02:51:36 PM daemon.py[line:652]INFO - b'lw-\x01(\x00\x00\x01\x9cr'
08/16/2022 02:51:36 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 02:51:36 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 02:51:36 PM rcomm.py[line:143]INFO - data -> b'lLEDU\x84'
08/16/2022 02:51:36 PM daemon.py[line:658]DEBUG - r -> b'lLEDU\x84'
08/16/2022 02:51:36 PM daemon.py[line:111]DEBUG - send_json -> {'rep': {'device': 'm3', 'result': 'success'}}
08/16/2022 02:51:37 PM daemon.py[line:93]INFO - gui msg: {'req': {'command': 'lattice_led_control', 'led_ids': '102', 'device': 'm3', 'colour': [40, 0, 0]}}
08/16/2022 02:51:37 PM daemon.py[line:652]INFO - b'lw-\x01(\x00\x00\x02\xffB'
08/16/2022 02:51:37 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 02:51:37 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 02:51:37 PM rcomm.py[line:143]INFO - data -> b'lLEDU\x84'
08/16/2022 02:51:37 PM daemon.py[line:658]DEBUG - r -> b'lLEDU\x84'
08/16/2022 02:51:37 PM daemon.py[line:111]DEBUG - send_json -> {'rep': {'device': 'm3', 'result': 'success'}}
08/16/2022 02:51:37 PM daemon.py[line:93]INFO - gui msg: {'req': {'command': 'lattice_led_control', 'led_ids': '103', 'device': 'm3', 'colour': [40, 0, 0]}}
08/16/2022 02:51:37 PM daemon.py[line:652]INFO - b'lw-\x01(\x00\x00\x03\xdeR'
08/16/2022 02:51:37 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 02:51:37 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 02:51:37 PM rcomm.py[line:143]INFO - data -> b'lLEDU\x84'
08/16/2022 02:51:37 PM daemon.py[line:658]DEBUG - r -> b'lLEDU\x84'
08/16/2022 02:51:37 PM daemon.py[line:111]DEBUG - send_json -> {'rep': {'device': 'm3', 'result': 'success'}}
08/16/2022 02:51:38 PM daemon.py[line:93]INFO - gui msg: {'req': {'command': 'lattice_led_control', 'led_ids': '104', 'device': 'm3', 'colour': [40, 0, 0]}}
08/16/2022 02:51:38 PM daemon.py[line:652]INFO - b'lw-\x01(\x00\x00\x049"'
08/16/2022 02:51:38 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 02:51:38 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 02:51:38 PM rcomm.py[line:143]INFO - data -> b'lLEDU\x84'
08/16/2022 02:51:38 PM daemon.py[line:658]DEBUG - r -> b'lLEDU\x84'
08/16/2022 02:51:38 PM daemon.py[line:111]DEBUG - send_json -> {'rep': {'device': 'm3', 'result': 'success'}}
08/16/2022 02:51:38 PM daemon.py[line:93]INFO - gui msg: {'req': {'command': 'lattice_led_control', 'led_ids': '105', 'device': 'm3', 'colour': [40, 0, 0]}}
08/16/2022 02:51:38 PM daemon.py[line:652]INFO - b'lw-\x01(\x00\x00\x08\xb5\xe3'
08/16/2022 02:51:38 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 02:51:38 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 02:51:38 PM rcomm.py[line:143]INFO - data -> b'lLEDU\x84'
08/16/2022 02:51:38 PM daemon.py[line:658]DEBUG - r -> b'lLEDU\x84'
08/16/2022 02:51:38 PM daemon.py[line:111]DEBUG - send_json -> {'rep': {'device': 'm3', 'result': 'success'}}
08/16/2022 02:51:39 PM daemon.py[line:93]INFO - gui msg: {'req': {'command': 'lattice_led_control', 'led_ids': '106', 'device': 'm3', 'colour': [40, 0, 0]}}
08/16/2022 02:51:39 PM daemon.py[line:652]INFO - b'lw-\x01(\x00\x00\t\x94\xf3'
08/16/2022 02:51:39 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 02:51:39 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 02:51:39 PM rcomm.py[line:143]INFO - data -> b'lLEDU\x84'
08/16/2022 02:51:39 PM daemon.py[line:658]DEBUG - r -> b'lLEDU\x84'
08/16/2022 02:51:39 PM daemon.py[line:111]DEBUG - send_json -> {'rep': {'device': 'm3', 'result': 'success'}}
08/16/2022 02:51:39 PM daemon.py[line:93]INFO - gui msg: {'req': {'command': 'lattice_led_control', 'led_ids': '107', 'device': 'm3', 'colour': [40, 0, 0]}}
08/16/2022 02:51:39 PM daemon.py[line:652]INFO - b'lw-\x01(\x00\x00\n\xf7\xc3'
08/16/2022 02:51:39 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 02:51:39 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 02:51:39 PM rcomm.py[line:143]INFO - data -> b'lLEDU\x84'
08/16/2022 02:51:39 PM daemon.py[line:658]DEBUG - r -> b'lLEDU\x84'
08/16/2022 02:51:39 PM daemon.py[line:111]DEBUG - send_json -> {'rep': {'device': 'm3', 'result': 'success'}}
08/16/2022 02:52:58 PM daemon.py[line:93]INFO - gui msg: {'req': {'command': 'lattice_led_control', 'led_ids': '101', 'device': 'm3', 'colour': [40, 0, 0]}}
08/16/2022 02:52:58 PM daemon.py[line:652]INFO - b'lw-\x01(\x00\x00\x01\x9cr'
08/16/2022 02:52:58 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 02:52:58 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 02:52:58 PM rcomm.py[line:143]INFO - data -> b'lLEDU\x84'
08/16/2022 02:52:58 PM daemon.py[line:658]DEBUG - r -> b'lLEDU\x84'
08/16/2022 02:52:58 PM daemon.py[line:111]DEBUG - send_json -> {'rep': {'device': 'm3', 'result': 'success'}}
08/16/2022 02:52:58 PM daemon.py[line:93]INFO - gui msg: {'req': {'command': 'lattice_led_control', 'led_ids': '102', 'device': 'm3', 'colour': [40, 0, 0]}}
08/16/2022 02:52:58 PM daemon.py[line:652]INFO - b'lw-\x01(\x00\x00\x02\xffB'
08/16/2022 02:52:58 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 02:52:58 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 02:52:58 PM rcomm.py[line:143]INFO - data -> b'lLEDU\x84'
08/16/2022 02:52:58 PM daemon.py[line:658]DEBUG - r -> b'lLEDU\x84'
08/16/2022 02:52:58 PM daemon.py[line:111]DEBUG - send_json -> {'rep': {'device': 'm3', 'result': 'success'}}
08/16/2022 02:52:59 PM daemon.py[line:93]INFO - gui msg: {'req': {'command': 'lattice_led_control', 'led_ids': '103', 'device': 'm3', 'colour': [40, 0, 0]}}
08/16/2022 02:52:59 PM daemon.py[line:652]INFO - b'lw-\x01(\x00\x00\x03\xdeR'
08/16/2022 02:52:59 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 02:52:59 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 02:52:59 PM rcomm.py[line:143]INFO - data -> b'lLEDU\x84'
08/16/2022 02:52:59 PM daemon.py[line:658]DEBUG - r -> b'lLEDU\x84'
08/16/2022 02:52:59 PM daemon.py[line:111]DEBUG - send_json -> {'rep': {'device': 'm3', 'result': 'success'}}
08/16/2022 02:52:59 PM daemon.py[line:93]INFO - gui msg: {'req': {'command': 'lattice_led_control', 'led_ids': '104', 'device': 'm3', 'colour': [40, 0, 0]}}
08/16/2022 02:52:59 PM daemon.py[line:652]INFO - b'lw-\x01(\x00\x00\x049"'
08/16/2022 02:52:59 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 02:53:00 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 02:53:00 PM rcomm.py[line:143]INFO - data -> b'lLEDU\x84'
08/16/2022 02:53:00 PM daemon.py[line:658]DEBUG - r -> b'lLEDU\x84'
08/16/2022 02:53:00 PM daemon.py[line:111]DEBUG - send_json -> {'rep': {'device': 'm3', 'result': 'success'}}
08/16/2022 02:53:00 PM daemon.py[line:93]INFO - gui msg: {'req': {'command': 'lattice_led_control', 'led_ids': '105', 'device': 'm3', 'colour': [40, 0, 0]}}
08/16/2022 02:53:00 PM daemon.py[line:652]INFO - b'lw-\x01(\x00\x00\x08\xb5\xe3'
08/16/2022 02:53:00 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 02:53:00 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 02:53:00 PM rcomm.py[line:143]INFO - data -> b'lLEDU\x84'
08/16/2022 02:53:00 PM daemon.py[line:658]DEBUG - r -> b'lLEDU\x84'
08/16/2022 02:53:00 PM daemon.py[line:111]DEBUG - send_json -> {'rep': {'device': 'm3', 'result': 'success'}}
08/16/2022 02:53:01 PM daemon.py[line:93]INFO - gui msg: {'req': {'command': 'lattice_led_control', 'led_ids': '106', 'device': 'm3', 'colour': [40, 0, 0]}}
08/16/2022 02:53:01 PM daemon.py[line:652]INFO - b'lw-\x01(\x00\x00\t\x94\xf3'
08/16/2022 02:53:01 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 02:53:01 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 02:53:01 PM rcomm.py[line:143]INFO - data -> b'lLEDU\x84'
08/16/2022 02:53:01 PM daemon.py[line:658]DEBUG - r -> b'lLEDU\x84'
08/16/2022 02:53:01 PM daemon.py[line:111]DEBUG - send_json -> {'rep': {'device': 'm3', 'result': 'success'}}
08/16/2022 02:53:01 PM daemon.py[line:93]INFO - gui msg: {'req': {'command': 'lattice_led_control', 'led_ids': '107', 'device': 'm3', 'colour': [40, 0, 0]}}
08/16/2022 02:53:01 PM daemon.py[line:652]INFO - b'lw-\x01(\x00\x00\n\xf7\xc3'
08/16/2022 02:53:01 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 02:53:01 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 02:53:01 PM rcomm.py[line:143]INFO - data -> b'lLEDU\x84'
08/16/2022 02:53:01 PM daemon.py[line:658]DEBUG - r -> b'lLEDU\x84'
08/16/2022 02:53:01 PM daemon.py[line:111]DEBUG - send_json -> {'rep': {'device': 'm3', 'result': 'success'}}
08/16/2022 02:54:09 PM daemon.py[line:93]INFO - gui msg: {'req': {'command': 'lattice_led_control', 'led_ids': '101', 'device': 'm3', 'colour': [0, 0, 0]}}
08/16/2022 02:54:09 PM daemon.py[line:652]INFO - b'lw-\x01\x00\x00\x00\x01\x11\xc0'
08/16/2022 02:54:09 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 02:54:09 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 02:54:09 PM rcomm.py[line:143]INFO - data -> b'lLEDU\x84'
08/16/2022 02:54:09 PM daemon.py[line:658]DEBUG - r -> b'lLEDU\x84'
08/16/2022 02:54:09 PM daemon.py[line:111]DEBUG - send_json -> {'rep': {'device': 'm3', 'result': 'success'}}
08/16/2022 02:54:10 PM daemon.py[line:93]INFO - gui msg: {'req': {'command': 'lattice_led_control', 'led_ids': '102', 'device': 'm3', 'colour': [0, 0, 0]}}
08/16/2022 02:54:10 PM daemon.py[line:652]INFO - b'lw-\x01\x00\x00\x00\x02r\xf0'
08/16/2022 02:54:10 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 02:54:10 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 02:54:10 PM rcomm.py[line:143]INFO - data -> b'lLEDU\x84'
08/16/2022 02:54:10 PM daemon.py[line:658]DEBUG - r -> b'lLEDU\x84'
08/16/2022 02:54:10 PM daemon.py[line:111]DEBUG - send_json -> {'rep': {'device': 'm3', 'result': 'success'}}
08/16/2022 02:54:10 PM daemon.py[line:93]INFO - gui msg: {'req': {'command': 'lattice_led_control', 'led_ids': '103', 'device': 'm3', 'colour': [0, 0, 0]}}
08/16/2022 02:54:10 PM daemon.py[line:652]INFO - b'lw-\x01\x00\x00\x00\x03S\xe0'
08/16/2022 02:54:10 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 02:54:10 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 02:54:10 PM rcomm.py[line:143]INFO - data -> b'lLEDU\x84'
08/16/2022 02:54:10 PM daemon.py[line:658]DEBUG - r -> b'lLEDU\x84'
08/16/2022 02:54:10 PM daemon.py[line:111]DEBUG - send_json -> {'rep': {'device': 'm3', 'result': 'success'}}
08/16/2022 02:54:11 PM daemon.py[line:93]INFO - gui msg: {'req': {'command': 'lattice_led_control', 'led_ids': '104', 'device': 'm3', 'colour': [0, 0, 0]}}
08/16/2022 02:54:11 PM daemon.py[line:652]INFO - b'lw-\x01\x00\x00\x00\x04\xb4\x90'
08/16/2022 02:54:11 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 02:54:11 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 02:54:11 PM rcomm.py[line:143]INFO - data -> b'lLEDU\x84'
08/16/2022 02:54:11 PM daemon.py[line:658]DEBUG - r -> b'lLEDU\x84'
08/16/2022 02:54:11 PM daemon.py[line:111]DEBUG - send_json -> {'rep': {'device': 'm3', 'result': 'success'}}
08/16/2022 02:54:11 PM daemon.py[line:93]INFO - gui msg: {'req': {'command': 'lattice_led_control', 'led_ids': '105', 'device': 'm3', 'colour': [0, 0, 0]}}
08/16/2022 02:54:11 PM daemon.py[line:652]INFO - b'lw-\x01\x00\x00\x00\x088Q'
08/16/2022 02:54:11 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 02:54:11 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 02:54:12 PM rcomm.py[line:143]INFO - data -> b'lLEDU\x84'
08/16/2022 02:54:12 PM daemon.py[line:658]DEBUG - r -> b'lLEDU\x84'
08/16/2022 02:54:12 PM daemon.py[line:111]DEBUG - send_json -> {'rep': {'device': 'm3', 'result': 'success'}}
08/16/2022 02:54:12 PM daemon.py[line:93]INFO - gui msg: {'req': {'command': 'lattice_led_control', 'led_ids': '106', 'device': 'm3', 'colour': [0, 0, 0]}}
08/16/2022 02:54:12 PM daemon.py[line:652]INFO - b'lw-\x01\x00\x00\x00\t\x19A'
08/16/2022 02:54:12 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 02:54:12 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 02:54:12 PM rcomm.py[line:143]INFO - data -> b'lLEDU\x84'
08/16/2022 02:54:12 PM daemon.py[line:658]DEBUG - r -> b'lLEDU\x84'
08/16/2022 02:54:12 PM daemon.py[line:111]DEBUG - send_json -> {'rep': {'device': 'm3', 'result': 'success'}}
08/16/2022 02:54:13 PM daemon.py[line:93]INFO - gui msg: {'req': {'command': 'lattice_led_control', 'led_ids': '107', 'device': 'm3', 'colour': [0, 0, 0]}}
08/16/2022 02:54:13 PM daemon.py[line:652]INFO - b'lw-\x01\x00\x00\x00\nzq'
08/16/2022 02:54:13 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 02:54:13 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 02:54:13 PM rcomm.py[line:143]INFO - data -> b'lLEDU\x84'
08/16/2022 02:54:13 PM daemon.py[line:658]DEBUG - r -> b'lLEDU\x84'
08/16/2022 02:54:13 PM daemon.py[line:111]DEBUG - send_json -> {'rep': {'device': 'm3', 'result': 'success'}}
08/16/2022 02:57:10 PM serv.py[line:49]INFO - serv heatbeat
08/16/2022 02:57:53 PM daemon.py[line:93]INFO - gui msg: {'req': {'command': 'lattice_led_control', 'led_ids': '101', 'device': 'm3', 'colour': [0, 0, 0]}}
08/16/2022 02:57:53 PM daemon.py[line:652]INFO - b'lw-\x01\x00\x00\x00\x01\x11\xc0'
08/16/2022 02:57:53 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 02:57:53 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 02:57:53 PM rcomm.py[line:143]INFO - data -> b'lLEDU\x84'
08/16/2022 02:57:53 PM daemon.py[line:658]DEBUG - r -> b'lLEDU\x84'
08/16/2022 02:57:53 PM daemon.py[line:111]DEBUG - send_json -> {'rep': {'device': 'm3', 'result': 'success'}}
08/16/2022 02:57:54 PM daemon.py[line:93]INFO - gui msg: {'req': {'command': 'lattice_led_control', 'led_ids': '102', 'device': 'm3', 'colour': [0, 0, 0]}}
08/16/2022 02:57:54 PM daemon.py[line:652]INFO - b'lw-\x01\x00\x00\x00\x02r\xf0'
08/16/2022 02:57:54 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 02:57:54 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 02:57:54 PM rcomm.py[line:143]INFO - data -> b'lLEDU\x84'
08/16/2022 02:57:54 PM daemon.py[line:658]DEBUG - r -> b'lLEDU\x84'
08/16/2022 02:57:54 PM daemon.py[line:111]DEBUG - send_json -> {'rep': {'device': 'm3', 'result': 'success'}}
08/16/2022 02:57:54 PM daemon.py[line:93]INFO - gui msg: {'req': {'command': 'lattice_led_control', 'led_ids': '103', 'device': 'm3', 'colour': [0, 0, 0]}}
08/16/2022 02:57:54 PM daemon.py[line:652]INFO - b'lw-\x01\x00\x00\x00\x03S\xe0'
08/16/2022 02:57:54 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 02:57:54 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 02:57:55 PM rcomm.py[line:143]INFO - data -> b'lLEDU\x84'
08/16/2022 02:57:55 PM daemon.py[line:658]DEBUG - r -> b'lLEDU\x84'
08/16/2022 02:57:55 PM daemon.py[line:111]DEBUG - send_json -> {'rep': {'device': 'm3', 'result': 'success'}}
08/16/2022 02:57:55 PM daemon.py[line:93]INFO - gui msg: {'req': {'command': 'lattice_led_control', 'led_ids': '104', 'device': 'm3', 'colour': [0, 0, 0]}}
08/16/2022 02:57:55 PM daemon.py[line:652]INFO - b'lw-\x01\x00\x00\x00\x04\xb4\x90'
08/16/2022 02:57:55 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 02:57:55 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 02:57:55 PM rcomm.py[line:143]INFO - data -> b'lLEDU\x84'
08/16/2022 02:57:55 PM daemon.py[line:658]DEBUG - r -> b'lLEDU\x84'
08/16/2022 02:57:55 PM daemon.py[line:111]DEBUG - send_json -> {'rep': {'device': 'm3', 'result': 'success'}}
08/16/2022 02:57:56 PM daemon.py[line:93]INFO - gui msg: {'req': {'command': 'lattice_led_control', 'led_ids': '105', 'device': 'm3', 'colour': [0, 0, 0]}}
08/16/2022 02:57:56 PM daemon.py[line:652]INFO - b'lw-\x01\x00\x00\x00\x088Q'
08/16/2022 02:57:56 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 02:57:56 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 02:57:56 PM rcomm.py[line:143]INFO - data -> b'lLEDU\x84'
08/16/2022 02:57:56 PM daemon.py[line:658]DEBUG - r -> b'lLEDU\x84'
08/16/2022 02:57:56 PM daemon.py[line:111]DEBUG - send_json -> {'rep': {'device': 'm3', 'result': 'success'}}
08/16/2022 02:57:56 PM daemon.py[line:93]INFO - gui msg: {'req': {'command': 'lattice_led_control', 'led_ids': '106', 'device': 'm3', 'colour': [0, 0, 0]}}
08/16/2022 02:57:56 PM daemon.py[line:652]INFO - b'lw-\x01\x00\x00\x00\t\x19A'
08/16/2022 02:57:56 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 02:57:56 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 02:57:56 PM rcomm.py[line:143]INFO - data -> b'lLEDU\x84'
08/16/2022 02:57:56 PM daemon.py[line:658]DEBUG - r -> b'lLEDU\x84'
08/16/2022 02:57:56 PM daemon.py[line:111]DEBUG - send_json -> {'rep': {'device': 'm3', 'result': 'success'}}
08/16/2022 02:57:57 PM daemon.py[line:93]INFO - gui msg: {'req': {'command': 'lattice_led_control', 'led_ids': '107', 'device': 'm3', 'colour': [0, 0, 0]}}
08/16/2022 02:57:57 PM daemon.py[line:652]INFO - b'lw-\x01\x00\x00\x00\nzq'
08/16/2022 02:57:57 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 02:57:57 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 02:57:57 PM rcomm.py[line:143]INFO - data -> b'lLEDU\x84'
08/16/2022 02:57:57 PM daemon.py[line:658]DEBUG - r -> b'lLEDU\x84'
08/16/2022 02:57:57 PM daemon.py[line:111]DEBUG - send_json -> {'rep': {'device': 'm3', 'result': 'success'}}
08/16/2022 02:58:14 PM daemon.py[line:93]INFO - gui msg: {'req': {'command': 'lattice_led_control', 'led_ids': '101', 'device': 'm3', 'colour': [40, 0, 0]}}
08/16/2022 02:58:14 PM daemon.py[line:652]INFO - b'lw-\x01(\x00\x00\x01\x9cr'
08/16/2022 02:58:14 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 02:58:14 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 02:58:14 PM rcomm.py[line:143]INFO - data -> b'lLEDU\x84'
08/16/2022 02:58:14 PM daemon.py[line:658]DEBUG - r -> b'lLEDU\x84'
08/16/2022 02:58:14 PM daemon.py[line:111]DEBUG - send_json -> {'rep': {'device': 'm3', 'result': 'success'}}
08/16/2022 02:58:15 PM daemon.py[line:93]INFO - gui msg: {'req': {'command': 'lattice_led_control', 'led_ids': '102', 'device': 'm3', 'colour': [40, 0, 0]}}
08/16/2022 02:58:15 PM daemon.py[line:652]INFO - b'lw-\x01(\x00\x00\x02\xffB'
08/16/2022 02:58:15 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 02:58:15 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 02:58:15 PM rcomm.py[line:143]INFO - data -> b'lLEDU\x84'
08/16/2022 02:58:15 PM daemon.py[line:658]DEBUG - r -> b'lLEDU\x84'
08/16/2022 02:58:15 PM daemon.py[line:111]DEBUG - send_json -> {'rep': {'device': 'm3', 'result': 'success'}}
08/16/2022 02:58:15 PM daemon.py[line:93]INFO - gui msg: {'req': {'command': 'lattice_led_control', 'led_ids': '103', 'device': 'm3', 'colour': [40, 0, 0]}}
08/16/2022 02:58:15 PM daemon.py[line:652]INFO - b'lw-\x01(\x00\x00\x03\xdeR'
08/16/2022 02:58:15 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 02:58:15 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 02:58:15 PM rcomm.py[line:143]INFO - data -> b'lLEDU\x84'
08/16/2022 02:58:15 PM daemon.py[line:658]DEBUG - r -> b'lLEDU\x84'
08/16/2022 02:58:15 PM daemon.py[line:111]DEBUG - send_json -> {'rep': {'device': 'm3', 'result': 'success'}}
08/16/2022 02:58:16 PM daemon.py[line:93]INFO - gui msg: {'req': {'command': 'lattice_led_control', 'led_ids': '104', 'device': 'm3', 'colour': [40, 0, 0]}}
08/16/2022 02:58:16 PM daemon.py[line:652]INFO - b'lw-\x01(\x00\x00\x049"'
08/16/2022 02:58:16 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 02:58:16 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 02:58:16 PM rcomm.py[line:143]INFO - data -> b'lLEDU\x84'
08/16/2022 02:58:16 PM daemon.py[line:658]DEBUG - r -> b'lLEDU\x84'
08/16/2022 02:58:16 PM daemon.py[line:111]DEBUG - send_json -> {'rep': {'device': 'm3', 'result': 'success'}}
08/16/2022 02:58:16 PM daemon.py[line:93]INFO - gui msg: {'req': {'command': 'lattice_led_control', 'led_ids': '105', 'device': 'm3', 'colour': [40, 0, 0]}}
08/16/2022 02:58:16 PM daemon.py[line:652]INFO - b'lw-\x01(\x00\x00\x08\xb5\xe3'
08/16/2022 02:58:16 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 02:58:16 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 02:58:16 PM rcomm.py[line:143]INFO - data -> b'lLEDU\x84'
08/16/2022 02:58:16 PM daemon.py[line:658]DEBUG - r -> b'lLEDU\x84'
08/16/2022 02:58:16 PM daemon.py[line:111]DEBUG - send_json -> {'rep': {'device': 'm3', 'result': 'success'}}
08/16/2022 02:58:17 PM daemon.py[line:93]INFO - gui msg: {'req': {'command': 'lattice_led_control', 'led_ids': '106', 'device': 'm3', 'colour': [40, 0, 0]}}
08/16/2022 02:58:17 PM daemon.py[line:652]INFO - b'lw-\x01(\x00\x00\t\x94\xf3'
08/16/2022 02:58:17 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 02:58:17 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 02:58:17 PM rcomm.py[line:143]INFO - data -> b'lLEDU\x84'
08/16/2022 02:58:17 PM daemon.py[line:658]DEBUG - r -> b'lLEDU\x84'
08/16/2022 02:58:17 PM daemon.py[line:111]DEBUG - send_json -> {'rep': {'device': 'm3', 'result': 'success'}}
08/16/2022 02:58:18 PM daemon.py[line:93]INFO - gui msg: {'req': {'command': 'lattice_led_control', 'led_ids': '107', 'device': 'm3', 'colour': [40, 0, 0]}}
08/16/2022 02:58:18 PM daemon.py[line:652]INFO - b'lw-\x01(\x00\x00\n\xf7\xc3'
08/16/2022 02:58:18 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 02:58:18 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 02:58:18 PM rcomm.py[line:143]INFO - data -> b'lLEDU\x84'
08/16/2022 02:58:18 PM daemon.py[line:658]DEBUG - r -> b'lLEDU\x84'
08/16/2022 02:58:18 PM daemon.py[line:111]DEBUG - send_json -> {'rep': {'device': 'm3', 'result': 'success'}}
08/16/2022 03:00:11 PM daemon.py[line:93]INFO - gui msg: {'req': {'command': 'lattice_led_control', 'led_ids': '101', 'device': 'm3', 'colour': [40, 0, 0]}}
08/16/2022 03:00:11 PM daemon.py[line:652]INFO - b'lw-\x01(\x00\x00\x01\x9cr'
08/16/2022 03:00:11 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 03:00:11 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 03:00:11 PM rcomm.py[line:143]INFO - data -> b'lLEDU\x84'
08/16/2022 03:00:11 PM daemon.py[line:658]DEBUG - r -> b'lLEDU\x84'
08/16/2022 03:00:11 PM daemon.py[line:111]DEBUG - send_json -> {'rep': {'device': 'm3', 'result': 'success'}}
08/16/2022 03:00:12 PM daemon.py[line:93]INFO - gui msg: {'req': {'command': 'lattice_led_control', 'led_ids': '102', 'device': 'm3', 'colour': [40, 0, 0]}}
08/16/2022 03:00:12 PM daemon.py[line:652]INFO - b'lw-\x01(\x00\x00\x02\xffB'
08/16/2022 03:00:12 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 03:00:12 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 03:00:12 PM rcomm.py[line:143]INFO - data -> b'lLEDU\x84'
08/16/2022 03:00:12 PM daemon.py[line:658]DEBUG - r -> b'lLEDU\x84'
08/16/2022 03:00:12 PM daemon.py[line:111]DEBUG - send_json -> {'rep': {'device': 'm3', 'result': 'success'}}
08/16/2022 03:00:12 PM daemon.py[line:93]INFO - gui msg: {'req': {'command': 'lattice_led_control', 'led_ids': '103', 'device': 'm3', 'colour': [40, 0, 0]}}
08/16/2022 03:00:12 PM daemon.py[line:652]INFO - b'lw-\x01(\x00\x00\x03\xdeR'
08/16/2022 03:00:12 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 03:00:12 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 03:00:12 PM rcomm.py[line:143]INFO - data -> b'lLEDU\x84'
08/16/2022 03:00:12 PM daemon.py[line:658]DEBUG - r -> b'lLEDU\x84'
08/16/2022 03:00:12 PM daemon.py[line:111]DEBUG - send_json -> {'rep': {'device': 'm3', 'result': 'success'}}
08/16/2022 03:00:13 PM daemon.py[line:93]INFO - gui msg: {'req': {'command': 'lattice_led_control', 'led_ids': '104', 'device': 'm3', 'colour': [40, 0, 0]}}
08/16/2022 03:00:13 PM daemon.py[line:652]INFO - b'lw-\x01(\x00\x00\x049"'
08/16/2022 03:00:13 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 03:00:13 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 03:00:13 PM rcomm.py[line:143]INFO - data -> b'lLEDU\x84'
08/16/2022 03:00:13 PM daemon.py[line:658]DEBUG - r -> b'lLEDU\x84'
08/16/2022 03:00:13 PM daemon.py[line:111]DEBUG - send_json -> {'rep': {'device': 'm3', 'result': 'success'}}
08/16/2022 03:00:13 PM daemon.py[line:93]INFO - gui msg: {'req': {'command': 'lattice_led_control', 'led_ids': '105', 'device': 'm3', 'colour': [40, 0, 0]}}
08/16/2022 03:00:13 PM daemon.py[line:652]INFO - b'lw-\x01(\x00\x00\x08\xb5\xe3'
08/16/2022 03:00:13 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 03:00:14 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 03:00:14 PM rcomm.py[line:143]INFO - data -> b'lLEDU\x84'
08/16/2022 03:00:14 PM daemon.py[line:658]DEBUG - r -> b'lLEDU\x84'
08/16/2022 03:00:14 PM daemon.py[line:111]DEBUG - send_json -> {'rep': {'device': 'm3', 'result': 'success'}}
08/16/2022 03:00:14 PM daemon.py[line:93]INFO - gui msg: {'req': {'command': 'lattice_led_control', 'led_ids': '106', 'device': 'm3', 'colour': [40, 0, 0]}}
08/16/2022 03:00:14 PM daemon.py[line:652]INFO - b'lw-\x01(\x00\x00\t\x94\xf3'
08/16/2022 03:00:14 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 03:00:14 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 03:00:14 PM rcomm.py[line:143]INFO - data -> b'lLEDU\x84'
08/16/2022 03:00:14 PM daemon.py[line:658]DEBUG - r -> b'lLEDU\x84'
08/16/2022 03:00:14 PM daemon.py[line:111]DEBUG - send_json -> {'rep': {'device': 'm3', 'result': 'success'}}
08/16/2022 03:00:15 PM daemon.py[line:93]INFO - gui msg: {'req': {'command': 'lattice_led_control', 'led_ids': '107', 'device': 'm3', 'colour': [40, 0, 0]}}
08/16/2022 03:00:15 PM daemon.py[line:652]INFO - b'lw-\x01(\x00\x00\n\xf7\xc3'
08/16/2022 03:00:15 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 03:00:15 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 03:00:15 PM rcomm.py[line:143]INFO - data -> b'lLEDU\x84'
08/16/2022 03:00:15 PM daemon.py[line:658]DEBUG - r -> b'lLEDU\x84'
08/16/2022 03:00:15 PM daemon.py[line:111]DEBUG - send_json -> {'rep': {'device': 'm3', 'result': 'success'}}
08/16/2022 03:00:29 PM daemon.py[line:93]INFO - gui msg: {'req': {'command': 'lattice_led_control', 'led_ids': '101', 'device': 'm3', 'colour': [0, 0, 0]}}
08/16/2022 03:00:29 PM daemon.py[line:652]INFO - b'lw-\x01\x00\x00\x00\x01\x11\xc0'
08/16/2022 03:00:29 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 03:00:29 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 03:00:29 PM rcomm.py[line:143]INFO - data -> b'lLEDU\x84'
08/16/2022 03:00:29 PM daemon.py[line:658]DEBUG - r -> b'lLEDU\x84'
08/16/2022 03:00:29 PM daemon.py[line:111]DEBUG - send_json -> {'rep': {'device': 'm3', 'result': 'success'}}
08/16/2022 03:00:29 PM daemon.py[line:93]INFO - gui msg: {'req': {'command': 'lattice_led_control', 'led_ids': '102', 'device': 'm3', 'colour': [0, 0, 0]}}
08/16/2022 03:00:29 PM daemon.py[line:652]INFO - b'lw-\x01\x00\x00\x00\x02r\xf0'
08/16/2022 03:00:29 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 03:00:29 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 03:00:29 PM rcomm.py[line:143]INFO - data -> b'lLEDU\x84'
08/16/2022 03:00:29 PM daemon.py[line:658]DEBUG - r -> b'lLEDU\x84'
08/16/2022 03:00:29 PM daemon.py[line:111]DEBUG - send_json -> {'rep': {'device': 'm3', 'result': 'success'}}
08/16/2022 03:00:30 PM daemon.py[line:93]INFO - gui msg: {'req': {'command': 'lattice_led_control', 'led_ids': '103', 'device': 'm3', 'colour': [0, 0, 0]}}
08/16/2022 03:00:30 PM daemon.py[line:652]INFO - b'lw-\x01\x00\x00\x00\x03S\xe0'
08/16/2022 03:00:30 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 03:00:30 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 03:00:30 PM rcomm.py[line:143]INFO - data -> b'lLEDU\x84'
08/16/2022 03:00:30 PM daemon.py[line:658]DEBUG - r -> b'lLEDU\x84'
08/16/2022 03:00:30 PM daemon.py[line:111]DEBUG - send_json -> {'rep': {'device': 'm3', 'result': 'success'}}
08/16/2022 03:00:30 PM daemon.py[line:93]INFO - gui msg: {'req': {'command': 'lattice_led_control', 'led_ids': '104', 'device': 'm3', 'colour': [0, 0, 0]}}
08/16/2022 03:00:30 PM daemon.py[line:652]INFO - b'lw-\x01\x00\x00\x00\x04\xb4\x90'
08/16/2022 03:00:30 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 03:00:30 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 03:00:30 PM rcomm.py[line:143]INFO - data -> b'lLEDU\x84'
08/16/2022 03:00:30 PM daemon.py[line:658]DEBUG - r -> b'lLEDU\x84'
08/16/2022 03:00:30 PM daemon.py[line:111]DEBUG - send_json -> {'rep': {'device': 'm3', 'result': 'success'}}
08/16/2022 03:00:31 PM daemon.py[line:93]INFO - gui msg: {'req': {'command': 'lattice_led_control', 'led_ids': '105', 'device': 'm3', 'colour': [0, 0, 0]}}
08/16/2022 03:00:31 PM daemon.py[line:652]INFO - b'lw-\x01\x00\x00\x00\x088Q'
08/16/2022 03:00:31 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 03:00:31 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 03:00:31 PM rcomm.py[line:143]INFO - data -> b'lLEDU\x84'
08/16/2022 03:00:31 PM daemon.py[line:658]DEBUG - r -> b'lLEDU\x84'
08/16/2022 03:00:31 PM daemon.py[line:111]DEBUG - send_json -> {'rep': {'device': 'm3', 'result': 'success'}}
08/16/2022 03:00:31 PM daemon.py[line:93]INFO - gui msg: {'req': {'command': 'lattice_led_control', 'led_ids': '106', 'device': 'm3', 'colour': [0, 0, 0]}}
08/16/2022 03:00:31 PM daemon.py[line:652]INFO - b'lw-\x01\x00\x00\x00\t\x19A'
08/16/2022 03:00:31 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 03:00:31 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 03:00:31 PM rcomm.py[line:143]INFO - data -> b'lLEDU\x84'
08/16/2022 03:00:31 PM daemon.py[line:658]DEBUG - r -> b'lLEDU\x84'
08/16/2022 03:00:31 PM daemon.py[line:111]DEBUG - send_json -> {'rep': {'device': 'm3', 'result': 'success'}}
08/16/2022 03:00:32 PM daemon.py[line:93]INFO - gui msg: {'req': {'command': 'lattice_led_control', 'led_ids': '107', 'device': 'm3', 'colour': [0, 0, 0]}}
08/16/2022 03:00:32 PM daemon.py[line:652]INFO - b'lw-\x01\x00\x00\x00\nzq'
08/16/2022 03:00:32 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 03:00:32 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 03:00:32 PM rcomm.py[line:143]INFO - data -> b'lLEDU\x84'
08/16/2022 03:00:32 PM daemon.py[line:658]DEBUG - r -> b'lLEDU\x84'
08/16/2022 03:00:32 PM daemon.py[line:111]DEBUG - send_json -> {'rep': {'device': 'm3', 'result': 'success'}}
08/16/2022 03:00:51 PM daemon.py[line:93]INFO - gui msg: {'req': {'command': 'lattice_led_control', 'led_ids': '201', 'device': 'm3', 'colour': [40, 0, 0]}}
08/16/2022 03:00:51 PM daemon.py[line:652]INFO - b'lw-\x01(\x00\x00\x12\xceP'
08/16/2022 03:00:51 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 03:00:51 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 03:00:51 PM rcomm.py[line:143]INFO - data -> b'lLEDU\x84'
08/16/2022 03:00:51 PM daemon.py[line:658]DEBUG - r -> b'lLEDU\x84'
08/16/2022 03:00:51 PM daemon.py[line:111]DEBUG - send_json -> {'rep': {'device': 'm3', 'result': 'success'}}
08/16/2022 03:00:52 PM daemon.py[line:93]INFO - gui msg: {'req': {'command': 'lattice_led_control', 'led_ids': '202', 'device': 'm3', 'colour': [40, 0, 0]}}
08/16/2022 03:00:52 PM daemon.py[line:652]INFO - b'lw-\x01(\x00\x00\x11\xad`'
08/16/2022 03:00:52 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 03:00:52 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 03:00:52 PM rcomm.py[line:143]INFO - data -> b'lLEDU\x84'
08/16/2022 03:00:52 PM daemon.py[line:658]DEBUG - r -> b'lLEDU\x84'
08/16/2022 03:00:52 PM daemon.py[line:111]DEBUG - send_json -> {'rep': {'device': 'm3', 'result': 'success'}}
08/16/2022 03:00:52 PM daemon.py[line:93]INFO - gui msg: {'req': {'command': 'lattice_led_control', 'led_ids': '203', 'device': 'm3', 'colour': [40, 0, 0]}}
08/16/2022 03:00:52 PM daemon.py[line:652]INFO - b'lw-\x01(\x00\x00\x10\x8cp'
08/16/2022 03:00:52 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 03:00:52 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 03:00:52 PM rcomm.py[line:143]INFO - data -> b'lLEDU\x84'
08/16/2022 03:00:52 PM daemon.py[line:658]DEBUG - r -> b'lLEDU\x84'
08/16/2022 03:00:52 PM daemon.py[line:111]DEBUG - send_json -> {'rep': {'device': 'm3', 'result': 'success'}}
08/16/2022 03:00:53 PM daemon.py[line:93]INFO - gui msg: {'req': {'command': 'lattice_led_control', 'led_ids': '204', 'device': 'm3', 'colour': [40, 0, 0]}}
08/16/2022 03:00:53 PM daemon.py[line:652]INFO - b'lw-\x01(\x00\x00\x0fR\x93'
08/16/2022 03:00:53 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 03:00:53 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 03:00:53 PM rcomm.py[line:143]INFO - data -> b'lLEDU\x84'
08/16/2022 03:00:53 PM daemon.py[line:658]DEBUG - r -> b'lLEDU\x84'
08/16/2022 03:00:53 PM daemon.py[line:111]DEBUG - send_json -> {'rep': {'device': 'm3', 'result': 'success'}}
08/16/2022 03:00:54 PM daemon.py[line:93]INFO - gui msg: {'req': {'command': 'lattice_led_control', 'led_ids': '205', 'device': 'm3', 'colour': [40, 0, 0]}}
08/16/2022 03:00:54 PM daemon.py[line:652]INFO - b'lw-\x03(\x00\x00\x05\x06\x07lJ'
08/16/2022 03:00:54 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 03:00:54 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 03:00:54 PM rcomm.py[line:143]INFO - data -> b'lLEDU\x84'
08/16/2022 03:00:54 PM daemon.py[line:658]DEBUG - r -> b'lLEDU\x84'
08/16/2022 03:00:54 PM daemon.py[line:111]DEBUG - send_json -> {'rep': {'device': 'm3', 'result': 'success'}}
08/16/2022 03:00:54 PM daemon.py[line:93]INFO - gui msg: {'req': {'command': 'lattice_led_control', 'led_ids': '206', 'device': 'm3', 'colour': [40, 0, 0]}}
08/16/2022 03:00:54 PM daemon.py[line:652]INFO - b'lw-\x01(\x00\x00\x0es\x83'
08/16/2022 03:00:54 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 03:00:54 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 03:00:54 PM rcomm.py[line:143]INFO - data -> b'lLEDU\x84'
08/16/2022 03:00:54 PM daemon.py[line:658]DEBUG - r -> b'lLEDU\x84'
08/16/2022 03:00:54 PM daemon.py[line:111]DEBUG - send_json -> {'rep': {'device': 'm3', 'result': 'success'}}
08/16/2022 03:00:55 PM daemon.py[line:93]INFO - gui msg: {'req': {'command': 'lattice_led_control', 'led_ids': '207', 'device': 'm3', 'colour': [40, 0, 0]}}
08/16/2022 03:00:55 PM daemon.py[line:652]INFO - b'lw-\x01(\x00\x00\r\x10\xb3'
08/16/2022 03:00:55 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 03:00:55 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 03:00:55 PM rcomm.py[line:143]INFO - data -> b'lLEDU\x84'
08/16/2022 03:00:55 PM daemon.py[line:658]DEBUG - r -> b'lLEDU\x84'
08/16/2022 03:00:55 PM daemon.py[line:111]DEBUG - send_json -> {'rep': {'device': 'm3', 'result': 'success'}}
08/16/2022 03:00:55 PM daemon.py[line:93]INFO - gui msg: {'req': {'command': 'lattice_led_control', 'led_ids': '208', 'device': 'm3', 'colour': [40, 0, 0]}}
08/16/2022 03:00:55 PM daemon.py[line:652]INFO - b'lw-\x01(\x00\x00\x0c1\xa3'
08/16/2022 03:00:55 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 03:00:55 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 03:00:55 PM rcomm.py[line:143]INFO - data -> b'lLEDU\x84'
08/16/2022 03:00:55 PM daemon.py[line:658]DEBUG - r -> b'lLEDU\x84'
08/16/2022 03:00:55 PM daemon.py[line:111]DEBUG - send_json -> {'rep': {'device': 'm3', 'result': 'success'}}
08/16/2022 03:00:56 PM daemon.py[line:93]INFO - gui msg: {'req': {'command': 'lattice_led_control', 'led_ids': '209', 'device': 'm3', 'colour': [40, 0, 0]}}
08/16/2022 03:00:56 PM daemon.py[line:652]INFO - b'lw-\x01(\x00\x00\x0b\xd6\xd3'
08/16/2022 03:00:56 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 03:00:56 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 03:00:56 PM rcomm.py[line:143]INFO - data -> b'lLEDU\x84'
08/16/2022 03:00:56 PM daemon.py[line:658]DEBUG - r -> b'lLEDU\x84'
08/16/2022 03:00:56 PM daemon.py[line:111]DEBUG - send_json -> {'rep': {'device': 'm3', 'result': 'success'}}
08/16/2022 03:01:14 PM daemon.py[line:93]INFO - gui msg: {'req': {'command': 'lattice_led_control', 'led_ids': '201', 'device': 'm3', 'colour': [0, 0, 0]}}
08/16/2022 03:01:14 PM daemon.py[line:652]INFO - b'lw-\x01\x00\x00\x00\x12C\xe2'
08/16/2022 03:01:14 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 03:01:14 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 03:01:14 PM rcomm.py[line:143]INFO - data -> b'lLEDU\x84'
08/16/2022 03:01:14 PM daemon.py[line:658]DEBUG - r -> b'lLEDU\x84'
08/16/2022 03:01:14 PM daemon.py[line:111]DEBUG - send_json -> {'rep': {'device': 'm3', 'result': 'success'}}
08/16/2022 03:01:14 PM daemon.py[line:93]INFO - gui msg: {'req': {'command': 'lattice_led_control', 'led_ids': '202', 'device': 'm3', 'colour': [0, 0, 0]}}
08/16/2022 03:01:14 PM daemon.py[line:652]INFO - b'lw-\x01\x00\x00\x00\x11 \xd2'
08/16/2022 03:01:14 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 03:01:14 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 03:01:15 PM rcomm.py[line:143]INFO - data -> b'lLEDU\x84'
08/16/2022 03:01:15 PM daemon.py[line:658]DEBUG - r -> b'lLEDU\x84'
08/16/2022 03:01:15 PM daemon.py[line:111]DEBUG - send_json -> {'rep': {'device': 'm3', 'result': 'success'}}
08/16/2022 03:01:15 PM daemon.py[line:93]INFO - gui msg: {'req': {'command': 'lattice_led_control', 'led_ids': '203', 'device': 'm3', 'colour': [0, 0, 0]}}
08/16/2022 03:01:15 PM daemon.py[line:652]INFO - b'lw-\x01\x00\x00\x00\x10\x01\xc2'
08/16/2022 03:01:15 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 03:01:15 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 03:01:15 PM rcomm.py[line:143]INFO - data -> b'lLEDU\x84'
08/16/2022 03:01:15 PM daemon.py[line:658]DEBUG - r -> b'lLEDU\x84'
08/16/2022 03:01:15 PM daemon.py[line:111]DEBUG - send_json -> {'rep': {'device': 'm3', 'result': 'success'}}
08/16/2022 03:01:16 PM daemon.py[line:93]INFO - gui msg: {'req': {'command': 'lattice_led_control', 'led_ids': '204', 'device': 'm3', 'colour': [0, 0, 0]}}
08/16/2022 03:01:16 PM daemon.py[line:652]INFO - b'lw-\x01\x00\x00\x00\x0f\xdf!'
08/16/2022 03:01:16 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 03:01:16 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 03:01:16 PM rcomm.py[line:143]INFO - data -> b'lLEDU\x84'
08/16/2022 03:01:16 PM daemon.py[line:658]DEBUG - r -> b'lLEDU\x84'
08/16/2022 03:01:16 PM daemon.py[line:111]DEBUG - send_json -> {'rep': {'device': 'm3', 'result': 'success'}}
08/16/2022 03:01:16 PM daemon.py[line:93]INFO - gui msg: {'req': {'command': 'lattice_led_control', 'led_ids': '205', 'device': 'm3', 'colour': [0, 0, 0]}}
08/16/2022 03:01:16 PM daemon.py[line:652]INFO - b'lw-\x03\x00\x00\x00\x05\x06\x07&r'
08/16/2022 03:01:16 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 03:01:16 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 03:01:16 PM rcomm.py[line:143]INFO - data -> b'lLEDU\x84'
08/16/2022 03:01:16 PM daemon.py[line:658]DEBUG - r -> b'lLEDU\x84'
08/16/2022 03:01:16 PM daemon.py[line:111]DEBUG - send_json -> {'rep': {'device': 'm3', 'result': 'success'}}
08/16/2022 03:01:17 PM daemon.py[line:93]INFO - gui msg: {'req': {'command': 'lattice_led_control', 'led_ids': '206', 'device': 'm3', 'colour': [0, 0, 0]}}
08/16/2022 03:01:17 PM daemon.py[line:652]INFO - b'lw-\x01\x00\x00\x00\x0e\xfe1'
08/16/2022 03:01:17 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 03:01:17 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 03:01:17 PM rcomm.py[line:143]INFO - data -> b'lLEDU\x84'
08/16/2022 03:01:17 PM daemon.py[line:658]DEBUG - r -> b'lLEDU\x84'
08/16/2022 03:01:17 PM daemon.py[line:111]DEBUG - send_json -> {'rep': {'device': 'm3', 'result': 'success'}}
08/16/2022 03:01:17 PM daemon.py[line:93]INFO - gui msg: {'req': {'command': 'lattice_led_control', 'led_ids': '207', 'device': 'm3', 'colour': [0, 0, 0]}}
08/16/2022 03:01:17 PM daemon.py[line:652]INFO - b'lw-\x01\x00\x00\x00\r\x9d\x01'
08/16/2022 03:01:17 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 03:01:17 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 03:01:17 PM rcomm.py[line:143]INFO - data -> b'lLEDU\x84'
08/16/2022 03:01:17 PM daemon.py[line:658]DEBUG - r -> b'lLEDU\x84'
08/16/2022 03:01:17 PM daemon.py[line:111]DEBUG - send_json -> {'rep': {'device': 'm3', 'result': 'success'}}
08/16/2022 03:01:18 PM daemon.py[line:93]INFO - gui msg: {'req': {'command': 'lattice_led_control', 'led_ids': '208', 'device': 'm3', 'colour': [0, 0, 0]}}
08/16/2022 03:01:18 PM daemon.py[line:652]INFO - b'lw-\x01\x00\x00\x00\x0c\xbc\x11'
08/16/2022 03:01:18 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 03:01:18 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 03:01:18 PM rcomm.py[line:143]INFO - data -> b'lLEDU\x84'
08/16/2022 03:01:18 PM daemon.py[line:658]DEBUG - r -> b'lLEDU\x84'
08/16/2022 03:01:18 PM daemon.py[line:111]DEBUG - send_json -> {'rep': {'device': 'm3', 'result': 'success'}}
08/16/2022 03:01:19 PM daemon.py[line:93]INFO - gui msg: {'req': {'command': 'lattice_led_control', 'led_ids': '209', 'device': 'm3', 'colour': [0, 0, 0]}}
08/16/2022 03:01:19 PM daemon.py[line:652]INFO - b'lw-\x01\x00\x00\x00\x0b[a'
08/16/2022 03:01:19 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 03:01:19 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 03:01:19 PM rcomm.py[line:143]INFO - data -> b'lLEDU\x84'
08/16/2022 03:01:19 PM daemon.py[line:658]DEBUG - r -> b'lLEDU\x84'
08/16/2022 03:01:19 PM daemon.py[line:111]DEBUG - send_json -> {'rep': {'device': 'm3', 'result': 'success'}}
08/16/2022 03:01:32 PM daemon.py[line:93]INFO - gui msg: {'req': {'command': 'lattice_led_control', 'led_ids': '301', 'device': 'm3', 'colour': [40, 0, 0]}}
08/16/2022 03:01:32 PM daemon.py[line:652]INFO - b'lw-\x01(\x00\x00\x13\xef@'
08/16/2022 03:01:32 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 03:01:32 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 03:01:32 PM rcomm.py[line:143]INFO - data -> b'lLEDU\x84'
08/16/2022 03:01:32 PM daemon.py[line:658]DEBUG - r -> b'lLEDU\x84'
08/16/2022 03:01:32 PM daemon.py[line:111]DEBUG - send_json -> {'rep': {'device': 'm3', 'result': 'success'}}
08/16/2022 03:01:32 PM daemon.py[line:93]INFO - gui msg: {'req': {'command': 'lattice_led_control', 'led_ids': '302', 'device': 'm3', 'colour': [40, 0, 0]}}
08/16/2022 03:01:32 PM daemon.py[line:652]INFO - b'lw-\x01(\x00\x00\x14\x080'
08/16/2022 03:01:32 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 03:01:32 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 03:01:32 PM rcomm.py[line:143]INFO - data -> b'lLEDU\x84'
08/16/2022 03:01:32 PM daemon.py[line:658]DEBUG - r -> b'lLEDU\x84'
08/16/2022 03:01:32 PM daemon.py[line:111]DEBUG - send_json -> {'rep': {'device': 'm3', 'result': 'success'}}
08/16/2022 03:01:33 PM daemon.py[line:93]INFO - gui msg: {'req': {'command': 'lattice_led_control', 'led_ids': '303', 'device': 'm3', 'colour': [40, 0, 0]}}
08/16/2022 03:01:33 PM daemon.py[line:652]INFO - b'lw-\x01(\x00\x00\x15) '
08/16/2022 03:01:33 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 03:01:33 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 03:01:33 PM rcomm.py[line:143]INFO - data -> b'lLEDU\x84'
08/16/2022 03:01:33 PM daemon.py[line:658]DEBUG - r -> b'lLEDU\x84'
08/16/2022 03:01:33 PM daemon.py[line:111]DEBUG - send_json -> {'rep': {'device': 'm3', 'result': 'success'}}
08/16/2022 03:01:33 PM daemon.py[line:93]INFO - gui msg: {'req': {'command': 'lattice_led_control', 'led_ids': '304', 'device': 'm3', 'colour': [40, 0, 0]}}
08/16/2022 03:01:33 PM daemon.py[line:652]INFO - b'lw-\x01(\x00\x00\x16J\x10'
08/16/2022 03:01:33 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 03:01:33 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 03:01:33 PM rcomm.py[line:143]INFO - data -> b'lLEDU\x84'
08/16/2022 03:01:33 PM daemon.py[line:658]DEBUG - r -> b'lLEDU\x84'
08/16/2022 03:01:33 PM daemon.py[line:111]DEBUG - send_json -> {'rep': {'device': 'm3', 'result': 'success'}}
08/16/2022 03:01:34 PM daemon.py[line:93]INFO - gui msg: {'req': {'command': 'lattice_led_control', 'led_ids': '305', 'device': 'm3', 'colour': [40, 0, 0]}}
08/16/2022 03:01:34 PM daemon.py[line:652]INFO - b'lw-\x01(\x00\x00\x17k\x00'
08/16/2022 03:01:34 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 03:01:34 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 03:01:34 PM rcomm.py[line:143]INFO - data -> b'lLEDU\x84'
08/16/2022 03:01:34 PM daemon.py[line:658]DEBUG - r -> b'lLEDU\x84'
08/16/2022 03:01:34 PM daemon.py[line:111]DEBUG - send_json -> {'rep': {'device': 'm3', 'result': 'success'}}
08/16/2022 03:01:34 PM daemon.py[line:93]INFO - gui msg: {'req': {'command': 'lattice_led_control', 'led_ids': '306', 'device': 'm3', 'colour': [40, 0, 0]}}
08/16/2022 03:01:34 PM daemon.py[line:652]INFO - b'lw-\x01(\x00\x00\x18\x84\xf1'
08/16/2022 03:01:34 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 03:01:34 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 03:01:35 PM rcomm.py[line:143]INFO - data -> b'lLEDU\x84'
08/16/2022 03:01:35 PM daemon.py[line:658]DEBUG - r -> b'lLEDU\x84'
08/16/2022 03:01:35 PM daemon.py[line:111]DEBUG - send_json -> {'rep': {'device': 'm3', 'result': 'success'}}
08/16/2022 03:01:35 PM daemon.py[line:93]INFO - gui msg: {'req': {'command': 'lattice_led_control', 'led_ids': '307', 'device': 'm3', 'colour': [40, 0, 0]}}
08/16/2022 03:01:35 PM daemon.py[line:652]INFO - b'lw-\x01(\x00\x00\x19\xa5\xe1'
08/16/2022 03:01:35 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 03:01:35 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 03:01:35 PM rcomm.py[line:143]INFO - data -> b'lLEDU\x84'
08/16/2022 03:01:35 PM daemon.py[line:658]DEBUG - r -> b'lLEDU\x84'
08/16/2022 03:01:35 PM daemon.py[line:111]DEBUG - send_json -> {'rep': {'device': 'm3', 'result': 'success'}}
08/16/2022 03:01:36 PM daemon.py[line:93]INFO - gui msg: {'req': {'command': 'lattice_led_control', 'led_ids': '308', 'device': 'm3', 'colour': [40, 0, 0]}}
08/16/2022 03:01:36 PM daemon.py[line:652]INFO - b'lw-\x01(\x00\x00\x1a\xc6\xd1'
08/16/2022 03:01:36 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 03:01:36 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 03:01:36 PM rcomm.py[line:143]INFO - data -> b'lLEDU\x84'
08/16/2022 03:01:36 PM daemon.py[line:658]DEBUG - r -> b'lLEDU\x84'
08/16/2022 03:01:36 PM daemon.py[line:111]DEBUG - send_json -> {'rep': {'device': 'm3', 'result': 'success'}}
08/16/2022 03:01:36 PM daemon.py[line:93]INFO - gui msg: {'req': {'command': 'lattice_led_control', 'led_ids': '309', 'device': 'm3', 'colour': [40, 0, 0]}}
08/16/2022 03:01:36 PM daemon.py[line:652]INFO - b'lw-\x01(\x00\x00\x1b\xe7\xc1'
08/16/2022 03:01:36 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 03:01:36 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 03:01:36 PM rcomm.py[line:143]INFO - data -> b'lLEDU\x84'
08/16/2022 03:01:36 PM daemon.py[line:658]DEBUG - r -> b'lLEDU\x84'
08/16/2022 03:01:36 PM daemon.py[line:111]DEBUG - send_json -> {'rep': {'device': 'm3', 'result': 'success'}}
08/16/2022 03:01:37 PM daemon.py[line:93]INFO - gui msg: {'req': {'command': 'lattice_led_control', 'led_ids': '310', 'device': 'm3', 'colour': [40, 0, 0]}}
08/16/2022 03:01:37 PM daemon.py[line:652]INFO - b'lw-\x01(\x00\x00\x1c\x00\xb1'
08/16/2022 03:01:37 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 03:01:37 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 03:01:37 PM rcomm.py[line:143]INFO - data -> b'lLEDU\x84'
08/16/2022 03:01:37 PM daemon.py[line:658]DEBUG - r -> b'lLEDU\x84'
08/16/2022 03:01:37 PM daemon.py[line:111]DEBUG - send_json -> {'rep': {'device': 'm3', 'result': 'success'}}
08/16/2022 03:01:37 PM daemon.py[line:93]INFO - gui msg: {'req': {'command': 'lattice_led_control', 'led_ids': '311', 'device': 'm3', 'colour': [40, 0, 0]}}
08/16/2022 03:01:37 PM daemon.py[line:652]INFO - b'lw-\x01(\x00\x00\x1d!\xa1'
08/16/2022 03:01:37 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 03:01:37 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 03:01:37 PM rcomm.py[line:143]INFO - data -> b'lLEDU\x84'
08/16/2022 03:01:37 PM daemon.py[line:658]DEBUG - r -> b'lLEDU\x84'
08/16/2022 03:01:37 PM daemon.py[line:111]DEBUG - send_json -> {'rep': {'device': 'm3', 'result': 'success'}}
08/16/2022 03:01:38 PM daemon.py[line:93]INFO - gui msg: {'req': {'command': 'lattice_led_control', 'led_ids': '312', 'device': 'm3', 'colour': [40, 0, 0]}}
08/16/2022 03:01:38 PM daemon.py[line:652]INFO - b'lw-\x01(\x00\x00\x1eB\x91'
08/16/2022 03:01:38 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 03:01:38 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 03:01:38 PM rcomm.py[line:143]INFO - data -> b'lLEDU\x84'
08/16/2022 03:01:38 PM daemon.py[line:658]DEBUG - r -> b'lLEDU\x84'
08/16/2022 03:01:38 PM daemon.py[line:111]DEBUG - send_json -> {'rep': {'device': 'm3', 'result': 'success'}}
08/16/2022 03:01:38 PM daemon.py[line:93]INFO - gui msg: {'req': {'command': 'lattice_led_control', 'led_ids': '313', 'device': 'm3', 'colour': [40, 0, 0]}}
08/16/2022 03:01:38 PM daemon.py[line:111]DEBUG - send_json -> {'rep': {'device': 'm3', 'result': 'error'}}
08/16/2022 03:01:47 PM daemon.py[line:93]INFO - gui msg: {'req': {'command': 'lattice_led_control', 'led_ids': '301', 'device': 'm3', 'colour': [0, 0, 0]}}
08/16/2022 03:01:47 PM daemon.py[line:652]INFO - b'lw-\x01\x00\x00\x00\x13b\xf2'
08/16/2022 03:01:47 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 03:01:48 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 03:01:48 PM rcomm.py[line:143]INFO - data -> b'lLEDU\x84'
08/16/2022 03:01:48 PM daemon.py[line:658]DEBUG - r -> b'lLEDU\x84'
08/16/2022 03:01:48 PM daemon.py[line:111]DEBUG - send_json -> {'rep': {'device': 'm3', 'result': 'success'}}
08/16/2022 03:01:48 PM daemon.py[line:93]INFO - gui msg: {'req': {'command': 'lattice_led_control', 'led_ids': '302', 'device': 'm3', 'colour': [0, 0, 0]}}
08/16/2022 03:01:48 PM daemon.py[line:652]INFO - b'lw-\x01\x00\x00\x00\x14\x85\x82'
08/16/2022 03:01:48 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 03:01:48 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 03:01:48 PM rcomm.py[line:143]INFO - data -> b'lLEDU\x84'
08/16/2022 03:01:48 PM daemon.py[line:658]DEBUG - r -> b'lLEDU\x84'
08/16/2022 03:01:48 PM daemon.py[line:111]DEBUG - send_json -> {'rep': {'device': 'm3', 'result': 'success'}}
08/16/2022 03:01:49 PM daemon.py[line:93]INFO - gui msg: {'req': {'command': 'lattice_led_control', 'led_ids': '303', 'device': 'm3', 'colour': [0, 0, 0]}}
08/16/2022 03:01:49 PM daemon.py[line:652]INFO - b'lw-\x01\x00\x00\x00\x15\xa4\x92'
08/16/2022 03:01:49 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 03:01:49 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 03:01:49 PM rcomm.py[line:143]INFO - data -> b'lLEDU\x84'
08/16/2022 03:01:49 PM daemon.py[line:658]DEBUG - r -> b'lLEDU\x84'
08/16/2022 03:01:49 PM daemon.py[line:111]DEBUG - send_json -> {'rep': {'device': 'm3', 'result': 'success'}}
08/16/2022 03:01:49 PM daemon.py[line:93]INFO - gui msg: {'req': {'command': 'lattice_led_control', 'led_ids': '304', 'device': 'm3', 'colour': [0, 0, 0]}}
08/16/2022 03:01:49 PM daemon.py[line:652]INFO - b'lw-\x01\x00\x00\x00\x16\xc7\xa2'
08/16/2022 03:01:49 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 03:01:49 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 03:01:49 PM rcomm.py[line:143]INFO - data -> b'lLEDU\x84'
08/16/2022 03:01:49 PM daemon.py[line:658]DEBUG - r -> b'lLEDU\x84'
08/16/2022 03:01:49 PM daemon.py[line:111]DEBUG - send_json -> {'rep': {'device': 'm3', 'result': 'success'}}
08/16/2022 03:01:50 PM daemon.py[line:93]INFO - gui msg: {'req': {'command': 'lattice_led_control', 'led_ids': '305', 'device': 'm3', 'colour': [0, 0, 0]}}
08/16/2022 03:01:50 PM daemon.py[line:652]INFO - b'lw-\x01\x00\x00\x00\x17\xe6\xb2'
08/16/2022 03:01:50 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 03:01:50 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 03:01:50 PM rcomm.py[line:143]INFO - data -> b'lLEDU\x84'
08/16/2022 03:01:50 PM daemon.py[line:658]DEBUG - r -> b'lLEDU\x84'
08/16/2022 03:01:50 PM daemon.py[line:111]DEBUG - send_json -> {'rep': {'device': 'm3', 'result': 'success'}}
08/16/2022 03:01:50 PM daemon.py[line:93]INFO - gui msg: {'req': {'command': 'lattice_led_control', 'led_ids': '306', 'device': 'm3', 'colour': [0, 0, 0]}}
08/16/2022 03:01:50 PM daemon.py[line:652]INFO - b'lw-\x01\x00\x00\x00\x18\tC'
08/16/2022 03:01:50 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 03:01:50 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 03:01:50 PM rcomm.py[line:143]INFO - data -> b'lLEDU\x84'
08/16/2022 03:01:50 PM daemon.py[line:658]DEBUG - r -> b'lLEDU\x84'
08/16/2022 03:01:50 PM daemon.py[line:111]DEBUG - send_json -> {'rep': {'device': 'm3', 'result': 'success'}}
08/16/2022 03:01:51 PM daemon.py[line:93]INFO - gui msg: {'req': {'command': 'lattice_led_control', 'led_ids': '307', 'device': 'm3', 'colour': [0, 0, 0]}}
08/16/2022 03:01:51 PM daemon.py[line:652]INFO - b'lw-\x01\x00\x00\x00\x19(S'
08/16/2022 03:01:51 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 03:01:51 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 03:01:51 PM rcomm.py[line:143]INFO - data -> b'lLEDU\x84'
08/16/2022 03:01:51 PM daemon.py[line:658]DEBUG - r -> b'lLEDU\x84'
08/16/2022 03:01:51 PM daemon.py[line:111]DEBUG - send_json -> {'rep': {'device': 'm3', 'result': 'success'}}
08/16/2022 03:01:52 PM daemon.py[line:93]INFO - gui msg: {'req': {'command': 'lattice_led_control', 'led_ids': '308', 'device': 'm3', 'colour': [0, 0, 0]}}
08/16/2022 03:01:52 PM daemon.py[line:652]INFO - b'lw-\x01\x00\x00\x00\x1aKc'
08/16/2022 03:01:52 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 03:01:52 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 03:01:52 PM rcomm.py[line:143]INFO - data -> b'lLEDU\x84'
08/16/2022 03:01:52 PM daemon.py[line:658]DEBUG - r -> b'lLEDU\x84'
08/16/2022 03:01:52 PM daemon.py[line:111]DEBUG - send_json -> {'rep': {'device': 'm3', 'result': 'success'}}
08/16/2022 03:01:52 PM daemon.py[line:93]INFO - gui msg: {'req': {'command': 'lattice_led_control', 'led_ids': '309', 'device': 'm3', 'colour': [0, 0, 0]}}
08/16/2022 03:01:52 PM daemon.py[line:652]INFO - b'lw-\x01\x00\x00\x00\x1bjs'
08/16/2022 03:01:52 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 03:01:52 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 03:01:52 PM rcomm.py[line:143]INFO - data -> b'lLEDU\x84'
08/16/2022 03:01:52 PM daemon.py[line:658]DEBUG - r -> b'lLEDU\x84'
08/16/2022 03:01:52 PM daemon.py[line:111]DEBUG - send_json -> {'rep': {'device': 'm3', 'result': 'success'}}
08/16/2022 03:01:53 PM daemon.py[line:93]INFO - gui msg: {'req': {'command': 'lattice_led_control', 'led_ids': '310', 'device': 'm3', 'colour': [0, 0, 0]}}
08/16/2022 03:01:53 PM daemon.py[line:652]INFO - b'lw-\x01\x00\x00\x00\x1c\x8d\x03'
08/16/2022 03:01:53 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 03:01:53 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 03:01:53 PM rcomm.py[line:143]INFO - data -> b'lLEDU\x84'
08/16/2022 03:01:53 PM daemon.py[line:658]DEBUG - r -> b'lLEDU\x84'
08/16/2022 03:01:53 PM daemon.py[line:111]DEBUG - send_json -> {'rep': {'device': 'm3', 'result': 'success'}}
08/16/2022 03:01:53 PM daemon.py[line:93]INFO - gui msg: {'req': {'command': 'lattice_led_control', 'led_ids': '311', 'device': 'm3', 'colour': [0, 0, 0]}}
08/16/2022 03:01:53 PM daemon.py[line:652]INFO - b'lw-\x01\x00\x00\x00\x1d\xac\x13'
08/16/2022 03:01:53 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 03:01:53 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 03:01:53 PM rcomm.py[line:143]INFO - data -> b'lLEDU\x84'
08/16/2022 03:01:53 PM daemon.py[line:658]DEBUG - r -> b'lLEDU\x84'
08/16/2022 03:01:53 PM daemon.py[line:111]DEBUG - send_json -> {'rep': {'device': 'm3', 'result': 'success'}}
08/16/2022 03:01:54 PM daemon.py[line:93]INFO - gui msg: {'req': {'command': 'lattice_led_control', 'led_ids': '312', 'device': 'm3', 'colour': [0, 0, 0]}}
08/16/2022 03:01:54 PM daemon.py[line:652]INFO - b'lw-\x01\x00\x00\x00\x1e\xcf#'
08/16/2022 03:01:54 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 03:01:54 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 03:01:54 PM rcomm.py[line:143]INFO - data -> b'lLEDU\x84'
08/16/2022 03:01:54 PM daemon.py[line:658]DEBUG - r -> b'lLEDU\x84'
08/16/2022 03:01:54 PM daemon.py[line:111]DEBUG - send_json -> {'rep': {'device': 'm3', 'result': 'success'}}
08/16/2022 03:01:54 PM daemon.py[line:93]INFO - gui msg: {'req': {'command': 'lattice_led_control', 'led_ids': '313', 'device': 'm3', 'colour': [0, 0, 0]}}
08/16/2022 03:01:54 PM daemon.py[line:111]DEBUG - send_json -> {'rep': {'device': 'm3', 'result': 'error'}}
08/16/2022 03:02:30 PM daemon.py[line:93]INFO - gui msg: {'req': {'command': 'lattice_led_control', 'led_ids': '401', 'device': 'm3', 'colour': [0, 0, 0]}}
08/16/2022 03:02:30 PM daemon.py[line:652]INFO - b'lw-\x01\x00\x00\x00-\xff%'
08/16/2022 03:02:30 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 03:02:30 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 03:02:30 PM rcomm.py[line:143]INFO - data -> b'lLEDU\x84'
08/16/2022 03:02:30 PM daemon.py[line:658]DEBUG - r -> b'lLEDU\x84'
08/16/2022 03:02:30 PM daemon.py[line:111]DEBUG - send_json -> {'rep': {'device': 'm3', 'result': 'success'}}
08/16/2022 03:02:31 PM daemon.py[line:93]INFO - gui msg: {'req': {'command': 'lattice_led_control', 'led_ids': '402', 'device': 'm3', 'colour': [0, 0, 0]}}
08/16/2022 03:02:31 PM daemon.py[line:652]INFO - b'lw-\x01\x00\x00\x00,\xde5'
08/16/2022 03:02:31 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 03:02:31 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 03:02:31 PM rcomm.py[line:143]INFO - data -> b'lLEDU\x84'
08/16/2022 03:02:31 PM daemon.py[line:658]DEBUG - r -> b'lLEDU\x84'
08/16/2022 03:02:31 PM daemon.py[line:111]DEBUG - send_json -> {'rep': {'device': 'm3', 'result': 'success'}}
08/16/2022 03:02:31 PM daemon.py[line:93]INFO - gui msg: {'req': {'command': 'lattice_led_control', 'led_ids': '403', 'device': 'm3', 'colour': [0, 0, 0]}}
08/16/2022 03:02:31 PM daemon.py[line:652]INFO - b'lw-\x01\x00\x00\x00+9E'
08/16/2022 03:02:31 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 03:02:31 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 03:02:31 PM rcomm.py[line:143]INFO - data -> b'lLEDU\x84'
08/16/2022 03:02:31 PM daemon.py[line:658]DEBUG - r -> b'lLEDU\x84'
08/16/2022 03:02:31 PM daemon.py[line:111]DEBUG - send_json -> {'rep': {'device': 'm3', 'result': 'success'}}
08/16/2022 03:02:32 PM daemon.py[line:93]INFO - gui msg: {'req': {'command': 'lattice_led_control', 'led_ids': '404', 'device': 'm3', 'colour': [0, 0, 0]}}
08/16/2022 03:02:32 PM daemon.py[line:652]INFO - b'lw-\x01\x00\x00\x00*\x18U'
08/16/2022 03:02:32 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 03:02:32 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 03:02:32 PM rcomm.py[line:143]INFO - data -> b'lLEDU\x84'
08/16/2022 03:02:32 PM daemon.py[line:658]DEBUG - r -> b'lLEDU\x84'
08/16/2022 03:02:32 PM daemon.py[line:111]DEBUG - send_json -> {'rep': {'device': 'm3', 'result': 'success'}}
08/16/2022 03:02:32 PM daemon.py[line:93]INFO - gui msg: {'req': {'command': 'lattice_led_control', 'led_ids': '405', 'device': 'm3', 'colour': [0, 0, 0]}}
08/16/2022 03:02:32 PM daemon.py[line:652]INFO - b'lw-\x01\x00\x00\x00){e'
08/16/2022 03:02:32 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 03:02:32 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 03:02:32 PM rcomm.py[line:143]INFO - data -> b'lLEDU\x84'
08/16/2022 03:02:32 PM daemon.py[line:658]DEBUG - r -> b'lLEDU\x84'
08/16/2022 03:02:32 PM daemon.py[line:111]DEBUG - send_json -> {'rep': {'device': 'm3', 'result': 'success'}}
08/16/2022 03:02:33 PM daemon.py[line:93]INFO - gui msg: {'req': {'command': 'lattice_led_control', 'led_ids': '406', 'device': 'm3', 'colour': [0, 0, 0]}}
08/16/2022 03:02:33 PM daemon.py[line:652]INFO - b'lw-\x01\x00\x00\x00(Zu'
08/16/2022 03:02:33 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 03:02:33 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 03:02:33 PM rcomm.py[line:143]INFO - data -> b'lLEDU\x84'
08/16/2022 03:02:33 PM daemon.py[line:658]DEBUG - r -> b'lLEDU\x84'
08/16/2022 03:02:33 PM daemon.py[line:111]DEBUG - send_json -> {'rep': {'device': 'm3', 'result': 'success'}}
08/16/2022 03:02:33 PM daemon.py[line:93]INFO - gui msg: {'req': {'command': 'lattice_led_control', 'led_ids': '407', 'device': 'm3', 'colour': [0, 0, 0]}}
08/16/2022 03:02:33 PM daemon.py[line:652]INFO - b"lw-\x01\x00\x00\x00'\xb5\x84"
08/16/2022 03:02:33 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 03:02:33 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 03:02:33 PM rcomm.py[line:143]INFO - data -> b'lLEDU\x84'
08/16/2022 03:02:33 PM daemon.py[line:658]DEBUG - r -> b'lLEDU\x84'
08/16/2022 03:02:33 PM daemon.py[line:111]DEBUG - send_json -> {'rep': {'device': 'm3', 'result': 'success'}}
08/16/2022 03:02:34 PM daemon.py[line:93]INFO - gui msg: {'req': {'command': 'lattice_led_control', 'led_ids': '408', 'device': 'm3', 'colour': [0, 0, 0]}}
08/16/2022 03:02:34 PM daemon.py[line:652]INFO - b'lw-\x01\x00\x00\x00&\x94\x94'
08/16/2022 03:02:34 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 03:02:34 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 03:02:34 PM rcomm.py[line:143]INFO - data -> b'lLEDU\x84'
08/16/2022 03:02:34 PM daemon.py[line:658]DEBUG - r -> b'lLEDU\x84'
08/16/2022 03:02:34 PM daemon.py[line:111]DEBUG - send_json -> {'rep': {'device': 'm3', 'result': 'success'}}
08/16/2022 03:02:35 PM daemon.py[line:93]INFO - gui msg: {'req': {'command': 'lattice_led_control', 'led_ids': '409', 'device': 'm3', 'colour': [0, 0, 0]}}
08/16/2022 03:02:35 PM daemon.py[line:652]INFO - b'lw-\x01\x00\x00\x00%\xf7\xa4'
08/16/2022 03:02:35 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 03:02:35 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 03:02:35 PM rcomm.py[line:143]INFO - data -> b'lLEDU\x84'
08/16/2022 03:02:35 PM daemon.py[line:658]DEBUG - r -> b'lLEDU\x84'
08/16/2022 03:02:35 PM daemon.py[line:111]DEBUG - send_json -> {'rep': {'device': 'm3', 'result': 'success'}}
08/16/2022 03:02:35 PM daemon.py[line:93]INFO - gui msg: {'req': {'command': 'lattice_led_control', 'led_ids': '410', 'device': 'm3', 'colour': [0, 0, 0]}}
08/16/2022 03:02:35 PM daemon.py[line:652]INFO - b'lw-\x01\x00\x00\x00$\xd6\xb4'
08/16/2022 03:02:35 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 03:02:35 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 03:02:35 PM rcomm.py[line:143]INFO - data -> b'lLEDU\x84'
08/16/2022 03:02:35 PM daemon.py[line:658]DEBUG - r -> b'lLEDU\x84'
08/16/2022 03:02:35 PM daemon.py[line:111]DEBUG - send_json -> {'rep': {'device': 'm3', 'result': 'success'}}
08/16/2022 03:02:36 PM daemon.py[line:93]INFO - gui msg: {'req': {'command': 'lattice_led_control', 'led_ids': '411', 'device': 'm3', 'colour': [0, 0, 0]}}
08/16/2022 03:02:36 PM daemon.py[line:652]INFO - b'lw-\x01\x00\x00\x00#1\xc4'
08/16/2022 03:02:36 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 03:02:36 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 03:02:36 PM rcomm.py[line:143]INFO - data -> b'lLEDU\x84'
08/16/2022 03:02:36 PM daemon.py[line:658]DEBUG - r -> b'lLEDU\x84'
08/16/2022 03:02:36 PM daemon.py[line:111]DEBUG - send_json -> {'rep': {'device': 'm3', 'result': 'success'}}
08/16/2022 03:02:36 PM daemon.py[line:93]INFO - gui msg: {'req': {'command': 'lattice_led_control', 'led_ids': '412', 'device': 'm3', 'colour': [0, 0, 0]}}
08/16/2022 03:02:36 PM daemon.py[line:652]INFO - b'lw-\x01\x00\x00\x00"\x10\xd4'
08/16/2022 03:02:36 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 03:02:36 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 03:02:36 PM rcomm.py[line:143]INFO - data -> b'lLEDU\x84'
08/16/2022 03:02:36 PM daemon.py[line:658]DEBUG - r -> b'lLEDU\x84'
08/16/2022 03:02:36 PM daemon.py[line:111]DEBUG - send_json -> {'rep': {'device': 'm3', 'result': 'success'}}
08/16/2022 03:02:37 PM daemon.py[line:93]INFO - gui msg: {'req': {'command': 'lattice_led_control', 'led_ids': '413', 'device': 'm3', 'colour': [0, 0, 0]}}
08/16/2022 03:02:37 PM daemon.py[line:652]INFO - b'lw-\x01\x00\x00\x00!s\xe4'
08/16/2022 03:02:37 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 03:02:37 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 03:02:37 PM rcomm.py[line:143]INFO - data -> b'lLEDU\x84'
08/16/2022 03:02:37 PM daemon.py[line:658]DEBUG - r -> b'lLEDU\x84'
08/16/2022 03:02:37 PM daemon.py[line:111]DEBUG - send_json -> {'rep': {'device': 'm3', 'result': 'success'}}
08/16/2022 03:02:37 PM daemon.py[line:93]INFO - gui msg: {'req': {'command': 'lattice_led_control', 'led_ids': '414', 'device': 'm3', 'colour': [0, 0, 0]}}
08/16/2022 03:02:37 PM daemon.py[line:652]INFO - b'lw-\x01\x00\x00\x00 R\xf4'
08/16/2022 03:02:37 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 03:02:37 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 03:02:37 PM rcomm.py[line:143]INFO - data -> b'lLEDU\x84'
08/16/2022 03:02:37 PM daemon.py[line:658]DEBUG - r -> b'lLEDU\x84'
08/16/2022 03:02:37 PM daemon.py[line:111]DEBUG - send_json -> {'rep': {'device': 'm3', 'result': 'success'}}
08/16/2022 03:02:47 PM daemon.py[line:93]INFO - gui msg: {'req': {'command': 'lattice_led_control', 'led_ids': '401', 'device': 'm3', 'colour': [40, 0, 0]}}
08/16/2022 03:02:47 PM daemon.py[line:652]INFO - b'lw-\x01(\x00\x00-r\x97'
08/16/2022 03:02:47 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 03:02:47 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 03:02:47 PM rcomm.py[line:143]INFO - data -> b'lLEDU\x84'
08/16/2022 03:02:47 PM daemon.py[line:658]DEBUG - r -> b'lLEDU\x84'
08/16/2022 03:02:47 PM daemon.py[line:111]DEBUG - send_json -> {'rep': {'device': 'm3', 'result': 'success'}}
08/16/2022 03:02:48 PM daemon.py[line:93]INFO - gui msg: {'req': {'command': 'lattice_led_control', 'led_ids': '402', 'device': 'm3', 'colour': [40, 0, 0]}}
08/16/2022 03:02:48 PM daemon.py[line:652]INFO - b'lw-\x01(\x00\x00,S\x87'
08/16/2022 03:02:48 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 03:02:48 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 03:02:48 PM rcomm.py[line:143]INFO - data -> b'lLEDU\x84'
08/16/2022 03:02:48 PM daemon.py[line:658]DEBUG - r -> b'lLEDU\x84'
08/16/2022 03:02:48 PM daemon.py[line:111]DEBUG - send_json -> {'rep': {'device': 'm3', 'result': 'success'}}
08/16/2022 03:02:48 PM daemon.py[line:93]INFO - gui msg: {'req': {'command': 'lattice_led_control', 'led_ids': '403', 'device': 'm3', 'colour': [40, 0, 0]}}
08/16/2022 03:02:48 PM daemon.py[line:652]INFO - b'lw-\x01(\x00\x00+\xb4\xf7'
08/16/2022 03:02:48 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 03:02:48 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 03:02:49 PM rcomm.py[line:143]INFO - data -> b'lLEDU\x84'
08/16/2022 03:02:49 PM daemon.py[line:658]DEBUG - r -> b'lLEDU\x84'
08/16/2022 03:02:49 PM daemon.py[line:111]DEBUG - send_json -> {'rep': {'device': 'm3', 'result': 'success'}}
08/16/2022 03:02:49 PM daemon.py[line:93]INFO - gui msg: {'req': {'command': 'lattice_led_control', 'led_ids': '404', 'device': 'm3', 'colour': [40, 0, 0]}}
08/16/2022 03:02:49 PM daemon.py[line:652]INFO - b'lw-\x01(\x00\x00*\x95\xe7'
08/16/2022 03:02:49 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 03:02:49 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 03:02:49 PM rcomm.py[line:143]INFO - data -> b'lLEDU\x84'
08/16/2022 03:02:49 PM daemon.py[line:658]DEBUG - r -> b'lLEDU\x84'
08/16/2022 03:02:49 PM daemon.py[line:111]DEBUG - send_json -> {'rep': {'device': 'm3', 'result': 'success'}}
08/16/2022 03:02:50 PM daemon.py[line:93]INFO - gui msg: {'req': {'command': 'lattice_led_control', 'led_ids': '405', 'device': 'm3', 'colour': [40, 0, 0]}}
08/16/2022 03:02:50 PM daemon.py[line:652]INFO - b'lw-\x01(\x00\x00)\xf6\xd7'
08/16/2022 03:02:50 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 03:02:50 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 03:02:50 PM rcomm.py[line:143]INFO - data -> b'lLEDU\x84'
08/16/2022 03:02:50 PM daemon.py[line:658]DEBUG - r -> b'lLEDU\x84'
08/16/2022 03:02:50 PM daemon.py[line:111]DEBUG - send_json -> {'rep': {'device': 'm3', 'result': 'success'}}
08/16/2022 03:02:50 PM daemon.py[line:93]INFO - gui msg: {'req': {'command': 'lattice_led_control', 'led_ids': '406', 'device': 'm3', 'colour': [40, 0, 0]}}
08/16/2022 03:02:50 PM daemon.py[line:652]INFO - b'lw-\x01(\x00\x00(\xd7\xc7'
08/16/2022 03:02:50 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 03:02:50 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 03:02:50 PM rcomm.py[line:143]INFO - data -> b'lLEDU\x84'
08/16/2022 03:02:50 PM daemon.py[line:658]DEBUG - r -> b'lLEDU\x84'
08/16/2022 03:02:50 PM daemon.py[line:111]DEBUG - send_json -> {'rep': {'device': 'm3', 'result': 'success'}}
08/16/2022 03:02:51 PM daemon.py[line:93]INFO - gui msg: {'req': {'command': 'lattice_led_control', 'led_ids': '407', 'device': 'm3', 'colour': [40, 0, 0]}}
08/16/2022 03:02:51 PM daemon.py[line:652]INFO - b"lw-\x01(\x00\x00'86"
08/16/2022 03:02:51 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 03:02:51 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 03:02:51 PM rcomm.py[line:143]INFO - data -> b'lLEDU\x84'
08/16/2022 03:02:51 PM daemon.py[line:658]DEBUG - r -> b'lLEDU\x84'
08/16/2022 03:02:51 PM daemon.py[line:111]DEBUG - send_json -> {'rep': {'device': 'm3', 'result': 'success'}}
08/16/2022 03:02:51 PM daemon.py[line:93]INFO - gui msg: {'req': {'command': 'lattice_led_control', 'led_ids': '408', 'device': 'm3', 'colour': [40, 0, 0]}}
08/16/2022 03:02:51 PM daemon.py[line:652]INFO - b'lw-\x01(\x00\x00&\x19&'
08/16/2022 03:02:51 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 03:02:51 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 03:02:51 PM rcomm.py[line:143]INFO - data -> b'lLEDU\x84'
08/16/2022 03:02:51 PM daemon.py[line:658]DEBUG - r -> b'lLEDU\x84'
08/16/2022 03:02:51 PM daemon.py[line:111]DEBUG - send_json -> {'rep': {'device': 'm3', 'result': 'success'}}
08/16/2022 03:02:52 PM daemon.py[line:93]INFO - gui msg: {'req': {'command': 'lattice_led_control', 'led_ids': '409', 'device': 'm3', 'colour': [40, 0, 0]}}
08/16/2022 03:02:52 PM daemon.py[line:652]INFO - b'lw-\x01(\x00\x00%z\x16'
08/16/2022 03:02:52 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 03:02:52 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 03:02:52 PM rcomm.py[line:143]INFO - data -> b'lLEDU\x84'
08/16/2022 03:02:52 PM daemon.py[line:658]DEBUG - r -> b'lLEDU\x84'
08/16/2022 03:02:52 PM daemon.py[line:111]DEBUG - send_json -> {'rep': {'device': 'm3', 'result': 'success'}}
08/16/2022 03:02:53 PM daemon.py[line:93]INFO - gui msg: {'req': {'command': 'lattice_led_control', 'led_ids': '410', 'device': 'm3', 'colour': [40, 0, 0]}}
08/16/2022 03:02:53 PM daemon.py[line:652]INFO - b'lw-\x01(\x00\x00$[\x06'
08/16/2022 03:02:53 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 03:02:53 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 03:02:53 PM rcomm.py[line:143]INFO - data -> b'lLEDU\x84'
08/16/2022 03:02:53 PM daemon.py[line:658]DEBUG - r -> b'lLEDU\x84'
08/16/2022 03:02:53 PM daemon.py[line:111]DEBUG - send_json -> {'rep': {'device': 'm3', 'result': 'success'}}
08/16/2022 03:02:53 PM daemon.py[line:93]INFO - gui msg: {'req': {'command': 'lattice_led_control', 'led_ids': '411', 'device': 'm3', 'colour': [40, 0, 0]}}
08/16/2022 03:02:53 PM daemon.py[line:652]INFO - b'lw-\x01(\x00\x00#\xbcv'
08/16/2022 03:02:53 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 03:02:53 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 03:02:53 PM rcomm.py[line:143]INFO - data -> b'lLEDU\x84'
08/16/2022 03:02:53 PM daemon.py[line:658]DEBUG - r -> b'lLEDU\x84'
08/16/2022 03:02:53 PM daemon.py[line:111]DEBUG - send_json -> {'rep': {'device': 'm3', 'result': 'success'}}
08/16/2022 03:02:54 PM daemon.py[line:93]INFO - gui msg: {'req': {'command': 'lattice_led_control', 'led_ids': '412', 'device': 'm3', 'colour': [40, 0, 0]}}
08/16/2022 03:02:54 PM daemon.py[line:652]INFO - b'lw-\x01(\x00\x00"\x9df'
08/16/2022 03:02:54 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 03:02:54 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 03:02:54 PM rcomm.py[line:143]INFO - data -> b'lLEDU\x84'
08/16/2022 03:02:54 PM daemon.py[line:658]DEBUG - r -> b'lLEDU\x84'
08/16/2022 03:02:54 PM daemon.py[line:111]DEBUG - send_json -> {'rep': {'device': 'm3', 'result': 'success'}}
08/16/2022 03:02:54 PM daemon.py[line:93]INFO - gui msg: {'req': {'command': 'lattice_led_control', 'led_ids': '413', 'device': 'm3', 'colour': [40, 0, 0]}}
08/16/2022 03:02:54 PM daemon.py[line:652]INFO - b'lw-\x01(\x00\x00!\xfeV'
08/16/2022 03:02:54 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 03:02:54 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 03:02:54 PM rcomm.py[line:143]INFO - data -> b'lLEDU\x84'
08/16/2022 03:02:54 PM daemon.py[line:658]DEBUG - r -> b'lLEDU\x84'
08/16/2022 03:02:54 PM daemon.py[line:111]DEBUG - send_json -> {'rep': {'device': 'm3', 'result': 'success'}}
08/16/2022 03:02:55 PM daemon.py[line:93]INFO - gui msg: {'req': {'command': 'lattice_led_control', 'led_ids': '414', 'device': 'm3', 'colour': [40, 0, 0]}}
08/16/2022 03:02:55 PM daemon.py[line:652]INFO - b'lw-\x01(\x00\x00 \xdfF'
08/16/2022 03:02:55 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 03:02:55 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 03:02:55 PM rcomm.py[line:143]INFO - data -> b'lLEDU\x84'
08/16/2022 03:02:55 PM daemon.py[line:658]DEBUG - r -> b'lLEDU\x84'
08/16/2022 03:02:55 PM daemon.py[line:111]DEBUG - send_json -> {'rep': {'device': 'm3', 'result': 'success'}}
08/16/2022 03:03:26 PM daemon.py[line:93]INFO - gui msg: {'req': {'command': 'lattice_led_control', 'led_ids': '401', 'device': 'm3', 'colour': [40, 0, 0]}}
08/16/2022 03:03:26 PM daemon.py[line:652]INFO - b'lw-\x01(\x00\x00-r\x97'
08/16/2022 03:03:26 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 03:03:26 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 03:03:26 PM rcomm.py[line:143]INFO - data -> b'lLEDU\x84'
08/16/2022 03:03:26 PM daemon.py[line:658]DEBUG - r -> b'lLEDU\x84'
08/16/2022 03:03:26 PM daemon.py[line:111]DEBUG - send_json -> {'rep': {'device': 'm3', 'result': 'success'}}
08/16/2022 03:03:26 PM daemon.py[line:93]INFO - gui msg: {'req': {'command': 'lattice_led_control', 'led_ids': '402', 'device': 'm3', 'colour': [40, 0, 0]}}
08/16/2022 03:03:26 PM daemon.py[line:652]INFO - b'lw-\x01(\x00\x00,S\x87'
08/16/2022 03:03:26 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 03:03:26 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 03:03:26 PM rcomm.py[line:143]INFO - data -> b'lLEDU\x84'
08/16/2022 03:03:26 PM daemon.py[line:658]DEBUG - r -> b'lLEDU\x84'
08/16/2022 03:03:26 PM daemon.py[line:111]DEBUG - send_json -> {'rep': {'device': 'm3', 'result': 'success'}}
08/16/2022 03:03:27 PM daemon.py[line:93]INFO - gui msg: {'req': {'command': 'lattice_led_control', 'led_ids': '403', 'device': 'm3', 'colour': [40, 0, 0]}}
08/16/2022 03:03:27 PM daemon.py[line:652]INFO - b'lw-\x01(\x00\x00+\xb4\xf7'
08/16/2022 03:03:27 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 03:03:27 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 03:03:27 PM rcomm.py[line:143]INFO - data -> b'lLEDU\x84'
08/16/2022 03:03:27 PM daemon.py[line:658]DEBUG - r -> b'lLEDU\x84'
08/16/2022 03:03:27 PM daemon.py[line:111]DEBUG - send_json -> {'rep': {'device': 'm3', 'result': 'success'}}
08/16/2022 03:03:27 PM daemon.py[line:93]INFO - gui msg: {'req': {'command': 'lattice_led_control', 'led_ids': '404', 'device': 'm3', 'colour': [40, 0, 0]}}
08/16/2022 03:03:27 PM daemon.py[line:652]INFO - b'lw-\x01(\x00\x00*\x95\xe7'
08/16/2022 03:03:27 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 03:03:27 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 03:03:27 PM rcomm.py[line:143]INFO - data -> b'lLEDU\x84'
08/16/2022 03:03:27 PM daemon.py[line:658]DEBUG - r -> b'lLEDU\x84'
08/16/2022 03:03:27 PM daemon.py[line:111]DEBUG - send_json -> {'rep': {'device': 'm3', 'result': 'success'}}
08/16/2022 03:03:28 PM daemon.py[line:93]INFO - gui msg: {'req': {'command': 'lattice_led_control', 'led_ids': '405', 'device': 'm3', 'colour': [40, 0, 0]}}
08/16/2022 03:03:28 PM daemon.py[line:652]INFO - b'lw-\x01(\x00\x00)\xf6\xd7'
08/16/2022 03:03:28 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 03:03:28 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 03:03:28 PM rcomm.py[line:143]INFO - data -> b'lLEDU\x84'
08/16/2022 03:03:28 PM daemon.py[line:658]DEBUG - r -> b'lLEDU\x84'
08/16/2022 03:03:28 PM daemon.py[line:111]DEBUG - send_json -> {'rep': {'device': 'm3', 'result': 'success'}}
08/16/2022 03:03:28 PM daemon.py[line:93]INFO - gui msg: {'req': {'command': 'lattice_led_control', 'led_ids': '406', 'device': 'm3', 'colour': [40, 0, 0]}}
08/16/2022 03:03:28 PM daemon.py[line:652]INFO - b'lw-\x01(\x00\x00(\xd7\xc7'
08/16/2022 03:03:28 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 03:03:28 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 03:03:28 PM rcomm.py[line:143]INFO - data -> b'lLEDU\x84'
08/16/2022 03:03:28 PM daemon.py[line:658]DEBUG - r -> b'lLEDU\x84'
08/16/2022 03:03:28 PM daemon.py[line:111]DEBUG - send_json -> {'rep': {'device': 'm3', 'result': 'success'}}
08/16/2022 03:03:29 PM daemon.py[line:93]INFO - gui msg: {'req': {'command': 'lattice_led_control', 'led_ids': '407', 'device': 'm3', 'colour': [40, 0, 0]}}
08/16/2022 03:03:29 PM daemon.py[line:652]INFO - b"lw-\x01(\x00\x00'86"
08/16/2022 03:03:29 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 03:03:29 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 03:03:29 PM rcomm.py[line:143]INFO - data -> b'lLEDU\x84'
08/16/2022 03:03:29 PM daemon.py[line:658]DEBUG - r -> b'lLEDU\x84'
08/16/2022 03:03:29 PM daemon.py[line:111]DEBUG - send_json -> {'rep': {'device': 'm3', 'result': 'success'}}
08/16/2022 03:03:30 PM daemon.py[line:93]INFO - gui msg: {'req': {'command': 'lattice_led_control', 'led_ids': '408', 'device': 'm3', 'colour': [40, 0, 0]}}
08/16/2022 03:03:30 PM daemon.py[line:652]INFO - b'lw-\x01(\x00\x00&\x19&'
08/16/2022 03:03:30 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 03:03:30 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 03:03:30 PM rcomm.py[line:143]INFO - data -> b'lLEDU\x84'
08/16/2022 03:03:30 PM daemon.py[line:658]DEBUG - r -> b'lLEDU\x84'
08/16/2022 03:03:30 PM daemon.py[line:111]DEBUG - send_json -> {'rep': {'device': 'm3', 'result': 'success'}}
08/16/2022 03:03:30 PM daemon.py[line:93]INFO - gui msg: {'req': {'command': 'lattice_led_control', 'led_ids': '409', 'device': 'm3', 'colour': [40, 0, 0]}}
08/16/2022 03:03:30 PM daemon.py[line:652]INFO - b'lw-\x01(\x00\x00%z\x16'
08/16/2022 03:03:30 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 03:03:30 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 03:03:30 PM rcomm.py[line:143]INFO - data -> b'lLEDU\x84'
08/16/2022 03:03:30 PM daemon.py[line:658]DEBUG - r -> b'lLEDU\x84'
08/16/2022 03:03:30 PM daemon.py[line:111]DEBUG - send_json -> {'rep': {'device': 'm3', 'result': 'success'}}
08/16/2022 03:03:31 PM daemon.py[line:93]INFO - gui msg: {'req': {'command': 'lattice_led_control', 'led_ids': '410', 'device': 'm3', 'colour': [40, 0, 0]}}
08/16/2022 03:03:31 PM daemon.py[line:652]INFO - b'lw-\x01(\x00\x00$[\x06'
08/16/2022 03:03:31 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 03:03:31 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 03:03:31 PM rcomm.py[line:143]INFO - data -> b'lLEDU\x84'
08/16/2022 03:03:31 PM daemon.py[line:658]DEBUG - r -> b'lLEDU\x84'
08/16/2022 03:03:31 PM daemon.py[line:111]DEBUG - send_json -> {'rep': {'device': 'm3', 'result': 'success'}}
08/16/2022 03:03:31 PM daemon.py[line:93]INFO - gui msg: {'req': {'command': 'lattice_led_control', 'led_ids': '411', 'device': 'm3', 'colour': [40, 0, 0]}}
08/16/2022 03:03:31 PM daemon.py[line:652]INFO - b'lw-\x01(\x00\x00#\xbcv'
08/16/2022 03:03:31 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 03:03:31 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 03:03:31 PM rcomm.py[line:143]INFO - data -> b'lLEDU\x84'
08/16/2022 03:03:31 PM daemon.py[line:658]DEBUG - r -> b'lLEDU\x84'
08/16/2022 03:03:31 PM daemon.py[line:111]DEBUG - send_json -> {'rep': {'device': 'm3', 'result': 'success'}}
08/16/2022 03:03:32 PM daemon.py[line:93]INFO - gui msg: {'req': {'command': 'lattice_led_control', 'led_ids': '412', 'device': 'm3', 'colour': [40, 0, 0]}}
08/16/2022 03:03:32 PM daemon.py[line:652]INFO - b'lw-\x01(\x00\x00"\x9df'
08/16/2022 03:03:32 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 03:03:32 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 03:03:32 PM rcomm.py[line:143]INFO - data -> b'lLEDU\x84'
08/16/2022 03:03:32 PM daemon.py[line:658]DEBUG - r -> b'lLEDU\x84'
08/16/2022 03:03:32 PM daemon.py[line:111]DEBUG - send_json -> {'rep': {'device': 'm3', 'result': 'success'}}
08/16/2022 03:03:32 PM daemon.py[line:93]INFO - gui msg: {'req': {'command': 'lattice_led_control', 'led_ids': '413', 'device': 'm3', 'colour': [40, 0, 0]}}
08/16/2022 03:03:32 PM daemon.py[line:652]INFO - b'lw-\x01(\x00\x00!\xfeV'
08/16/2022 03:03:32 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 03:03:32 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 03:03:33 PM rcomm.py[line:143]INFO - data -> b'lLEDU\x84'
08/16/2022 03:03:33 PM daemon.py[line:658]DEBUG - r -> b'lLEDU\x84'
08/16/2022 03:03:33 PM daemon.py[line:111]DEBUG - send_json -> {'rep': {'device': 'm3', 'result': 'success'}}
08/16/2022 03:03:33 PM daemon.py[line:93]INFO - gui msg: {'req': {'command': 'lattice_led_control', 'led_ids': '414', 'device': 'm3', 'colour': [40, 0, 0]}}
08/16/2022 03:03:33 PM daemon.py[line:652]INFO - b'lw-\x01(\x00\x00 \xdfF'
08/16/2022 03:03:33 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 03:03:33 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 03:03:33 PM rcomm.py[line:143]INFO - data -> b'lLEDU\x84'
08/16/2022 03:03:33 PM daemon.py[line:658]DEBUG - r -> b'lLEDU\x84'
08/16/2022 03:03:33 PM daemon.py[line:111]DEBUG - send_json -> {'rep': {'device': 'm3', 'result': 'success'}}
08/16/2022 03:03:34 PM daemon.py[line:93]INFO - gui msg: {'req': {'command': 'lattice_led_control', 'led_ids': '415', 'device': 'm3', 'colour': [40, 0, 0]}}
08/16/2022 03:03:34 PM daemon.py[line:652]INFO - b'lw-\x01(\x00\x00\x1fc\x81'
08/16/2022 03:03:34 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 03:03:34 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 03:03:34 PM rcomm.py[line:143]INFO - data -> b'lLEDU\x84'
08/16/2022 03:03:34 PM daemon.py[line:658]DEBUG - r -> b'lLEDU\x84'
08/16/2022 03:03:34 PM daemon.py[line:111]DEBUG - send_json -> {'rep': {'device': 'm3', 'result': 'success'}}
08/16/2022 03:07:10 PM serv.py[line:49]INFO - serv heatbeat
08/16/2022 03:07:34 PM daemon.py[line:93]INFO - gui msg: {'req': {'command': 'lattice_led_control', 'led_ids': '401', 'device': 'm3', 'colour': [40, 0, 0]}}
08/16/2022 03:07:34 PM daemon.py[line:652]INFO - b'lw-\x01(\x00\x00-r\x97'
08/16/2022 03:07:34 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 03:07:34 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 03:07:34 PM rcomm.py[line:143]INFO - data -> b'lLEDU\x84'
08/16/2022 03:07:34 PM daemon.py[line:658]DEBUG - r -> b'lLEDU\x84'
08/16/2022 03:07:34 PM daemon.py[line:111]DEBUG - send_json -> {'rep': {'device': 'm3', 'result': 'success'}}
08/16/2022 03:07:34 PM daemon.py[line:93]INFO - gui msg: {'req': {'command': 'lattice_led_control', 'led_ids': '402', 'device': 'm3', 'colour': [40, 0, 0]}}
08/16/2022 03:07:34 PM daemon.py[line:652]INFO - b'lw-\x01(\x00\x00,S\x87'
08/16/2022 03:07:34 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 03:07:34 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 03:07:35 PM rcomm.py[line:143]INFO - data -> b'lLEDU\x84'
08/16/2022 03:07:35 PM daemon.py[line:658]DEBUG - r -> b'lLEDU\x84'
08/16/2022 03:07:35 PM daemon.py[line:111]DEBUG - send_json -> {'rep': {'device': 'm3', 'result': 'success'}}
08/16/2022 03:07:35 PM daemon.py[line:93]INFO - gui msg: {'req': {'command': 'lattice_led_control', 'led_ids': '403', 'device': 'm3', 'colour': [40, 0, 0]}}
08/16/2022 03:07:35 PM daemon.py[line:652]INFO - b'lw-\x01(\x00\x00+\xb4\xf7'
08/16/2022 03:07:35 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 03:07:35 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 03:07:35 PM rcomm.py[line:143]INFO - data -> b'lLEDU\x84'
08/16/2022 03:07:35 PM daemon.py[line:658]DEBUG - r -> b'lLEDU\x84'
08/16/2022 03:07:35 PM daemon.py[line:111]DEBUG - send_json -> {'rep': {'device': 'm3', 'result': 'success'}}
08/16/2022 03:07:36 PM daemon.py[line:93]INFO - gui msg: {'req': {'command': 'lattice_led_control', 'led_ids': '404', 'device': 'm3', 'colour': [40, 0, 0]}}
08/16/2022 03:07:36 PM daemon.py[line:652]INFO - b'lw-\x01(\x00\x00*\x95\xe7'
08/16/2022 03:07:36 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 03:07:36 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 03:07:36 PM rcomm.py[line:143]INFO - data -> b'lLEDU\x84'
08/16/2022 03:07:36 PM daemon.py[line:658]DEBUG - r -> b'lLEDU\x84'
08/16/2022 03:07:36 PM daemon.py[line:111]DEBUG - send_json -> {'rep': {'device': 'm3', 'result': 'success'}}
08/16/2022 03:07:36 PM daemon.py[line:93]INFO - gui msg: {'req': {'command': 'lattice_led_control', 'led_ids': '405', 'device': 'm3', 'colour': [40, 0, 0]}}
08/16/2022 03:07:36 PM daemon.py[line:652]INFO - b'lw-\x01(\x00\x00)\xf6\xd7'
08/16/2022 03:07:36 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 03:07:36 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 03:07:36 PM rcomm.py[line:143]INFO - data -> b'lLEDU\x84'
08/16/2022 03:07:36 PM daemon.py[line:658]DEBUG - r -> b'lLEDU\x84'
08/16/2022 03:07:36 PM daemon.py[line:111]DEBUG - send_json -> {'rep': {'device': 'm3', 'result': 'success'}}
08/16/2022 03:07:37 PM daemon.py[line:93]INFO - gui msg: {'req': {'command': 'lattice_led_control', 'led_ids': '406', 'device': 'm3', 'colour': [40, 0, 0]}}
08/16/2022 03:07:37 PM daemon.py[line:652]INFO - b'lw-\x01(\x00\x00(\xd7\xc7'
08/16/2022 03:07:37 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 03:07:37 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 03:07:37 PM rcomm.py[line:143]INFO - data -> b'lLEDU\x84'
08/16/2022 03:07:37 PM daemon.py[line:658]DEBUG - r -> b'lLEDU\x84'
08/16/2022 03:07:37 PM daemon.py[line:111]DEBUG - send_json -> {'rep': {'device': 'm3', 'result': 'success'}}
08/16/2022 03:07:37 PM daemon.py[line:93]INFO - gui msg: {'req': {'command': 'lattice_led_control', 'led_ids': '407', 'device': 'm3', 'colour': [40, 0, 0]}}
08/16/2022 03:07:37 PM daemon.py[line:652]INFO - b"lw-\x01(\x00\x00'86"
08/16/2022 03:07:37 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 03:07:37 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 03:07:37 PM rcomm.py[line:143]INFO - data -> b'lLEDU\x84'
08/16/2022 03:07:37 PM daemon.py[line:658]DEBUG - r -> b'lLEDU\x84'
08/16/2022 03:07:37 PM daemon.py[line:111]DEBUG - send_json -> {'rep': {'device': 'm3', 'result': 'success'}}
08/16/2022 03:07:38 PM daemon.py[line:93]INFO - gui msg: {'req': {'command': 'lattice_led_control', 'led_ids': '408', 'device': 'm3', 'colour': [40, 0, 0]}}
08/16/2022 03:07:38 PM daemon.py[line:652]INFO - b'lw-\x01(\x00\x00&\x19&'
08/16/2022 03:07:38 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 03:07:38 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 03:07:38 PM rcomm.py[line:143]INFO - data -> b'lLEDU\x84'
08/16/2022 03:07:38 PM daemon.py[line:658]DEBUG - r -> b'lLEDU\x84'
08/16/2022 03:07:38 PM daemon.py[line:111]DEBUG - send_json -> {'rep': {'device': 'm3', 'result': 'success'}}
08/16/2022 03:07:38 PM daemon.py[line:93]INFO - gui msg: {'req': {'command': 'lattice_led_control', 'led_ids': '409', 'device': 'm3', 'colour': [40, 0, 0]}}
08/16/2022 03:07:38 PM daemon.py[line:652]INFO - b'lw-\x01(\x00\x00%z\x16'
08/16/2022 03:07:38 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 03:07:38 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 03:07:39 PM rcomm.py[line:143]INFO - data -> b'lLEDU\x84'
08/16/2022 03:07:39 PM daemon.py[line:658]DEBUG - r -> b'lLEDU\x84'
08/16/2022 03:07:39 PM daemon.py[line:111]DEBUG - send_json -> {'rep': {'device': 'm3', 'result': 'success'}}
08/16/2022 03:07:39 PM daemon.py[line:93]INFO - gui msg: {'req': {'command': 'lattice_led_control', 'led_ids': '410', 'device': 'm3', 'colour': [40, 0, 0]}}
08/16/2022 03:07:39 PM daemon.py[line:652]INFO - b'lw-\x01(\x00\x00$[\x06'
08/16/2022 03:07:39 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 03:07:39 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 03:07:39 PM rcomm.py[line:143]INFO - data -> b'lLEDU\x84'
08/16/2022 03:07:39 PM daemon.py[line:658]DEBUG - r -> b'lLEDU\x84'
08/16/2022 03:07:39 PM daemon.py[line:111]DEBUG - send_json -> {'rep': {'device': 'm3', 'result': 'success'}}
08/16/2022 03:07:40 PM daemon.py[line:93]INFO - gui msg: {'req': {'command': 'lattice_led_control', 'led_ids': '411', 'device': 'm3', 'colour': [40, 0, 0]}}
08/16/2022 03:07:40 PM daemon.py[line:652]INFO - b'lw-\x01(\x00\x00#\xbcv'
08/16/2022 03:07:40 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 03:07:40 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 03:07:40 PM rcomm.py[line:143]INFO - data -> b'lLEDU\x84'
08/16/2022 03:07:40 PM daemon.py[line:658]DEBUG - r -> b'lLEDU\x84'
08/16/2022 03:07:40 PM daemon.py[line:111]DEBUG - send_json -> {'rep': {'device': 'm3', 'result': 'success'}}
08/16/2022 03:07:40 PM daemon.py[line:93]INFO - gui msg: {'req': {'command': 'lattice_led_control', 'led_ids': '412', 'device': 'm3', 'colour': [40, 0, 0]}}
08/16/2022 03:07:40 PM daemon.py[line:652]INFO - b'lw-\x01(\x00\x00"\x9df'
08/16/2022 03:07:40 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 03:07:40 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 03:07:40 PM rcomm.py[line:143]INFO - data -> b'lLEDU\x84'
08/16/2022 03:07:40 PM daemon.py[line:658]DEBUG - r -> b'lLEDU\x84'
08/16/2022 03:07:40 PM daemon.py[line:111]DEBUG - send_json -> {'rep': {'device': 'm3', 'result': 'success'}}
08/16/2022 03:07:41 PM daemon.py[line:93]INFO - gui msg: {'req': {'command': 'lattice_led_control', 'led_ids': '413', 'device': 'm3', 'colour': [40, 0, 0]}}
08/16/2022 03:07:41 PM daemon.py[line:652]INFO - b'lw-\x01(\x00\x00!\xfeV'
08/16/2022 03:07:41 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 03:07:41 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 03:07:41 PM rcomm.py[line:143]INFO - data -> b'lLEDU\x84'
08/16/2022 03:07:41 PM daemon.py[line:658]DEBUG - r -> b'lLEDU\x84'
08/16/2022 03:07:41 PM daemon.py[line:111]DEBUG - send_json -> {'rep': {'device': 'm3', 'result': 'success'}}
08/16/2022 03:07:41 PM daemon.py[line:93]INFO - gui msg: {'req': {'command': 'lattice_led_control', 'led_ids': '414', 'device': 'm3', 'colour': [40, 0, 0]}}
08/16/2022 03:07:41 PM daemon.py[line:652]INFO - b'lw-\x01(\x00\x00 \xdfF'
08/16/2022 03:07:41 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 03:07:41 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 03:07:41 PM rcomm.py[line:143]INFO - data -> b'lLEDU\x84'
08/16/2022 03:07:41 PM daemon.py[line:658]DEBUG - r -> b'lLEDU\x84'
08/16/2022 03:07:41 PM daemon.py[line:111]DEBUG - send_json -> {'rep': {'device': 'm3', 'result': 'success'}}
08/16/2022 03:07:42 PM daemon.py[line:93]INFO - gui msg: {'req': {'command': 'lattice_led_control', 'led_ids': '415', 'device': 'm3', 'colour': [40, 0, 0]}}
08/16/2022 03:07:42 PM daemon.py[line:652]INFO - b'lw-\x01(\x00\x00\x1fc\x81'
08/16/2022 03:07:42 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 03:07:42 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 03:07:42 PM rcomm.py[line:143]INFO - data -> b'lLEDU\x84'
08/16/2022 03:07:42 PM daemon.py[line:658]DEBUG - r -> b'lLEDU\x84'
08/16/2022 03:07:42 PM daemon.py[line:111]DEBUG - send_json -> {'rep': {'device': 'm3', 'result': 'success'}}
08/16/2022 03:07:50 PM daemon.py[line:93]INFO - gui msg: {'req': {'command': 'lattice_led_control', 'led_ids': '401', 'device': 'm3', 'colour': [0, 0, 0]}}
08/16/2022 03:07:50 PM daemon.py[line:652]INFO - b'lw-\x01\x00\x00\x00-\xff%'
08/16/2022 03:07:50 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 03:07:50 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 03:07:50 PM rcomm.py[line:143]INFO - data -> b'lLEDU\x84'
08/16/2022 03:07:50 PM daemon.py[line:658]DEBUG - r -> b'lLEDU\x84'
08/16/2022 03:07:50 PM daemon.py[line:111]DEBUG - send_json -> {'rep': {'device': 'm3', 'result': 'success'}}
08/16/2022 03:07:51 PM daemon.py[line:93]INFO - gui msg: {'req': {'command': 'lattice_led_control', 'led_ids': '402', 'device': 'm3', 'colour': [0, 0, 0]}}
08/16/2022 03:07:51 PM daemon.py[line:652]INFO - b'lw-\x01\x00\x00\x00,\xde5'
08/16/2022 03:07:51 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 03:07:51 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 03:07:51 PM rcomm.py[line:143]INFO - data -> b'lLEDU\x84'
08/16/2022 03:07:51 PM daemon.py[line:658]DEBUG - r -> b'lLEDU\x84'
08/16/2022 03:07:51 PM daemon.py[line:111]DEBUG - send_json -> {'rep': {'device': 'm3', 'result': 'success'}}
08/16/2022 03:07:51 PM daemon.py[line:93]INFO - gui msg: {'req': {'command': 'lattice_led_control', 'led_ids': '403', 'device': 'm3', 'colour': [0, 0, 0]}}
08/16/2022 03:07:51 PM daemon.py[line:652]INFO - b'lw-\x01\x00\x00\x00+9E'
08/16/2022 03:07:51 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 03:07:51 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 03:07:51 PM rcomm.py[line:143]INFO - data -> b'lLEDU\x84'
08/16/2022 03:07:51 PM daemon.py[line:658]DEBUG - r -> b'lLEDU\x84'
08/16/2022 03:07:51 PM daemon.py[line:111]DEBUG - send_json -> {'rep': {'device': 'm3', 'result': 'success'}}
08/16/2022 03:07:52 PM daemon.py[line:93]INFO - gui msg: {'req': {'command': 'lattice_led_control', 'led_ids': '404', 'device': 'm3', 'colour': [0, 0, 0]}}
08/16/2022 03:07:52 PM daemon.py[line:652]INFO - b'lw-\x01\x00\x00\x00*\x18U'
08/16/2022 03:07:52 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 03:07:52 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 03:07:52 PM rcomm.py[line:143]INFO - data -> b'lLEDU\x84'
08/16/2022 03:07:52 PM daemon.py[line:658]DEBUG - r -> b'lLEDU\x84'
08/16/2022 03:07:52 PM daemon.py[line:111]DEBUG - send_json -> {'rep': {'device': 'm3', 'result': 'success'}}
08/16/2022 03:07:52 PM daemon.py[line:93]INFO - gui msg: {'req': {'command': 'lattice_led_control', 'led_ids': '405', 'device': 'm3', 'colour': [0, 0, 0]}}
08/16/2022 03:07:52 PM daemon.py[line:652]INFO - b'lw-\x01\x00\x00\x00){e'
08/16/2022 03:07:52 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 03:07:52 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 03:07:53 PM rcomm.py[line:143]INFO - data -> b'lLEDU\x84'
08/16/2022 03:07:53 PM daemon.py[line:658]DEBUG - r -> b'lLEDU\x84'
08/16/2022 03:07:53 PM daemon.py[line:111]DEBUG - send_json -> {'rep': {'device': 'm3', 'result': 'success'}}
08/16/2022 03:07:53 PM daemon.py[line:93]INFO - gui msg: {'req': {'command': 'lattice_led_control', 'led_ids': '406', 'device': 'm3', 'colour': [0, 0, 0]}}
08/16/2022 03:07:53 PM daemon.py[line:652]INFO - b'lw-\x01\x00\x00\x00(Zu'
08/16/2022 03:07:53 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 03:07:53 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 03:07:53 PM rcomm.py[line:143]INFO - data -> b'lLEDU\x84'
08/16/2022 03:07:53 PM daemon.py[line:658]DEBUG - r -> b'lLEDU\x84'
08/16/2022 03:07:53 PM daemon.py[line:111]DEBUG - send_json -> {'rep': {'device': 'm3', 'result': 'success'}}
08/16/2022 03:07:54 PM daemon.py[line:93]INFO - gui msg: {'req': {'command': 'lattice_led_control', 'led_ids': '407', 'device': 'm3', 'colour': [0, 0, 0]}}
08/16/2022 03:07:54 PM daemon.py[line:652]INFO - b"lw-\x01\x00\x00\x00'\xb5\x84"
08/16/2022 03:07:54 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 03:07:54 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 03:07:54 PM rcomm.py[line:143]INFO - data -> b'lLEDU\x84'
08/16/2022 03:07:54 PM daemon.py[line:658]DEBUG - r -> b'lLEDU\x84'
08/16/2022 03:07:54 PM daemon.py[line:111]DEBUG - send_json -> {'rep': {'device': 'm3', 'result': 'success'}}
08/16/2022 03:07:54 PM daemon.py[line:93]INFO - gui msg: {'req': {'command': 'lattice_led_control', 'led_ids': '408', 'device': 'm3', 'colour': [0, 0, 0]}}
08/16/2022 03:07:54 PM daemon.py[line:652]INFO - b'lw-\x01\x00\x00\x00&\x94\x94'
08/16/2022 03:07:54 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 03:07:54 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 03:07:54 PM rcomm.py[line:143]INFO - data -> b'lLEDU\x84'
08/16/2022 03:07:54 PM daemon.py[line:658]DEBUG - r -> b'lLEDU\x84'
08/16/2022 03:07:54 PM daemon.py[line:111]DEBUG - send_json -> {'rep': {'device': 'm3', 'result': 'success'}}
08/16/2022 03:07:55 PM daemon.py[line:93]INFO - gui msg: {'req': {'command': 'lattice_led_control', 'led_ids': '409', 'device': 'm3', 'colour': [0, 0, 0]}}
08/16/2022 03:07:55 PM daemon.py[line:652]INFO - b'lw-\x01\x00\x00\x00%\xf7\xa4'
08/16/2022 03:07:55 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 03:07:55 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 03:07:55 PM rcomm.py[line:143]INFO - data -> b'lLEDU\x84'
08/16/2022 03:07:55 PM daemon.py[line:658]DEBUG - r -> b'lLEDU\x84'
08/16/2022 03:07:55 PM daemon.py[line:111]DEBUG - send_json -> {'rep': {'device': 'm3', 'result': 'success'}}
08/16/2022 03:07:55 PM daemon.py[line:93]INFO - gui msg: {'req': {'command': 'lattice_led_control', 'led_ids': '410', 'device': 'm3', 'colour': [0, 0, 0]}}
08/16/2022 03:07:55 PM daemon.py[line:652]INFO - b'lw-\x01\x00\x00\x00$\xd6\xb4'
08/16/2022 03:07:55 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 03:07:55 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 03:07:55 PM rcomm.py[line:143]INFO - data -> b'lLEDU\x84'
08/16/2022 03:07:55 PM daemon.py[line:658]DEBUG - r -> b'lLEDU\x84'
08/16/2022 03:07:55 PM daemon.py[line:111]DEBUG - send_json -> {'rep': {'device': 'm3', 'result': 'success'}}
08/16/2022 03:07:56 PM daemon.py[line:93]INFO - gui msg: {'req': {'command': 'lattice_led_control', 'led_ids': '411', 'device': 'm3', 'colour': [0, 0, 0]}}
08/16/2022 03:07:56 PM daemon.py[line:652]INFO - b'lw-\x01\x00\x00\x00#1\xc4'
08/16/2022 03:07:56 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 03:07:56 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 03:07:56 PM rcomm.py[line:143]INFO - data -> b'lLEDU\x84'
08/16/2022 03:07:56 PM daemon.py[line:658]DEBUG - r -> b'lLEDU\x84'
08/16/2022 03:07:56 PM daemon.py[line:111]DEBUG - send_json -> {'rep': {'device': 'm3', 'result': 'success'}}
08/16/2022 03:07:56 PM daemon.py[line:93]INFO - gui msg: {'req': {'command': 'lattice_led_control', 'led_ids': '412', 'device': 'm3', 'colour': [0, 0, 0]}}
08/16/2022 03:07:56 PM daemon.py[line:652]INFO - b'lw-\x01\x00\x00\x00"\x10\xd4'
08/16/2022 03:07:56 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 03:07:57 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 03:07:57 PM rcomm.py[line:143]INFO - data -> b'lLEDU\x84'
08/16/2022 03:07:57 PM daemon.py[line:658]DEBUG - r -> b'lLEDU\x84'
08/16/2022 03:07:57 PM daemon.py[line:111]DEBUG - send_json -> {'rep': {'device': 'm3', 'result': 'success'}}
08/16/2022 03:07:57 PM daemon.py[line:93]INFO - gui msg: {'req': {'command': 'lattice_led_control', 'led_ids': '413', 'device': 'm3', 'colour': [0, 0, 0]}}
08/16/2022 03:07:57 PM daemon.py[line:652]INFO - b'lw-\x01\x00\x00\x00!s\xe4'
08/16/2022 03:07:57 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 03:07:57 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 03:07:57 PM rcomm.py[line:143]INFO - data -> b'lLEDU\x84'
08/16/2022 03:07:57 PM daemon.py[line:658]DEBUG - r -> b'lLEDU\x84'
08/16/2022 03:07:57 PM daemon.py[line:111]DEBUG - send_json -> {'rep': {'device': 'm3', 'result': 'success'}}
08/16/2022 03:07:58 PM daemon.py[line:93]INFO - gui msg: {'req': {'command': 'lattice_led_control', 'led_ids': '414', 'device': 'm3', 'colour': [0, 0, 0]}}
08/16/2022 03:07:58 PM daemon.py[line:652]INFO - b'lw-\x01\x00\x00\x00 R\xf4'
08/16/2022 03:07:58 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 03:07:58 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 03:07:58 PM rcomm.py[line:143]INFO - data -> b'lLEDU\x84'
08/16/2022 03:07:58 PM daemon.py[line:658]DEBUG - r -> b'lLEDU\x84'
08/16/2022 03:07:58 PM daemon.py[line:111]DEBUG - send_json -> {'rep': {'device': 'm3', 'result': 'success'}}
08/16/2022 03:07:58 PM daemon.py[line:93]INFO - gui msg: {'req': {'command': 'lattice_led_control', 'led_ids': '415', 'device': 'm3', 'colour': [0, 0, 0]}}
08/16/2022 03:07:58 PM daemon.py[line:652]INFO - b'lw-\x01\x00\x00\x00\x1f\xee3'
08/16/2022 03:07:58 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 03:07:58 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 03:07:58 PM rcomm.py[line:143]INFO - data -> b'lLEDU\x84'
08/16/2022 03:07:58 PM daemon.py[line:658]DEBUG - r -> b'lLEDU\x84'
08/16/2022 03:07:58 PM daemon.py[line:111]DEBUG - send_json -> {'rep': {'device': 'm3', 'result': 'success'}}
08/16/2022 03:17:10 PM serv.py[line:49]INFO - serv heatbeat
08/16/2022 03:24:57 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 03:24:57 PM rcomm.py[line:143]INFO - data -> b'\x00\x07\x00'
08/16/2022 03:27:10 PM serv.py[line:49]INFO - serv heatbeat
08/16/2022 03:37:10 PM serv.py[line:49]INFO - serv heatbeat
08/16/2022 03:38:11 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 03:38:11 PM rcomm.py[line:143]INFO - data -> b''
08/16/2022 03:38:42 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 03:38:42 PM rcomm.py[line:143]INFO - data -> b''
08/16/2022 03:39:28 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 03:39:28 PM rcomm.py[line:143]INFO - data -> b''
08/16/2022 03:39:51 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 03:39:51 PM rcomm.py[line:143]INFO - data -> b''
08/16/2022 03:39:51 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 03:39:51 PM rcomm.py[line:143]INFO - data -> b''
08/16/2022 03:39:52 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 03:39:52 PM rcomm.py[line:143]INFO - data -> b''
08/16/2022 03:42:08 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 03:42:09 PM rcomm.py[line:143]INFO - data -> b''
08/16/2022 03:42:17 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 03:42:17 PM rcomm.py[line:143]INFO - data -> b''
08/16/2022 03:42:24 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 03:42:24 PM rcomm.py[line:143]INFO - data -> b''
08/16/2022 03:42:26 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 03:42:26 PM rcomm.py[line:143]INFO - data -> b''
08/16/2022 03:42:34 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 03:42:34 PM rcomm.py[line:143]INFO - data -> b''
08/16/2022 03:42:34 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 03:42:35 PM rcomm.py[line:143]INFO - data -> b''
08/16/2022 03:42:36 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 03:42:36 PM rcomm.py[line:143]INFO - data -> b''
08/16/2022 03:42:37 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 03:42:37 PM rcomm.py[line:143]INFO - data -> b''
08/16/2022 03:43:23 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 03:43:23 PM rcomm.py[line:143]INFO - data -> b''
08/16/2022 03:43:23 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 03:43:23 PM rcomm.py[line:143]INFO - data -> b''
08/16/2022 03:43:24 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 03:43:24 PM rcomm.py[line:143]INFO - data -> b''
08/16/2022 03:43:24 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 03:43:24 PM rcomm.py[line:143]INFO - data -> b''
08/16/2022 03:43:24 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 03:43:24 PM rcomm.py[line:143]INFO - data -> b''
08/16/2022 03:43:24 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 03:43:24 PM rcomm.py[line:143]INFO - data -> b''
08/16/2022 03:43:24 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 03:43:24 PM rcomm.py[line:143]INFO - data -> b''
08/16/2022 03:43:33 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 03:43:33 PM rcomm.py[line:143]INFO - data -> b''
08/16/2022 03:43:33 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 03:43:33 PM rcomm.py[line:143]INFO - data -> b''
08/16/2022 03:43:34 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 03:43:34 PM rcomm.py[line:143]INFO - data -> b''
08/16/2022 03:43:34 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 03:43:34 PM rcomm.py[line:143]INFO - data -> b'"'
08/16/2022 03:43:34 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 03:43:34 PM rcomm.py[line:143]INFO - data -> b'b?1|4}"'
08/16/2022 03:43:34 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 03:43:34 PM rcomm.py[line:143]INFO - data -> b''
08/16/2022 03:43:34 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 03:43:35 PM rcomm.py[line:143]INFO - data -> b'b?1|4}"'
08/16/2022 03:43:35 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 03:43:35 PM rcomm.py[line:143]INFO - data -> b''
08/16/2022 03:43:35 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 03:43:35 PM rcomm.py[line:143]INFO - data -> b''
08/16/2022 03:43:35 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 03:43:35 PM rcomm.py[line:143]INFO - data -> b''
08/16/2022 03:43:35 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 03:43:35 PM rcomm.py[line:143]INFO - data -> b''
08/16/2022 03:43:36 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 03:43:36 PM rcomm.py[line:143]INFO - data -> b''
08/16/2022 03:43:43 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 03:43:43 PM rcomm.py[line:143]INFO - data -> b''
08/16/2022 03:43:43 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 03:43:43 PM rcomm.py[line:143]INFO - data -> b''
08/16/2022 03:43:44 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 03:43:44 PM rcomm.py[line:143]INFO - data -> b''
08/16/2022 03:43:44 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 03:43:44 PM rcomm.py[line:143]INFO - data -> b''
08/16/2022 03:43:44 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 03:43:44 PM rcomm.py[line:143]INFO - data -> b''
08/16/2022 03:43:44 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 03:43:44 PM rcomm.py[line:143]INFO - data -> b''
08/16/2022 03:43:44 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 03:43:44 PM rcomm.py[line:143]INFO - data -> b''
08/16/2022 03:43:44 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 03:43:44 PM rcomm.py[line:143]INFO - data -> b''
08/16/2022 03:43:45 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 03:43:45 PM rcomm.py[line:143]INFO - data -> b''
08/16/2022 03:43:45 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 03:43:45 PM rcomm.py[line:143]INFO - data -> b''
08/16/2022 03:43:45 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 03:43:45 PM rcomm.py[line:143]INFO - data -> b''
08/16/2022 03:43:45 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 03:43:45 PM rcomm.py[line:143]INFO - data -> b''
08/16/2022 03:43:58 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 03:43:58 PM rcomm.py[line:143]INFO - data -> b''
08/16/2022 03:43:58 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 03:43:58 PM rcomm.py[line:143]INFO - data -> b''
08/16/2022 03:43:58 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 03:43:58 PM rcomm.py[line:143]INFO - data -> b''
08/16/2022 03:43:58 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 03:43:58 PM rcomm.py[line:143]INFO - data -> b''
08/16/2022 03:43:58 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 03:43:58 PM rcomm.py[line:143]INFO - data -> b''
08/16/2022 03:43:58 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 03:43:58 PM rcomm.py[line:143]INFO - data -> b''
08/16/2022 03:43:58 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 03:43:58 PM rcomm.py[line:143]INFO - data -> b''
08/16/2022 03:44:06 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 03:44:06 PM rcomm.py[line:143]INFO - data -> b''
08/16/2022 03:44:06 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 03:44:06 PM rcomm.py[line:143]INFO - data -> b''
08/16/2022 03:44:06 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 03:44:06 PM rcomm.py[line:143]INFO - data -> b''
08/16/2022 03:44:06 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 03:44:06 PM rcomm.py[line:143]INFO - data -> b''
08/16/2022 03:44:07 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 03:44:07 PM rcomm.py[line:143]INFO - data -> b''
08/16/2022 03:44:07 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 03:44:07 PM rcomm.py[line:143]INFO - data -> b''
08/16/2022 03:44:07 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 03:44:07 PM rcomm.py[line:143]INFO - data -> b''
08/16/2022 03:44:07 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 03:44:07 PM rcomm.py[line:143]INFO - data -> b''
08/16/2022 03:44:07 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 03:44:07 PM rcomm.py[line:143]INFO - data -> b''
08/16/2022 03:44:07 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 03:44:07 PM rcomm.py[line:143]INFO - data -> b''
08/16/2022 03:44:08 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 03:44:08 PM rcomm.py[line:143]INFO - data -> b''
08/16/2022 03:44:08 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 03:44:08 PM rcomm.py[line:143]INFO - data -> b''
08/16/2022 03:44:08 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 03:44:08 PM rcomm.py[line:143]INFO - data -> b''
08/16/2022 03:44:08 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 03:44:08 PM rcomm.py[line:143]INFO - data -> b''
08/16/2022 03:44:08 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 03:44:08 PM rcomm.py[line:143]INFO - data -> b''
08/16/2022 03:44:08 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 03:44:08 PM rcomm.py[line:143]INFO - data -> b''
08/16/2022 03:44:09 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 03:44:09 PM rcomm.py[line:143]INFO - data -> b''
08/16/2022 03:44:09 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 03:44:09 PM rcomm.py[line:143]INFO - data -> b''
08/16/2022 03:44:09 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 03:44:09 PM rcomm.py[line:143]INFO - data -> b''
08/16/2022 03:44:09 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 03:44:09 PM rcomm.py[line:143]INFO - data -> b''
08/16/2022 03:44:09 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 03:44:09 PM rcomm.py[line:143]INFO - data -> b''
08/16/2022 03:44:09 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 03:44:09 PM rcomm.py[line:143]INFO - data -> b''
08/16/2022 03:44:10 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 03:44:10 PM rcomm.py[line:143]INFO - data -> b''
08/16/2022 03:44:10 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 03:44:10 PM rcomm.py[line:143]INFO - data -> b''
08/16/2022 03:44:10 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 03:44:10 PM rcomm.py[line:143]INFO - data -> b''
08/16/2022 03:44:10 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 03:44:10 PM rcomm.py[line:143]INFO - data -> b''
08/16/2022 03:44:10 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 03:44:10 PM rcomm.py[line:143]INFO - data -> b''
08/16/2022 03:44:10 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 03:44:10 PM rcomm.py[line:143]INFO - data -> b''
08/16/2022 03:44:11 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 03:44:11 PM rcomm.py[line:143]INFO - data -> b''
08/16/2022 03:44:11 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 03:44:11 PM rcomm.py[line:143]INFO - data -> b''
08/16/2022 03:44:21 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 03:44:21 PM rcomm.py[line:143]INFO - data -> b''
08/16/2022 03:44:22 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 03:44:22 PM rcomm.py[line:143]INFO - data -> b''
08/16/2022 03:44:22 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 03:44:22 PM rcomm.py[line:143]INFO - data -> b''
08/16/2022 03:44:22 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 03:44:22 PM rcomm.py[line:143]INFO - data -> b''
08/16/2022 03:44:22 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 03:44:22 PM rcomm.py[line:143]INFO - data -> b''
08/16/2022 03:44:22 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 03:44:22 PM rcomm.py[line:143]INFO - data -> b''
08/16/2022 03:44:22 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 03:44:22 PM rcomm.py[line:143]INFO - data -> b''
08/16/2022 03:44:23 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 03:44:23 PM rcomm.py[line:143]INFO - data -> b''
08/16/2022 03:44:23 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 03:44:23 PM rcomm.py[line:143]INFO - data -> b''
08/16/2022 03:44:23 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 03:44:23 PM rcomm.py[line:143]INFO - data -> b''
08/16/2022 03:44:23 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 03:44:23 PM rcomm.py[line:143]INFO - data -> b''
08/16/2022 03:44:23 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 03:44:23 PM rcomm.py[line:143]INFO - data -> b''
08/16/2022 03:44:23 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 03:44:23 PM rcomm.py[line:143]INFO - data -> b''
08/16/2022 03:44:24 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 03:44:24 PM rcomm.py[line:143]INFO - data -> b''
08/16/2022 03:44:24 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 03:44:24 PM rcomm.py[line:143]INFO - data -> b''
08/16/2022 03:44:24 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 03:44:24 PM rcomm.py[line:143]INFO - data -> b''
08/16/2022 03:44:24 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 03:44:24 PM rcomm.py[line:143]INFO - data -> b''
08/16/2022 03:44:30 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 03:44:30 PM rcomm.py[line:143]INFO - data -> b'b?1|4}"'
08/16/2022 03:44:30 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 03:44:30 PM rcomm.py[line:143]INFO - data -> b''
08/16/2022 03:44:30 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 03:44:30 PM rcomm.py[line:143]INFO - data -> b''
08/16/2022 03:44:30 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 03:44:30 PM rcomm.py[line:143]INFO - data -> b''
08/16/2022 03:44:31 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 03:44:31 PM rcomm.py[line:143]INFO - data -> b''
08/16/2022 03:44:31 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 03:44:31 PM rcomm.py[line:143]INFO - data -> b''
08/16/2022 03:44:31 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 03:44:31 PM rcomm.py[line:143]INFO - data -> b''
08/16/2022 03:44:31 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 03:44:31 PM rcomm.py[line:143]INFO - data -> b''
08/16/2022 03:44:31 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 03:44:31 PM rcomm.py[line:143]INFO - data -> b''
08/16/2022 03:44:31 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 03:44:31 PM rcomm.py[line:143]INFO - data -> b''
08/16/2022 03:44:32 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 03:44:32 PM rcomm.py[line:143]INFO - data -> b''
08/16/2022 03:44:32 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 03:44:32 PM rcomm.py[line:143]INFO - data -> b''
08/16/2022 03:44:32 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 03:44:32 PM rcomm.py[line:143]INFO - data -> b''
08/16/2022 03:44:32 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 03:44:32 PM rcomm.py[line:143]INFO - data -> b''
08/16/2022 03:44:39 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 03:44:39 PM rcomm.py[line:143]INFO - data -> b''
08/16/2022 03:44:39 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 03:44:39 PM rcomm.py[line:143]INFO - data -> b''
08/16/2022 03:44:39 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 03:44:39 PM rcomm.py[line:143]INFO - data -> b''
08/16/2022 03:44:39 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 03:44:39 PM rcomm.py[line:143]INFO - data -> b''
08/16/2022 03:44:39 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 03:44:39 PM rcomm.py[line:143]INFO - data -> b''
08/16/2022 03:44:39 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 03:44:39 PM rcomm.py[line:143]INFO - data -> b''
08/16/2022 03:44:40 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 03:44:40 PM rcomm.py[line:143]INFO - data -> b''
08/16/2022 03:44:40 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 03:44:40 PM rcomm.py[line:143]INFO - data -> b''
08/16/2022 03:44:40 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 03:44:40 PM rcomm.py[line:143]INFO - data -> b''
08/16/2022 03:44:40 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 03:44:40 PM rcomm.py[line:143]INFO - data -> b''
08/16/2022 03:44:40 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 03:44:40 PM rcomm.py[line:143]INFO - data -> b''
08/16/2022 03:44:40 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 03:44:40 PM rcomm.py[line:143]INFO - data -> b''
08/16/2022 03:44:41 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 03:44:41 PM rcomm.py[line:143]INFO - data -> b''
08/16/2022 03:44:41 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 03:44:41 PM rcomm.py[line:143]INFO - data -> b''
08/16/2022 03:44:41 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 03:44:41 PM rcomm.py[line:143]INFO - data -> b''
08/16/2022 03:44:41 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 03:44:41 PM rcomm.py[line:143]INFO - data -> b''
08/16/2022 03:44:42 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 03:44:42 PM rcomm.py[line:143]INFO - data -> b''
08/16/2022 03:44:42 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 03:44:42 PM rcomm.py[line:143]INFO - data -> b''
08/16/2022 03:44:42 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 03:44:42 PM rcomm.py[line:143]INFO - data -> b''
08/16/2022 03:44:42 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 03:44:43 PM rcomm.py[line:143]INFO - data -> b''
08/16/2022 03:44:43 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 03:44:43 PM rcomm.py[line:143]INFO - data -> b''
08/16/2022 03:44:43 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 03:44:43 PM rcomm.py[line:143]INFO - data -> b''
08/16/2022 03:44:43 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 03:44:43 PM rcomm.py[line:143]INFO - data -> b''
08/16/2022 03:44:43 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 03:44:43 PM rcomm.py[line:143]INFO - data -> b''
08/16/2022 03:44:43 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 03:44:43 PM rcomm.py[line:143]INFO - data -> b''
08/16/2022 03:44:43 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 03:44:43 PM rcomm.py[line:143]INFO - data -> b''
08/16/2022 03:44:44 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 03:44:44 PM rcomm.py[line:143]INFO - data -> b''
08/16/2022 03:44:44 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 03:44:44 PM rcomm.py[line:143]INFO - data -> b''
08/16/2022 03:44:44 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 03:44:44 PM rcomm.py[line:143]INFO - data -> b'bQR-162\x03\xcd'
08/16/2022 03:44:44 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 03:44:44 PM rcomm.py[line:143]INFO - data -> b''
08/16/2022 03:44:45 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 03:44:45 PM rcomm.py[line:143]INFO - data -> b''
08/16/2022 03:44:45 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 03:44:45 PM rcomm.py[line:143]INFO - data -> b''
08/16/2022 03:44:45 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 03:44:45 PM rcomm.py[line:143]INFO - data -> b''
08/16/2022 03:44:46 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 03:44:46 PM rcomm.py[line:143]INFO - data -> b''
08/16/2022 03:44:46 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 03:44:46 PM rcomm.py[line:143]INFO - data -> b''
08/16/2022 03:44:46 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 03:44:46 PM rcomm.py[line:143]INFO - data -> b''
08/16/2022 03:44:46 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 03:44:46 PM rcomm.py[line:143]INFO - data -> b''
08/16/2022 03:44:46 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 03:44:46 PM rcomm.py[line:143]INFO - data -> b''
08/16/2022 03:44:46 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 03:44:46 PM rcomm.py[line:143]INFO - data -> b''
08/16/2022 03:44:47 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 03:44:47 PM rcomm.py[line:143]INFO - data -> b''
08/16/2022 03:44:47 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 03:44:47 PM rcomm.py[line:143]INFO - data -> b''
08/16/2022 03:44:47 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 03:44:47 PM rcomm.py[line:143]INFO - data -> b''
08/16/2022 03:44:47 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 03:44:47 PM rcomm.py[line:143]INFO - data -> b''
08/16/2022 03:44:47 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 03:44:47 PM rcomm.py[line:143]INFO - data -> b'bQR298^\xeb'
08/16/2022 03:44:48 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 03:44:48 PM rcomm.py[line:143]INFO - data -> b''
08/16/2022 03:44:48 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 03:44:48 PM rcomm.py[line:143]INFO - data -> b''
08/16/2022 03:47:09 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 03:47:09 PM rcomm.py[line:143]INFO - data -> b''
08/16/2022 03:47:10 PM serv.py[line:49]INFO - serv heatbeat
08/16/2022 03:47:11 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 03:47:11 PM rcomm.py[line:143]INFO - data -> b''
08/16/2022 03:47:19 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 03:47:19 PM rcomm.py[line:143]INFO - data -> b''
08/16/2022 03:47:22 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 03:47:22 PM rcomm.py[line:143]INFO - data -> b''
08/16/2022 03:57:10 PM serv.py[line:49]INFO - serv heatbeat
08/16/2022 04:07:10 PM serv.py[line:49]INFO - serv heatbeat
08/16/2022 04:10:33 PM daemon.py[line:45]INFO - hello
08/16/2022 04:10:33 PM daemon.py[line:46]INFO - /home/ruijunfeng/works/fusion/m3ham/log/ham.log
08/16/2022 04:10:33 PM rcomm.py[line:72]INFO - ruijunfeng-PC
08/16/2022 04:10:33 PM rcomm.py[line:74]INFO - hello m3
08/16/2022 04:10:33 PM rcomm.py[line:51]INFO - found FTDI device:/dev/serial/by-id/usb-FTDI_FT230X_Basic_UART_DK0B3QX3-if00-port0
08/16/2022 04:10:33 PM rcomm.py[line:115]ERROR - failed to open device: Y as [Errno 16] could not open port /dev/serial/by-id/usb-FTDI_FT230X_Basic_UART_DK0B3QX3-if00-port0: [Errno 16] Device or resource busy: '/dev/serial/by-id/usb-FTDI_FT230X_Basic_UART_DK0B3QX3-if00-port0'
08/16/2022 04:10:33 PM rcomm.py[line:115]ERROR - failed to open device: AC as [Errno 2] could not open port /dev/serial/by-id/usb-1a86_USB2.0-Serial-if00-port0: [Errno 2] No such file or directory: '/dev/serial/by-id/usb-1a86_USB2.0-Serial-if00-port0'
08/16/2022 04:10:33 PM daemon.py[line:723]INFO - b'lg\x06R'
08/16/2022 04:10:33 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 04:10:33 PM rcomm.py[line:226]ERROR - failed to flush Y -> 'NoneType' object has no attribute 'flush'
08/16/2022 04:10:33 PM rcomm.py[line:115]ERROR - failed to open device: Y as [Errno 16] could not open port /dev/serial/by-id/usb-FTDI_FT230X_Basic_UART_DK0B3QX3-if00-port0: [Errno 16] Device or resource busy: '/dev/serial/by-id/usb-FTDI_FT230X_Basic_UART_DK0B3QX3-if00-port0'
08/16/2022 04:10:33 PM rcomm.py[line:115]ERROR - failed to open device: AC as [Errno 2] could not open port /dev/serial/by-id/usb-1a86_USB2.0-Serial-if00-port0: [Errno 2] No such file or directory: '/dev/serial/by-id/usb-1a86_USB2.0-Serial-if00-port0'
08/16/2022 04:10:33 PM rcomm.py[line:204]ERROR - failed to write dev: 'NoneType' object has no attribute 'write'
08/16/2022 04:10:33 PM daemon.py[line:732]ERROR - no ack
08/16/2022 04:10:33 PM daemon.py[line:723]INFO - b'lg\x06R'
08/16/2022 04:10:33 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 04:10:33 PM rcomm.py[line:226]ERROR - failed to flush Y -> 'NoneType' object has no attribute 'flush'
08/16/2022 04:10:33 PM rcomm.py[line:115]ERROR - failed to open device: Y as [Errno 16] could not open port /dev/serial/by-id/usb-FTDI_FT230X_Basic_UART_DK0B3QX3-if00-port0: [Errno 16] Device or resource busy: '/dev/serial/by-id/usb-FTDI_FT230X_Basic_UART_DK0B3QX3-if00-port0'
08/16/2022 04:10:33 PM rcomm.py[line:115]ERROR - failed to open device: AC as [Errno 2] could not open port /dev/serial/by-id/usb-1a86_USB2.0-Serial-if00-port0: [Errno 2] No such file or directory: '/dev/serial/by-id/usb-1a86_USB2.0-Serial-if00-port0'
08/16/2022 04:10:33 PM rcomm.py[line:204]ERROR - failed to write dev: 'NoneType' object has no attribute 'write'
08/16/2022 04:10:33 PM daemon.py[line:732]ERROR - no ack
08/16/2022 04:10:34 PM daemon.py[line:723]INFO - b'lg\x06R'
08/16/2022 04:10:34 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 04:10:34 PM rcomm.py[line:226]ERROR - failed to flush Y -> 'NoneType' object has no attribute 'flush'
08/16/2022 04:10:34 PM rcomm.py[line:115]ERROR - failed to open device: Y as [Errno 16] could not open port /dev/serial/by-id/usb-FTDI_FT230X_Basic_UART_DK0B3QX3-if00-port0: [Errno 16] Device or resource busy: '/dev/serial/by-id/usb-FTDI_FT230X_Basic_UART_DK0B3QX3-if00-port0'
08/16/2022 04:10:34 PM rcomm.py[line:115]ERROR - failed to open device: AC as [Errno 2] could not open port /dev/serial/by-id/usb-1a86_USB2.0-Serial-if00-port0: [Errno 2] No such file or directory: '/dev/serial/by-id/usb-1a86_USB2.0-Serial-if00-port0'
08/16/2022 04:10:34 PM rcomm.py[line:204]ERROR - failed to write dev: 'NoneType' object has no attribute 'write'
08/16/2022 04:10:34 PM daemon.py[line:732]ERROR - no ack
08/16/2022 04:10:34 PM daemon.py[line:77]INFO - hello beans_control
08/16/2022 04:11:27 PM daemon.py[line:93]INFO - gui msg: {'req': {'command': 'drop_beans', 'led_ids': '101', 'device': 'm3', 'colour': [0, 0, 0]}}
08/16/2022 04:11:27 PM daemon.py[line:111]DEBUG - send_json -> {'rep': {'result': 'error', 'device': 'm3'}}
08/16/2022 04:11:47 PM daemon.py[line:93]INFO - gui msg: {'req': {'command': 'drop_beans', 'ch': '1', 'device': 'm3', 'circle': '1'}}
08/16/2022 04:11:47 PM daemon.py[line:405]INFO - command-->OD
08/16/2022 04:11:47 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 04:11:47 PM rcomm.py[line:226]ERROR - failed to flush Y -> 'NoneType' object has no attribute 'flush'
08/16/2022 04:11:47 PM rcomm.py[line:115]ERROR - failed to open device: Y as [Errno 16] could not open port /dev/serial/by-id/usb-FTDI_FT230X_Basic_UART_DK0B3QX3-if00-port0: [Errno 16] Device or resource busy: '/dev/serial/by-id/usb-FTDI_FT230X_Basic_UART_DK0B3QX3-if00-port0'
08/16/2022 04:11:47 PM rcomm.py[line:115]ERROR - failed to open device: AC as [Errno 2] could not open port /dev/serial/by-id/usb-1a86_USB2.0-Serial-if00-port0: [Errno 2] No such file or directory: '/dev/serial/by-id/usb-1a86_USB2.0-Serial-if00-port0'
08/16/2022 04:11:47 PM rcomm.py[line:204]ERROR - failed to write dev: 'NoneType' object has no attribute 'write'
08/16/2022 04:11:47 PM daemon.py[line:420]ERROR - no ack
08/16/2022 04:11:47 PM daemon.py[line:111]DEBUG - send_json -> {'rep': {'result': 'error', 'device': 'm3'}}
08/16/2022 04:12:00 PM daemon.py[line:45]INFO - hello
08/16/2022 04:12:00 PM daemon.py[line:46]INFO - /home/ruijunfeng/works/fusion/m3ham/log/ham.log
08/16/2022 04:12:00 PM rcomm.py[line:72]INFO - ruijunfeng-PC
08/16/2022 04:12:00 PM rcomm.py[line:74]INFO - hello m3
08/16/2022 04:12:00 PM rcomm.py[line:51]INFO - found FTDI device:/dev/serial/by-id/usb-FTDI_FT230X_Basic_UART_DK0B3QX3-if00-port0
08/16/2022 04:12:00 PM rcomm.py[line:115]ERROR - failed to open device: Y as [Errno 16] could not open port /dev/serial/by-id/usb-FTDI_FT230X_Basic_UART_DK0B3QX3-if00-port0: [Errno 16] Device or resource busy: '/dev/serial/by-id/usb-FTDI_FT230X_Basic_UART_DK0B3QX3-if00-port0'
08/16/2022 04:12:00 PM rcomm.py[line:115]ERROR - failed to open device: AC as [Errno 2] could not open port /dev/serial/by-id/usb-1a86_USB2.0-Serial-if00-port0: [Errno 2] No such file or directory: '/dev/serial/by-id/usb-1a86_USB2.0-Serial-if00-port0'
08/16/2022 04:12:00 PM daemon.py[line:723]INFO - b'lg\x06R'
08/16/2022 04:12:00 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 04:12:00 PM rcomm.py[line:226]ERROR - failed to flush Y -> 'NoneType' object has no attribute 'flush'
08/16/2022 04:12:00 PM rcomm.py[line:115]ERROR - failed to open device: Y as [Errno 16] could not open port /dev/serial/by-id/usb-FTDI_FT230X_Basic_UART_DK0B3QX3-if00-port0: [Errno 16] Device or resource busy: '/dev/serial/by-id/usb-FTDI_FT230X_Basic_UART_DK0B3QX3-if00-port0'
08/16/2022 04:12:00 PM rcomm.py[line:115]ERROR - failed to open device: AC as [Errno 2] could not open port /dev/serial/by-id/usb-1a86_USB2.0-Serial-if00-port0: [Errno 2] No such file or directory: '/dev/serial/by-id/usb-1a86_USB2.0-Serial-if00-port0'
08/16/2022 04:12:00 PM rcomm.py[line:204]ERROR - failed to write dev: 'NoneType' object has no attribute 'write'
08/16/2022 04:12:00 PM daemon.py[line:732]ERROR - no ack
08/16/2022 04:12:00 PM daemon.py[line:723]INFO - b'lg\x06R'
08/16/2022 04:12:00 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 04:12:00 PM rcomm.py[line:226]ERROR - failed to flush Y -> 'NoneType' object has no attribute 'flush'
08/16/2022 04:12:00 PM rcomm.py[line:115]ERROR - failed to open device: Y as [Errno 16] could not open port /dev/serial/by-id/usb-FTDI_FT230X_Basic_UART_DK0B3QX3-if00-port0: [Errno 16] Device or resource busy: '/dev/serial/by-id/usb-FTDI_FT230X_Basic_UART_DK0B3QX3-if00-port0'
08/16/2022 04:12:00 PM rcomm.py[line:115]ERROR - failed to open device: AC as [Errno 2] could not open port /dev/serial/by-id/usb-1a86_USB2.0-Serial-if00-port0: [Errno 2] No such file or directory: '/dev/serial/by-id/usb-1a86_USB2.0-Serial-if00-port0'
08/16/2022 04:12:00 PM rcomm.py[line:204]ERROR - failed to write dev: 'NoneType' object has no attribute 'write'
08/16/2022 04:12:00 PM daemon.py[line:732]ERROR - no ack
08/16/2022 04:12:00 PM daemon.py[line:723]INFO - b'lg\x06R'
08/16/2022 04:12:00 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 04:12:00 PM rcomm.py[line:226]ERROR - failed to flush Y -> 'NoneType' object has no attribute 'flush'
08/16/2022 04:12:00 PM rcomm.py[line:115]ERROR - failed to open device: Y as [Errno 16] could not open port /dev/serial/by-id/usb-FTDI_FT230X_Basic_UART_DK0B3QX3-if00-port0: [Errno 16] Device or resource busy: '/dev/serial/by-id/usb-FTDI_FT230X_Basic_UART_DK0B3QX3-if00-port0'
08/16/2022 04:12:00 PM rcomm.py[line:115]ERROR - failed to open device: AC as [Errno 2] could not open port /dev/serial/by-id/usb-1a86_USB2.0-Serial-if00-port0: [Errno 2] No such file or directory: '/dev/serial/by-id/usb-1a86_USB2.0-Serial-if00-port0'
08/16/2022 04:12:00 PM rcomm.py[line:204]ERROR - failed to write dev: 'NoneType' object has no attribute 'write'
08/16/2022 04:12:00 PM daemon.py[line:732]ERROR - no ack
08/16/2022 04:12:00 PM daemon.py[line:77]INFO - hello beans_control
08/16/2022 04:12:03 PM daemon.py[line:93]INFO - gui msg: {'req': {'ch': '1', 'device': 'm3', 'circle': '1', 'command': 'drop_beans'}}
08/16/2022 04:12:03 PM daemon.py[line:405]INFO - command-->OD
08/16/2022 04:12:03 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 04:12:03 PM rcomm.py[line:226]ERROR - failed to flush Y -> 'NoneType' object has no attribute 'flush'
08/16/2022 04:12:03 PM rcomm.py[line:115]ERROR - failed to open device: Y as [Errno 16] could not open port /dev/serial/by-id/usb-FTDI_FT230X_Basic_UART_DK0B3QX3-if00-port0: [Errno 16] Device or resource busy: '/dev/serial/by-id/usb-FTDI_FT230X_Basic_UART_DK0B3QX3-if00-port0'
08/16/2022 04:12:03 PM rcomm.py[line:115]ERROR - failed to open device: AC as [Errno 2] could not open port /dev/serial/by-id/usb-1a86_USB2.0-Serial-if00-port0: [Errno 2] No such file or directory: '/dev/serial/by-id/usb-1a86_USB2.0-Serial-if00-port0'
08/16/2022 04:12:03 PM rcomm.py[line:204]ERROR - failed to write dev: 'NoneType' object has no attribute 'write'
08/16/2022 04:12:03 PM daemon.py[line:420]ERROR - no ack
08/16/2022 04:12:03 PM daemon.py[line:111]DEBUG - send_json -> {'rep': {'result': 'error', 'device': 'm3'}}
08/16/2022 04:12:28 PM daemon.py[line:93]INFO - gui msg: {'req': {'ch': '1', 'device': 'm3', 'circle': '1', 'command': 'drop_beans'}}
08/16/2022 04:12:28 PM daemon.py[line:405]INFO - command-->OD
08/16/2022 04:12:28 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 04:12:28 PM rcomm.py[line:226]ERROR - failed to flush Y -> 'NoneType' object has no attribute 'flush'
08/16/2022 04:12:28 PM rcomm.py[line:233]ERROR - failed to link usb five times
08/16/2022 04:12:36 PM daemon.py[line:45]INFO - hello
08/16/2022 04:12:36 PM daemon.py[line:46]INFO - /home/ruijunfeng/works/fusion/m3ham/log/ham.log
08/16/2022 04:12:36 PM rcomm.py[line:72]INFO - ruijunfeng-PC
08/16/2022 04:12:36 PM rcomm.py[line:74]INFO - hello m3
08/16/2022 04:12:36 PM rcomm.py[line:51]INFO - found FTDI device:/dev/serial/by-id/usb-FTDI_FT230X_Basic_UART_DK0B3QX3-if00-port0
08/16/2022 04:12:36 PM rcomm.py[line:115]ERROR - failed to open device: Y as [Errno 16] could not open port /dev/serial/by-id/usb-FTDI_FT230X_Basic_UART_DK0B3QX3-if00-port0: [Errno 16] Device or resource busy: '/dev/serial/by-id/usb-FTDI_FT230X_Basic_UART_DK0B3QX3-if00-port0'
08/16/2022 04:12:36 PM rcomm.py[line:115]ERROR - failed to open device: AC as [Errno 2] could not open port /dev/serial/by-id/usb-1a86_USB2.0-Serial-if00-port0: [Errno 2] No such file or directory: '/dev/serial/by-id/usb-1a86_USB2.0-Serial-if00-port0'
08/16/2022 04:12:36 PM daemon.py[line:723]INFO - b'lg\x06R'
08/16/2022 04:12:36 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 04:12:36 PM rcomm.py[line:226]ERROR - failed to flush Y -> 'NoneType' object has no attribute 'flush'
08/16/2022 04:12:36 PM rcomm.py[line:115]ERROR - failed to open device: Y as [Errno 16] could not open port /dev/serial/by-id/usb-FTDI_FT230X_Basic_UART_DK0B3QX3-if00-port0: [Errno 16] Device or resource busy: '/dev/serial/by-id/usb-FTDI_FT230X_Basic_UART_DK0B3QX3-if00-port0'
08/16/2022 04:12:36 PM rcomm.py[line:115]ERROR - failed to open device: AC as [Errno 2] could not open port /dev/serial/by-id/usb-1a86_USB2.0-Serial-if00-port0: [Errno 2] No such file or directory: '/dev/serial/by-id/usb-1a86_USB2.0-Serial-if00-port0'
08/16/2022 04:12:36 PM rcomm.py[line:204]ERROR - failed to write dev: 'NoneType' object has no attribute 'write'
08/16/2022 04:12:36 PM daemon.py[line:732]ERROR - no ack
08/16/2022 04:12:36 PM daemon.py[line:723]INFO - b'lg\x06R'
08/16/2022 04:12:36 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 04:12:36 PM rcomm.py[line:226]ERROR - failed to flush Y -> 'NoneType' object has no attribute 'flush'
08/16/2022 04:12:36 PM rcomm.py[line:115]ERROR - failed to open device: Y as [Errno 16] could not open port /dev/serial/by-id/usb-FTDI_FT230X_Basic_UART_DK0B3QX3-if00-port0: [Errno 16] Device or resource busy: '/dev/serial/by-id/usb-FTDI_FT230X_Basic_UART_DK0B3QX3-if00-port0'
08/16/2022 04:12:36 PM rcomm.py[line:115]ERROR - failed to open device: AC as [Errno 2] could not open port /dev/serial/by-id/usb-1a86_USB2.0-Serial-if00-port0: [Errno 2] No such file or directory: '/dev/serial/by-id/usb-1a86_USB2.0-Serial-if00-port0'
08/16/2022 04:12:36 PM rcomm.py[line:204]ERROR - failed to write dev: 'NoneType' object has no attribute 'write'
08/16/2022 04:12:36 PM daemon.py[line:732]ERROR - no ack
08/16/2022 04:12:36 PM daemon.py[line:723]INFO - b'lg\x06R'
08/16/2022 04:12:36 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 04:12:36 PM rcomm.py[line:226]ERROR - failed to flush Y -> 'NoneType' object has no attribute 'flush'
08/16/2022 04:12:36 PM rcomm.py[line:115]ERROR - failed to open device: Y as [Errno 16] could not open port /dev/serial/by-id/usb-FTDI_FT230X_Basic_UART_DK0B3QX3-if00-port0: [Errno 16] Device or resource busy: '/dev/serial/by-id/usb-FTDI_FT230X_Basic_UART_DK0B3QX3-if00-port0'
08/16/2022 04:12:36 PM rcomm.py[line:115]ERROR - failed to open device: AC as [Errno 2] could not open port /dev/serial/by-id/usb-1a86_USB2.0-Serial-if00-port0: [Errno 2] No such file or directory: '/dev/serial/by-id/usb-1a86_USB2.0-Serial-if00-port0'
08/16/2022 04:12:36 PM rcomm.py[line:204]ERROR - failed to write dev: 'NoneType' object has no attribute 'write'
08/16/2022 04:12:36 PM daemon.py[line:732]ERROR - no ack
08/16/2022 04:12:36 PM daemon.py[line:77]INFO - hello beans_control
08/16/2022 04:12:48 PM daemon.py[line:45]INFO - hello
08/16/2022 04:12:48 PM daemon.py[line:46]INFO - /home/ruijunfeng/works/fusion/m3ham/log/ham.log
08/16/2022 04:12:48 PM rcomm.py[line:72]INFO - ruijunfeng-PC
08/16/2022 04:12:48 PM rcomm.py[line:74]INFO - hello m3
08/16/2022 04:12:48 PM rcomm.py[line:51]INFO - found FTDI device:/dev/serial/by-id/usb-FTDI_FT230X_Basic_UART_DK0B3QX3-if00-port0
08/16/2022 04:12:48 PM rcomm.py[line:115]ERROR - failed to open device: Y as [Errno 16] could not open port /dev/serial/by-id/usb-FTDI_FT230X_Basic_UART_DK0B3QX3-if00-port0: [Errno 16] Device or resource busy: '/dev/serial/by-id/usb-FTDI_FT230X_Basic_UART_DK0B3QX3-if00-port0'
08/16/2022 04:12:48 PM rcomm.py[line:115]ERROR - failed to open device: AC as [Errno 2] could not open port /dev/serial/by-id/usb-1a86_USB2.0-Serial-if00-port0: [Errno 2] No such file or directory: '/dev/serial/by-id/usb-1a86_USB2.0-Serial-if00-port0'
08/16/2022 04:12:48 PM daemon.py[line:723]INFO - b'lg\x06R'
08/16/2022 04:12:48 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 04:12:48 PM rcomm.py[line:226]ERROR - failed to flush Y -> 'NoneType' object has no attribute 'flush'
08/16/2022 04:12:48 PM rcomm.py[line:115]ERROR - failed to open device: Y as [Errno 16] could not open port /dev/serial/by-id/usb-FTDI_FT230X_Basic_UART_DK0B3QX3-if00-port0: [Errno 16] Device or resource busy: '/dev/serial/by-id/usb-FTDI_FT230X_Basic_UART_DK0B3QX3-if00-port0'
08/16/2022 04:12:48 PM rcomm.py[line:115]ERROR - failed to open device: AC as [Errno 2] could not open port /dev/serial/by-id/usb-1a86_USB2.0-Serial-if00-port0: [Errno 2] No such file or directory: '/dev/serial/by-id/usb-1a86_USB2.0-Serial-if00-port0'
08/16/2022 04:12:48 PM rcomm.py[line:204]ERROR - failed to write dev: 'NoneType' object has no attribute 'write'
08/16/2022 04:12:48 PM daemon.py[line:732]ERROR - no ack
08/16/2022 04:12:48 PM daemon.py[line:723]INFO - b'lg\x06R'
08/16/2022 04:12:48 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 04:12:48 PM rcomm.py[line:226]ERROR - failed to flush Y -> 'NoneType' object has no attribute 'flush'
08/16/2022 04:12:48 PM rcomm.py[line:115]ERROR - failed to open device: Y as [Errno 16] could not open port /dev/serial/by-id/usb-FTDI_FT230X_Basic_UART_DK0B3QX3-if00-port0: [Errno 16] Device or resource busy: '/dev/serial/by-id/usb-FTDI_FT230X_Basic_UART_DK0B3QX3-if00-port0'
08/16/2022 04:12:48 PM rcomm.py[line:115]ERROR - failed to open device: AC as [Errno 2] could not open port /dev/serial/by-id/usb-1a86_USB2.0-Serial-if00-port0: [Errno 2] No such file or directory: '/dev/serial/by-id/usb-1a86_USB2.0-Serial-if00-port0'
08/16/2022 04:12:48 PM rcomm.py[line:204]ERROR - failed to write dev: 'NoneType' object has no attribute 'write'
08/16/2022 04:12:48 PM daemon.py[line:732]ERROR - no ack
08/16/2022 04:12:49 PM daemon.py[line:723]INFO - b'lg\x06R'
08/16/2022 04:12:49 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 04:12:49 PM rcomm.py[line:226]ERROR - failed to flush Y -> 'NoneType' object has no attribute 'flush'
08/16/2022 04:12:49 PM rcomm.py[line:115]ERROR - failed to open device: Y as [Errno 16] could not open port /dev/serial/by-id/usb-FTDI_FT230X_Basic_UART_DK0B3QX3-if00-port0: [Errno 16] Device or resource busy: '/dev/serial/by-id/usb-FTDI_FT230X_Basic_UART_DK0B3QX3-if00-port0'
08/16/2022 04:12:49 PM rcomm.py[line:115]ERROR - failed to open device: AC as [Errno 2] could not open port /dev/serial/by-id/usb-1a86_USB2.0-Serial-if00-port0: [Errno 2] No such file or directory: '/dev/serial/by-id/usb-1a86_USB2.0-Serial-if00-port0'
08/16/2022 04:12:49 PM rcomm.py[line:204]ERROR - failed to write dev: 'NoneType' object has no attribute 'write'
08/16/2022 04:12:49 PM daemon.py[line:732]ERROR - no ack
08/16/2022 04:12:49 PM daemon.py[line:77]INFO - hello beans_control
08/16/2022 04:12:56 PM daemon.py[line:93]INFO - gui msg: {'req': {'ch': '1', 'device': 'm3', 'command': 'drop_beans', 'circle': '1'}}
08/16/2022 04:12:56 PM daemon.py[line:405]INFO - command-->OD
08/16/2022 04:12:56 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 04:12:56 PM rcomm.py[line:226]ERROR - failed to flush Y -> 'NoneType' object has no attribute 'flush'
08/16/2022 04:12:56 PM rcomm.py[line:115]ERROR - failed to open device: Y as [Errno 16] could not open port /dev/serial/by-id/usb-FTDI_FT230X_Basic_UART_DK0B3QX3-if00-port0: [Errno 16] Device or resource busy: '/dev/serial/by-id/usb-FTDI_FT230X_Basic_UART_DK0B3QX3-if00-port0'
08/16/2022 04:12:56 PM rcomm.py[line:115]ERROR - failed to open device: AC as [Errno 2] could not open port /dev/serial/by-id/usb-1a86_USB2.0-Serial-if00-port0: [Errno 2] No such file or directory: '/dev/serial/by-id/usb-1a86_USB2.0-Serial-if00-port0'
08/16/2022 04:12:56 PM rcomm.py[line:204]ERROR - failed to write dev: 'NoneType' object has no attribute 'write'
08/16/2022 04:12:56 PM daemon.py[line:420]ERROR - no ack
08/16/2022 04:12:56 PM daemon.py[line:111]DEBUG - send_json -> {'rep': {'device': 'm3', 'result': 'error'}}
08/16/2022 04:13:50 PM daemon.py[line:45]INFO - hello
08/16/2022 04:13:50 PM daemon.py[line:46]INFO - /home/ruijunfeng/works/fusion/m3ham/log/ham.log
08/16/2022 04:13:50 PM rcomm.py[line:72]INFO - ruijunfeng-PC
08/16/2022 04:13:50 PM rcomm.py[line:74]INFO - hello m3
08/16/2022 04:13:50 PM rcomm.py[line:51]INFO - found FTDI device:/dev/serial/by-id/usb-FTDI_FT230X_Basic_UART_DK0B3QX3-if00-port0
08/16/2022 04:13:50 PM rcomm.py[line:111]DEBUG - dev: Y opened
08/16/2022 04:13:50 PM rcomm.py[line:115]ERROR - failed to open device: AC as [Errno 2] could not open port /dev/serial/by-id/usb-1a86_USB2.0-Serial-if00-port0: [Errno 2] No such file or directory: '/dev/serial/by-id/usb-1a86_USB2.0-Serial-if00-port0'
08/16/2022 04:13:50 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 04:13:50 PM daemon.py[line:723]INFO - b'lg\x06R'
08/16/2022 04:13:50 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 04:13:51 PM daemon.py[line:732]ERROR - no ack
08/16/2022 04:13:51 PM daemon.py[line:723]INFO - b'lg\x06R'
08/16/2022 04:13:51 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 04:13:52 PM daemon.py[line:732]ERROR - no ack
08/16/2022 04:13:52 PM daemon.py[line:723]INFO - b'lg\x06R'
08/16/2022 04:13:52 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 04:13:52 PM daemon.py[line:732]ERROR - no ack
08/16/2022 04:13:52 PM daemon.py[line:77]INFO - hello beans_control
08/16/2022 04:13:53 PM daemon.py[line:93]INFO - gui msg: {'req': {'ch': '1', 'device': 'm3', 'circle': '1', 'command': 'drop_beans'}}
08/16/2022 04:13:53 PM daemon.py[line:405]INFO - command-->OD
08/16/2022 04:13:53 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 04:13:53 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 04:13:53 PM rcomm.py[line:143]INFO - data -> b'ODok\xc6\xbd'
08/16/2022 04:13:53 PM daemon.py[line:111]DEBUG - send_json -> {'rep': {'result': 'success', 'device': 'm3'}}
08/16/2022 04:13:55 PM daemon.py[line:93]INFO - gui msg: {'req': {'ch': '1', 'device': 'm3', 'circle': '1', 'command': 'drop_beans'}}
08/16/2022 04:13:55 PM daemon.py[line:405]INFO - command-->OD
08/16/2022 04:13:55 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 04:13:55 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 04:13:55 PM rcomm.py[line:143]INFO - data -> b'ODok\xc6\xbd'
08/16/2022 04:13:55 PM daemon.py[line:111]DEBUG - send_json -> {'rep': {'result': 'success', 'device': 'm3'}}
08/16/2022 04:13:57 PM daemon.py[line:93]INFO - gui msg: {'req': {'ch': '1', 'device': 'm3', 'circle': '1', 'command': 'drop_beans'}}
08/16/2022 04:13:57 PM daemon.py[line:405]INFO - command-->OD
08/16/2022 04:13:57 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 04:13:57 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 04:13:57 PM rcomm.py[line:143]INFO - data -> b'ODok\xc6\xbd'
08/16/2022 04:13:57 PM daemon.py[line:111]DEBUG - send_json -> {'rep': {'result': 'success', 'device': 'm3'}}
08/16/2022 04:14:01 PM daemon.py[line:93]INFO - gui msg: {'req': {'ch': '1', 'device': 'm3', 'circle': '2', 'command': 'drop_beans'}}
08/16/2022 04:14:01 PM daemon.py[line:405]INFO - command-->OD
08/16/2022 04:14:01 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 04:14:01 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 04:14:01 PM rcomm.py[line:143]INFO - data -> b'ODok\xc6\xbd'
08/16/2022 04:14:01 PM daemon.py[line:111]DEBUG - send_json -> {'rep': {'result': 'success', 'device': 'm3'}}
08/16/2022 04:14:04 PM daemon.py[line:93]INFO - gui msg: {'req': {'ch': '1', 'device': 'm3', 'circle': '2', 'command': 'drop_beans'}}
08/16/2022 04:14:04 PM daemon.py[line:405]INFO - command-->OD
08/16/2022 04:14:04 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 04:14:04 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 04:14:04 PM rcomm.py[line:143]INFO - data -> b'ODok\xc6\xbd'
08/16/2022 04:14:04 PM daemon.py[line:111]DEBUG - send_json -> {'rep': {'result': 'success', 'device': 'm3'}}
08/16/2022 04:14:14 PM daemon.py[line:93]INFO - gui msg: {'req': {'ch': '2', 'device': 'm3', 'circle': '1', 'command': 'drop_beans'}}
08/16/2022 04:14:15 PM daemon.py[line:405]INFO - command-->OD
08/16/2022 04:14:15 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 04:14:15 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 04:14:15 PM rcomm.py[line:143]INFO - data -> b'ODok\xc6\xbd'
08/16/2022 04:14:15 PM daemon.py[line:111]DEBUG - send_json -> {'rep': {'result': 'success', 'device': 'm3'}}
08/16/2022 04:14:17 PM daemon.py[line:93]INFO - gui msg: {'req': {'ch': '2', 'device': 'm3', 'circle': '1', 'command': 'drop_beans'}}
08/16/2022 04:14:17 PM daemon.py[line:405]INFO - command-->OD
08/16/2022 04:14:17 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 04:14:17 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 04:14:17 PM rcomm.py[line:143]INFO - data -> b'ODok\xc6\xbd'
08/16/2022 04:14:17 PM daemon.py[line:111]DEBUG - send_json -> {'rep': {'result': 'success', 'device': 'm3'}}
08/16/2022 04:14:33 PM daemon.py[line:93]INFO - gui msg: {'req': {'ch': '2', 'device': 'm3', 'circle': '1', 'command': 'drop_beans'}}
08/16/2022 04:14:33 PM daemon.py[line:405]INFO - command-->OD
08/16/2022 04:14:33 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 04:14:33 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 04:14:33 PM rcomm.py[line:143]INFO - data -> b'ODok\xc6\xbd'
08/16/2022 04:14:33 PM daemon.py[line:111]DEBUG - send_json -> {'rep': {'result': 'success', 'device': 'm3'}}
08/16/2022 04:15:00 PM daemon.py[line:93]INFO - gui msg: {'req': {'ch': '2', 'device': 'm3', 'circle': '1', 'command': 'drop_beans'}}
08/16/2022 04:15:00 PM daemon.py[line:405]INFO - command-->OD
08/16/2022 04:15:00 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 04:15:00 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 04:15:00 PM rcomm.py[line:143]INFO - data -> b'ODok\xc6\xbd'
08/16/2022 04:15:00 PM daemon.py[line:111]DEBUG - send_json -> {'rep': {'result': 'success', 'device': 'm3'}}
08/16/2022 04:15:12 PM daemon.py[line:93]INFO - gui msg: {'req': {'ch': '2', 'device': 'm3', 'circle': '1', 'command': 'drop_beans'}}
08/16/2022 04:15:12 PM daemon.py[line:405]INFO - command-->OD
08/16/2022 04:15:12 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 04:15:12 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 04:15:12 PM rcomm.py[line:143]INFO - data -> b'ODok\xc6\xbd'
08/16/2022 04:15:12 PM daemon.py[line:111]DEBUG - send_json -> {'rep': {'result': 'success', 'device': 'm3'}}
08/16/2022 04:15:16 PM daemon.py[line:93]INFO - gui msg: {'req': {'ch': '2', 'device': 'm3', 'circle': '1', 'command': 'drop_beans'}}
08/16/2022 04:15:16 PM daemon.py[line:405]INFO - command-->OD
08/16/2022 04:15:16 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 04:15:16 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 04:15:16 PM rcomm.py[line:143]INFO - data -> b'ODok\xc6\xbd'
08/16/2022 04:15:16 PM daemon.py[line:111]DEBUG - send_json -> {'rep': {'result': 'success', 'device': 'm3'}}
08/16/2022 04:15:22 PM daemon.py[line:93]INFO - gui msg: {'req': {'ch': '2', 'device': 'm3', 'circle': '1', 'command': 'drop_beans'}}
08/16/2022 04:15:22 PM daemon.py[line:405]INFO - command-->OD
08/16/2022 04:15:22 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 04:15:22 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 04:15:22 PM rcomm.py[line:143]INFO - data -> b'ODok\xc6\xbd'
08/16/2022 04:15:22 PM daemon.py[line:111]DEBUG - send_json -> {'rep': {'result': 'success', 'device': 'm3'}}
08/16/2022 04:15:24 PM daemon.py[line:93]INFO - gui msg: {'req': {'ch': '2', 'device': 'm3', 'circle': '1', 'command': 'drop_beans'}}
08/16/2022 04:15:24 PM daemon.py[line:405]INFO - command-->OD
08/16/2022 04:15:24 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 04:15:24 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 04:15:24 PM rcomm.py[line:143]INFO - data -> b'ODok\xc6\xbd'
08/16/2022 04:15:24 PM daemon.py[line:111]DEBUG - send_json -> {'rep': {'result': 'success', 'device': 'm3'}}
08/16/2022 04:15:26 PM daemon.py[line:93]INFO - gui msg: {'req': {'ch': '2', 'device': 'm3', 'circle': '1', 'command': 'drop_beans'}}
08/16/2022 04:15:26 PM daemon.py[line:405]INFO - command-->OD
08/16/2022 04:15:26 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 04:15:26 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 04:15:26 PM rcomm.py[line:143]INFO - data -> b'ODok\xc6\xbd'
08/16/2022 04:15:26 PM daemon.py[line:111]DEBUG - send_json -> {'rep': {'result': 'success', 'device': 'm3'}}
08/16/2022 04:15:33 PM daemon.py[line:93]INFO - gui msg: {'req': {'ch': '3', 'device': 'm3', 'circle': '1', 'command': 'drop_beans'}}
08/16/2022 04:15:33 PM daemon.py[line:405]INFO - command-->OD
08/16/2022 04:15:33 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 04:15:33 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 04:15:33 PM rcomm.py[line:143]INFO - data -> b'ODok\xc6\xbd'
08/16/2022 04:15:33 PM daemon.py[line:111]DEBUG - send_json -> {'rep': {'result': 'success', 'device': 'm3'}}
08/16/2022 04:15:35 PM daemon.py[line:93]INFO - gui msg: {'req': {'ch': '3', 'device': 'm3', 'circle': '1', 'command': 'drop_beans'}}
08/16/2022 04:15:35 PM daemon.py[line:405]INFO - command-->OD
08/16/2022 04:15:35 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 04:15:35 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 04:15:35 PM rcomm.py[line:143]INFO - data -> b'ODok\xc6\xbd'
08/16/2022 04:15:35 PM daemon.py[line:111]DEBUG - send_json -> {'rep': {'result': 'success', 'device': 'm3'}}
08/16/2022 04:15:36 PM daemon.py[line:93]INFO - gui msg: {'req': {'ch': '3', 'device': 'm3', 'circle': '1', 'command': 'drop_beans'}}
08/16/2022 04:15:36 PM daemon.py[line:405]INFO - command-->OD
08/16/2022 04:15:36 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 04:15:36 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 04:15:36 PM rcomm.py[line:143]INFO - data -> b'ODok\xc6\xbd'
08/16/2022 04:15:36 PM daemon.py[line:111]DEBUG - send_json -> {'rep': {'result': 'success', 'device': 'm3'}}
08/16/2022 04:15:43 PM daemon.py[line:93]INFO - gui msg: {'req': {'ch': '4', 'device': 'm3', 'circle': '1', 'command': 'drop_beans'}}
08/16/2022 04:15:43 PM daemon.py[line:405]INFO - command-->OD
08/16/2022 04:15:43 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 04:15:43 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 04:15:43 PM rcomm.py[line:143]INFO - data -> b'ODok\xc6\xbd'
08/16/2022 04:15:43 PM daemon.py[line:111]DEBUG - send_json -> {'rep': {'result': 'success', 'device': 'm3'}}
08/16/2022 04:15:45 PM daemon.py[line:93]INFO - gui msg: {'req': {'ch': '4', 'device': 'm3', 'circle': '1', 'command': 'drop_beans'}}
08/16/2022 04:15:45 PM daemon.py[line:405]INFO - command-->OD
08/16/2022 04:15:45 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 04:15:45 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 04:15:45 PM rcomm.py[line:143]INFO - data -> b'ODok\xc6\xbd'
08/16/2022 04:15:45 PM daemon.py[line:111]DEBUG - send_json -> {'rep': {'result': 'success', 'device': 'm3'}}
08/16/2022 04:15:47 PM daemon.py[line:93]INFO - gui msg: {'req': {'ch': '4', 'device': 'm3', 'circle': '1', 'command': 'drop_beans'}}
08/16/2022 04:15:47 PM daemon.py[line:405]INFO - command-->OD
08/16/2022 04:15:47 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 04:15:47 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 04:15:47 PM rcomm.py[line:143]INFO - data -> b'ODok\xc6\xbd'
08/16/2022 04:15:47 PM daemon.py[line:111]DEBUG - send_json -> {'rep': {'result': 'success', 'device': 'm3'}}
08/16/2022 04:15:53 PM daemon.py[line:93]INFO - gui msg: {'req': {'ch': '5', 'device': 'm3', 'circle': '1', 'command': 'drop_beans'}}
08/16/2022 04:15:53 PM daemon.py[line:405]INFO - command-->OD
08/16/2022 04:15:53 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 04:15:53 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 04:15:53 PM rcomm.py[line:143]INFO - data -> b'ODok\xc6\xbd'
08/16/2022 04:15:53 PM daemon.py[line:111]DEBUG - send_json -> {'rep': {'result': 'success', 'device': 'm3'}}
08/16/2022 04:15:55 PM daemon.py[line:93]INFO - gui msg: {'req': {'ch': '5', 'device': 'm3', 'circle': '1', 'command': 'drop_beans'}}
08/16/2022 04:15:55 PM daemon.py[line:405]INFO - command-->OD
08/16/2022 04:15:55 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 04:15:55 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 04:15:55 PM rcomm.py[line:143]INFO - data -> b'ODok\xc6\xbd'
08/16/2022 04:15:55 PM daemon.py[line:111]DEBUG - send_json -> {'rep': {'result': 'success', 'device': 'm3'}}
08/16/2022 04:16:01 PM daemon.py[line:93]INFO - gui msg: {'req': {'ch': '6', 'device': 'm3', 'circle': '1', 'command': 'drop_beans'}}
08/16/2022 04:16:01 PM daemon.py[line:405]INFO - command-->OD
08/16/2022 04:16:01 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 04:16:01 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 04:16:01 PM rcomm.py[line:143]INFO - data -> b'ODok\xc6\xbd'
08/16/2022 04:16:01 PM daemon.py[line:111]DEBUG - send_json -> {'rep': {'result': 'success', 'device': 'm3'}}
08/16/2022 04:16:02 PM daemon.py[line:93]INFO - gui msg: {'req': {'ch': '6', 'device': 'm3', 'circle': '1', 'command': 'drop_beans'}}
08/16/2022 04:16:02 PM daemon.py[line:405]INFO - command-->OD
08/16/2022 04:16:02 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 04:16:02 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 04:16:02 PM rcomm.py[line:143]INFO - data -> b'ODok\xc6\xbd'
08/16/2022 04:16:02 PM daemon.py[line:111]DEBUG - send_json -> {'rep': {'result': 'success', 'device': 'm3'}}
08/16/2022 04:16:04 PM daemon.py[line:93]INFO - gui msg: {'req': {'ch': '6', 'device': 'm3', 'circle': '1', 'command': 'drop_beans'}}
08/16/2022 04:16:04 PM daemon.py[line:405]INFO - command-->OD
08/16/2022 04:16:04 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 04:16:04 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 04:16:04 PM rcomm.py[line:143]INFO - data -> b'ODok\xc6\xbd'
08/16/2022 04:16:04 PM daemon.py[line:111]DEBUG - send_json -> {'rep': {'result': 'success', 'device': 'm3'}}
08/16/2022 04:16:07 PM daemon.py[line:93]INFO - gui msg: {'req': {'ch': '6', 'device': 'm3', 'circle': '1', 'command': 'drop_beans'}}
08/16/2022 04:16:07 PM daemon.py[line:405]INFO - command-->OD
08/16/2022 04:16:07 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 04:16:07 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 04:16:07 PM rcomm.py[line:143]INFO - data -> b'ODok\xc6\xbd'
08/16/2022 04:16:07 PM daemon.py[line:111]DEBUG - send_json -> {'rep': {'result': 'success', 'device': 'm3'}}
08/16/2022 04:16:09 PM daemon.py[line:93]INFO - gui msg: {'req': {'ch': '6', 'device': 'm3', 'circle': '1', 'command': 'drop_beans'}}
08/16/2022 04:16:09 PM daemon.py[line:405]INFO - command-->OD
08/16/2022 04:16:09 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 04:16:09 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 04:16:09 PM rcomm.py[line:143]INFO - data -> b'ODok\xc6\xbd'
08/16/2022 04:16:09 PM daemon.py[line:111]DEBUG - send_json -> {'rep': {'result': 'success', 'device': 'm3'}}
08/16/2022 04:16:15 PM daemon.py[line:93]INFO - gui msg: {'req': {'ch': '7', 'device': 'm3', 'circle': '1', 'command': 'drop_beans'}}
08/16/2022 04:16:15 PM daemon.py[line:405]INFO - command-->OD
08/16/2022 04:16:15 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 04:16:15 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 04:16:15 PM rcomm.py[line:143]INFO - data -> b'ODok\xc6\xbd'
08/16/2022 04:16:15 PM daemon.py[line:111]DEBUG - send_json -> {'rep': {'result': 'success', 'device': 'm3'}}
08/16/2022 04:16:17 PM daemon.py[line:93]INFO - gui msg: {'req': {'ch': '7', 'device': 'm3', 'circle': '1', 'command': 'drop_beans'}}
08/16/2022 04:16:17 PM daemon.py[line:405]INFO - command-->OD
08/16/2022 04:16:17 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 04:16:17 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 04:16:17 PM rcomm.py[line:143]INFO - data -> b'ODok\xc6\xbd'
08/16/2022 04:16:17 PM daemon.py[line:111]DEBUG - send_json -> {'rep': {'result': 'success', 'device': 'm3'}}
08/16/2022 04:16:19 PM daemon.py[line:93]INFO - gui msg: {'req': {'ch': '7', 'device': 'm3', 'circle': '1', 'command': 'drop_beans'}}
08/16/2022 04:16:19 PM daemon.py[line:405]INFO - command-->OD
08/16/2022 04:16:19 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 04:16:19 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 04:16:19 PM rcomm.py[line:143]INFO - data -> b'ODok\xc6\xbd'
08/16/2022 04:16:19 PM daemon.py[line:111]DEBUG - send_json -> {'rep': {'result': 'success', 'device': 'm3'}}
08/16/2022 04:16:21 PM daemon.py[line:93]INFO - gui msg: {'req': {'ch': '7', 'device': 'm3', 'circle': '1', 'command': 'drop_beans'}}
08/16/2022 04:16:21 PM daemon.py[line:405]INFO - command-->OD
08/16/2022 04:16:21 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 04:16:21 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 04:16:21 PM rcomm.py[line:143]INFO - data -> b'ODok\xc6\xbd'
08/16/2022 04:16:21 PM daemon.py[line:111]DEBUG - send_json -> {'rep': {'result': 'success', 'device': 'm3'}}
08/16/2022 04:18:20 PM daemon.py[line:93]INFO - gui msg: {'req': {'ch': '7', 'device': 'm3', 'circle': '1', 'command': 'drop_beans'}}
08/16/2022 04:18:20 PM daemon.py[line:405]INFO - command-->OD
08/16/2022 04:18:20 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 04:18:20 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 04:18:20 PM rcomm.py[line:143]INFO - data -> b'ODok\xc6\xbd'
08/16/2022 04:18:20 PM daemon.py[line:111]DEBUG - send_json -> {'rep': {'result': 'success', 'device': 'm3'}}
08/16/2022 04:18:21 PM daemon.py[line:93]INFO - gui msg: {'req': {'ch': '7', 'device': 'm3', 'circle': '1', 'command': 'drop_beans'}}
08/16/2022 04:18:21 PM daemon.py[line:405]INFO - command-->OD
08/16/2022 04:18:21 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 04:18:21 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 04:18:21 PM rcomm.py[line:143]INFO - data -> b'ODok\xc6\xbd'
08/16/2022 04:18:21 PM daemon.py[line:111]DEBUG - send_json -> {'rep': {'result': 'success', 'device': 'm3'}}
08/16/2022 04:18:25 PM daemon.py[line:93]INFO - gui msg: {'req': {'ch': '6', 'device': 'm3', 'circle': '1', 'command': 'drop_beans'}}
08/16/2022 04:18:25 PM daemon.py[line:405]INFO - command-->OD
08/16/2022 04:18:25 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 04:18:25 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 04:18:25 PM rcomm.py[line:143]INFO - data -> b'ODok\xc6\xbd'
08/16/2022 04:18:25 PM daemon.py[line:111]DEBUG - send_json -> {'rep': {'result': 'success', 'device': 'm3'}}
08/16/2022 04:18:26 PM daemon.py[line:93]INFO - gui msg: {'req': {'ch': '6', 'device': 'm3', 'circle': '1', 'command': 'drop_beans'}}
08/16/2022 04:18:26 PM daemon.py[line:405]INFO - command-->OD
08/16/2022 04:18:26 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 04:18:26 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 04:18:26 PM rcomm.py[line:143]INFO - data -> b'ODok\xc6\xbd'
08/16/2022 04:18:26 PM daemon.py[line:111]DEBUG - send_json -> {'rep': {'result': 'success', 'device': 'm3'}}
08/16/2022 04:18:29 PM daemon.py[line:93]INFO - gui msg: {'req': {'ch': '5', 'device': 'm3', 'circle': '1', 'command': 'drop_beans'}}
08/16/2022 04:18:29 PM daemon.py[line:405]INFO - command-->OD
08/16/2022 04:18:29 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 04:18:29 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 04:18:29 PM rcomm.py[line:143]INFO - data -> b'ODok\xc6\xbd'
08/16/2022 04:18:29 PM daemon.py[line:111]DEBUG - send_json -> {'rep': {'result': 'success', 'device': 'm3'}}
08/16/2022 04:18:30 PM daemon.py[line:93]INFO - gui msg: {'req': {'ch': '5', 'device': 'm3', 'circle': '1', 'command': 'drop_beans'}}
08/16/2022 04:18:30 PM daemon.py[line:405]INFO - command-->OD
08/16/2022 04:18:30 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 04:18:30 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 04:18:30 PM rcomm.py[line:143]INFO - data -> b'ODok\xc6\xbd'
08/16/2022 04:18:30 PM daemon.py[line:111]DEBUG - send_json -> {'rep': {'result': 'success', 'device': 'm3'}}
08/16/2022 04:18:34 PM daemon.py[line:93]INFO - gui msg: {'req': {'ch': '4', 'device': 'm3', 'circle': '1', 'command': 'drop_beans'}}
08/16/2022 04:18:34 PM daemon.py[line:405]INFO - command-->OD
08/16/2022 04:18:34 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 04:18:34 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 04:18:34 PM rcomm.py[line:143]INFO - data -> b'ODok\xc6\xbd'
08/16/2022 04:18:34 PM daemon.py[line:111]DEBUG - send_json -> {'rep': {'result': 'success', 'device': 'm3'}}
08/16/2022 04:18:36 PM daemon.py[line:93]INFO - gui msg: {'req': {'ch': '4', 'device': 'm3', 'circle': '1', 'command': 'drop_beans'}}
08/16/2022 04:18:36 PM daemon.py[line:405]INFO - command-->OD
08/16/2022 04:18:36 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 04:18:36 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 04:18:36 PM rcomm.py[line:143]INFO - data -> b'ODok\xc6\xbd'
08/16/2022 04:18:36 PM daemon.py[line:111]DEBUG - send_json -> {'rep': {'result': 'success', 'device': 'm3'}}
08/16/2022 04:18:37 PM daemon.py[line:93]INFO - gui msg: {'req': {'ch': '4', 'device': 'm3', 'circle': '1', 'command': 'drop_beans'}}
08/16/2022 04:18:37 PM daemon.py[line:405]INFO - command-->OD
08/16/2022 04:18:37 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 04:18:37 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 04:18:37 PM rcomm.py[line:143]INFO - data -> b'ODok\xc6\xbd'
08/16/2022 04:18:37 PM daemon.py[line:111]DEBUG - send_json -> {'rep': {'result': 'success', 'device': 'm3'}}
08/16/2022 04:18:40 PM daemon.py[line:93]INFO - gui msg: {'req': {'ch': '3', 'device': 'm3', 'circle': '1', 'command': 'drop_beans'}}
08/16/2022 04:18:40 PM daemon.py[line:405]INFO - command-->OD
08/16/2022 04:18:40 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 04:18:41 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 04:18:41 PM rcomm.py[line:143]INFO - data -> b'ODok\xc6\xbd'
08/16/2022 04:18:41 PM daemon.py[line:111]DEBUG - send_json -> {'rep': {'result': 'success', 'device': 'm3'}}
08/16/2022 04:18:44 PM daemon.py[line:93]INFO - gui msg: {'req': {'ch': '2', 'device': 'm3', 'circle': '1', 'command': 'drop_beans'}}
08/16/2022 04:18:44 PM daemon.py[line:405]INFO - command-->OD
08/16/2022 04:18:44 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 04:18:44 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 04:18:44 PM rcomm.py[line:143]INFO - data -> b'ODok\xc6\xbd'
08/16/2022 04:18:44 PM daemon.py[line:111]DEBUG - send_json -> {'rep': {'result': 'success', 'device': 'm3'}}
08/16/2022 04:18:48 PM daemon.py[line:93]INFO - gui msg: {'req': {'ch': '1', 'device': 'm3', 'circle': '2', 'command': 'drop_beans'}}
08/16/2022 04:18:48 PM daemon.py[line:405]INFO - command-->OD
08/16/2022 04:18:48 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 04:18:48 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 04:18:48 PM rcomm.py[line:143]INFO - data -> b'ODok\xc6\xbd'
08/16/2022 04:18:48 PM daemon.py[line:111]DEBUG - send_json -> {'rep': {'result': 'success', 'device': 'm3'}}
08/16/2022 04:20:07 PM daemon.py[line:93]INFO - gui msg: {'req': {'ch': '1', 'device': 'm3', 'duty': '8', 'command': 'open_lid'}}
08/16/2022 04:20:07 PM daemon.py[line:1148]INFO - b'Ol\x01\x08\xc8\xac\x84'
08/16/2022 04:20:07 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 04:20:07 PM daemon.py[line:1158]ERROR - no ack
08/16/2022 04:20:07 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 04:20:08 PM daemon.py[line:1158]ERROR - no ack
08/16/2022 04:20:08 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 04:20:08 PM daemon.py[line:1158]ERROR - no ack
08/16/2022 04:20:08 PM daemon.py[line:111]DEBUG - send_json -> {'rep': {'result': 'error', 'device': 'm3'}}
08/16/2022 04:20:18 PM daemon.py[line:93]INFO - gui msg: {'req': {'ch': '1', 'device': 'm3', 'duty': '8', 'command': 'open_lid'}}
08/16/2022 04:20:18 PM daemon.py[line:1148]INFO - b'Ol\x01\x08\xc8\xac\x84'
08/16/2022 04:20:18 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 04:20:18 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 04:20:18 PM rcomm.py[line:143]INFO - data -> b'Olok\xa1\x92'
08/16/2022 04:20:18 PM daemon.py[line:111]DEBUG - send_json -> {'rep': {'result': 'success', 'device': 'm3'}}
08/16/2022 04:20:21 PM daemon.py[line:93]INFO - gui msg: {'req': {'ch': '1', 'device': 'm3', 'duty': '8', 'command': 'open_lid'}}
08/16/2022 04:20:21 PM daemon.py[line:1148]INFO - b'Ol\x01\x08\xc8\xac\x84'
08/16/2022 04:20:21 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 04:20:21 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 04:20:21 PM rcomm.py[line:143]INFO - data -> b'Olok\xa1\x92'
08/16/2022 04:20:21 PM daemon.py[line:111]DEBUG - send_json -> {'rep': {'result': 'success', 'device': 'm3'}}
08/16/2022 04:20:22 PM daemon.py[line:93]INFO - gui msg: {'req': {'ch': '1', 'device': 'm3', 'duty': '8', 'command': 'open_lid'}}
08/16/2022 04:20:22 PM daemon.py[line:1148]INFO - b'Ol\x01\x08\xc8\xac\x84'
08/16/2022 04:20:22 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 04:20:22 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 04:20:22 PM rcomm.py[line:143]INFO - data -> b'Olok\xa1\x92'
08/16/2022 04:20:22 PM daemon.py[line:111]DEBUG - send_json -> {'rep': {'result': 'success', 'device': 'm3'}}
08/16/2022 04:20:23 PM daemon.py[line:93]INFO - gui msg: {'req': {'ch': '1', 'device': 'm3', 'duty': '8', 'command': 'open_lid'}}
08/16/2022 04:20:23 PM daemon.py[line:1148]INFO - b'Ol\x01\x08\xc8\xac\x84'
08/16/2022 04:20:23 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 04:20:23 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 04:20:23 PM rcomm.py[line:143]INFO - data -> b'Olok\xa1\x92'
08/16/2022 04:20:23 PM daemon.py[line:111]DEBUG - send_json -> {'rep': {'result': 'success', 'device': 'm3'}}
08/16/2022 04:20:25 PM daemon.py[line:93]INFO - gui msg: {'req': {'ch': '1', 'device': 'm3', 'duty': '8', 'command': 'open_lid'}}
08/16/2022 04:20:25 PM daemon.py[line:1148]INFO - b'Ol\x01\x08\xc8\xac\x84'
08/16/2022 04:20:25 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 04:20:25 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 04:20:25 PM rcomm.py[line:143]INFO - data -> b'Olok\xa1\x92'
08/16/2022 04:20:25 PM daemon.py[line:111]DEBUG - send_json -> {'rep': {'result': 'success', 'device': 'm3'}}
08/16/2022 04:20:27 PM daemon.py[line:93]INFO - gui msg: {'req': {'ch': '1', 'device': 'm3', 'duty': '8', 'command': 'open_lid'}}
08/16/2022 04:20:27 PM daemon.py[line:1148]INFO - b'Ol\x01\x08\xc8\xac\x84'
08/16/2022 04:20:27 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 04:20:27 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 04:20:27 PM rcomm.py[line:143]INFO - data -> b'Olok\xa1\x92'
08/16/2022 04:20:27 PM daemon.py[line:111]DEBUG - send_json -> {'rep': {'result': 'success', 'device': 'm3'}}
08/16/2022 04:20:28 PM daemon.py[line:93]INFO - gui msg: {'req': {'ch': '1', 'device': 'm3', 'duty': '8', 'command': 'open_lid'}}
08/16/2022 04:20:28 PM daemon.py[line:1148]INFO - b'Ol\x01\x08\xc8\xac\x84'
08/16/2022 04:20:28 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 04:20:28 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 04:20:28 PM rcomm.py[line:143]INFO - data -> b'Olok\xa1\x92'
08/16/2022 04:20:28 PM daemon.py[line:111]DEBUG - send_json -> {'rep': {'result': 'success', 'device': 'm3'}}
08/16/2022 04:20:29 PM daemon.py[line:93]INFO - gui msg: {'req': {'ch': '1', 'device': 'm3', 'duty': '8', 'command': 'open_lid'}}
08/16/2022 04:20:29 PM daemon.py[line:1148]INFO - b'Ol\x01\x08\xc8\xac\x84'
08/16/2022 04:20:29 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 04:20:29 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 04:20:29 PM rcomm.py[line:143]INFO - data -> b'Olok\xa1\x92'
08/16/2022 04:20:29 PM daemon.py[line:111]DEBUG - send_json -> {'rep': {'result': 'success', 'device': 'm3'}}
08/16/2022 04:20:30 PM daemon.py[line:93]INFO - gui msg: {'req': {'ch': '1', 'device': 'm3', 'duty': '8', 'command': 'open_lid'}}
08/16/2022 04:20:30 PM daemon.py[line:1148]INFO - b'Ol\x01\x08\xc8\xac\x84'
08/16/2022 04:20:30 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 04:20:30 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 04:20:30 PM rcomm.py[line:143]INFO - data -> b'Olok\xa1\x92'
08/16/2022 04:20:30 PM daemon.py[line:111]DEBUG - send_json -> {'rep': {'result': 'success', 'device': 'm3'}}
08/16/2022 04:20:31 PM daemon.py[line:93]INFO - gui msg: {'req': {'ch': '1', 'device': 'm3', 'duty': '8', 'command': 'open_lid'}}
08/16/2022 04:20:31 PM daemon.py[line:1148]INFO - b'Ol\x01\x08\xc8\xac\x84'
08/16/2022 04:20:31 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 04:20:31 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 04:20:31 PM rcomm.py[line:143]INFO - data -> b'Olok\xa1\x92'
08/16/2022 04:20:31 PM daemon.py[line:111]DEBUG - send_json -> {'rep': {'result': 'success', 'device': 'm3'}}
08/16/2022 04:20:41 PM daemon.py[line:93]INFO - gui msg: {'req': {'ch': '2', 'device': 'm3', 'duty': '6', 'command': 'open_lid'}}
08/16/2022 04:20:41 PM daemon.py[line:1148]INFO - b'Ol\x02\x06\xc8\xf3\xfe'
08/16/2022 04:20:41 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 04:20:41 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 04:20:41 PM rcomm.py[line:143]INFO - data -> b'Olok\xa1\x92'
08/16/2022 04:20:41 PM daemon.py[line:111]DEBUG - send_json -> {'rep': {'result': 'success', 'device': 'm3'}}
08/16/2022 04:20:43 PM daemon.py[line:93]INFO - gui msg: {'req': {'ch': '2', 'device': 'm3', 'duty': '6', 'command': 'open_lid'}}
08/16/2022 04:20:43 PM daemon.py[line:1148]INFO - b'Ol\x02\x06\xc8\xf3\xfe'
08/16/2022 04:20:43 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 04:20:43 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 04:20:43 PM rcomm.py[line:143]INFO - data -> b'Olok\xa1\x92'
08/16/2022 04:20:43 PM daemon.py[line:111]DEBUG - send_json -> {'rep': {'result': 'success', 'device': 'm3'}}
08/16/2022 04:20:47 PM daemon.py[line:93]INFO - gui msg: {'req': {'ch': '3', 'device': 'm3', 'duty': '6', 'command': 'open_lid'}}
08/16/2022 04:20:47 PM daemon.py[line:1148]INFO - b'Ol\x03\x06\xc8\xc3\xc9'
08/16/2022 04:20:47 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 04:20:47 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 04:20:47 PM rcomm.py[line:143]INFO - data -> b'Olok\xa1\x92'
08/16/2022 04:20:47 PM daemon.py[line:111]DEBUG - send_json -> {'rep': {'result': 'success', 'device': 'm3'}}
08/16/2022 04:20:49 PM daemon.py[line:93]INFO - gui msg: {'req': {'ch': '3', 'device': 'm3', 'duty': '6', 'command': 'open_lid'}}
08/16/2022 04:20:49 PM daemon.py[line:1148]INFO - b'Ol\x03\x06\xc8\xc3\xc9'
08/16/2022 04:20:49 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 04:20:49 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 04:20:49 PM rcomm.py[line:143]INFO - data -> b'Olok\xa1\x92'
08/16/2022 04:20:49 PM daemon.py[line:111]DEBUG - send_json -> {'rep': {'result': 'success', 'device': 'm3'}}
08/16/2022 04:20:50 PM daemon.py[line:93]INFO - gui msg: {'req': {'ch': '3', 'device': 'm3', 'duty': '6', 'command': 'open_lid'}}
08/16/2022 04:20:50 PM daemon.py[line:1148]INFO - b'Ol\x03\x06\xc8\xc3\xc9'
08/16/2022 04:20:50 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 04:20:50 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 04:20:50 PM rcomm.py[line:143]INFO - data -> b'Olok\xa1\x92'
08/16/2022 04:20:50 PM daemon.py[line:111]DEBUG - send_json -> {'rep': {'result': 'success', 'device': 'm3'}}
08/16/2022 04:20:54 PM daemon.py[line:93]INFO - gui msg: {'req': {'ch': '4', 'device': 'm3', 'duty': '6', 'command': 'open_lid'}}
08/16/2022 04:20:54 PM daemon.py[line:1148]INFO - b'Ol\x04\x06\xc8SL'
08/16/2022 04:20:54 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 04:20:54 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 04:20:54 PM rcomm.py[line:143]INFO - data -> b'Olok\xa1\x92'
08/16/2022 04:20:54 PM daemon.py[line:111]DEBUG - send_json -> {'rep': {'result': 'success', 'device': 'm3'}}
08/16/2022 04:20:55 PM daemon.py[line:93]INFO - gui msg: {'req': {'ch': '4', 'device': 'm3', 'duty': '6', 'command': 'open_lid'}}
08/16/2022 04:20:55 PM daemon.py[line:1148]INFO - b'Ol\x04\x06\xc8SL'
08/16/2022 04:20:55 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 04:20:55 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 04:20:55 PM rcomm.py[line:143]INFO - data -> b'Olok\xa1\x92'
08/16/2022 04:20:55 PM daemon.py[line:111]DEBUG - send_json -> {'rep': {'result': 'success', 'device': 'm3'}}
08/16/2022 04:20:56 PM daemon.py[line:93]INFO - gui msg: {'req': {'ch': '4', 'device': 'm3', 'duty': '6', 'command': 'open_lid'}}
08/16/2022 04:20:56 PM daemon.py[line:1148]INFO - b'Ol\x04\x06\xc8SL'
08/16/2022 04:20:56 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 04:20:56 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 04:20:56 PM rcomm.py[line:143]INFO - data -> b'Olok\xa1\x92'
08/16/2022 04:20:56 PM daemon.py[line:111]DEBUG - send_json -> {'rep': {'result': 'success', 'device': 'm3'}}
08/16/2022 04:21:00 PM daemon.py[line:93]INFO - gui msg: {'req': {'ch': '5', 'device': 'm3', 'duty': '6', 'command': 'open_lid'}}
08/16/2022 04:21:00 PM daemon.py[line:1148]INFO - b'Ol\x05\x06\xc8c{'
08/16/2022 04:21:00 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 04:21:00 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 04:21:00 PM rcomm.py[line:143]INFO - data -> b'Olok\xa1\x92'
08/16/2022 04:21:00 PM daemon.py[line:111]DEBUG - send_json -> {'rep': {'result': 'success', 'device': 'm3'}}
08/16/2022 04:21:01 PM daemon.py[line:93]INFO - gui msg: {'req': {'ch': '5', 'device': 'm3', 'duty': '6', 'command': 'open_lid'}}
08/16/2022 04:21:01 PM daemon.py[line:1148]INFO - b'Ol\x05\x06\xc8c{'
08/16/2022 04:21:01 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 04:21:01 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 04:21:01 PM rcomm.py[line:143]INFO - data -> b'Olok\xa1\x92'
08/16/2022 04:21:01 PM daemon.py[line:111]DEBUG - send_json -> {'rep': {'result': 'success', 'device': 'm3'}}
08/16/2022 04:21:05 PM daemon.py[line:93]INFO - gui msg: {'req': {'ch': '6', 'device': 'm3', 'duty': '6', 'command': 'open_lid'}}
08/16/2022 04:21:05 PM daemon.py[line:1148]INFO - b'Ol\x06\x06\xc83"'
08/16/2022 04:21:05 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 04:21:05 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 04:21:05 PM rcomm.py[line:143]INFO - data -> b'Olok\xa1\x92'
08/16/2022 04:21:05 PM daemon.py[line:111]DEBUG - send_json -> {'rep': {'result': 'success', 'device': 'm3'}}
08/16/2022 04:21:06 PM daemon.py[line:93]INFO - gui msg: {'req': {'ch': '6', 'device': 'm3', 'duty': '6', 'command': 'open_lid'}}
08/16/2022 04:21:06 PM daemon.py[line:1148]INFO - b'Ol\x06\x06\xc83"'
08/16/2022 04:21:06 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 04:21:06 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 04:21:06 PM rcomm.py[line:143]INFO - data -> b'Olok\xa1\x92'
08/16/2022 04:21:06 PM daemon.py[line:111]DEBUG - send_json -> {'rep': {'result': 'success', 'device': 'm3'}}
08/16/2022 04:21:11 PM daemon.py[line:93]INFO - gui msg: {'req': {'ch': '7', 'device': 'm3', 'duty': '6', 'command': 'open_lid'}}
08/16/2022 04:21:11 PM daemon.py[line:1148]INFO - b'Ol\x07\x06\xc8\x03\x15'
08/16/2022 04:21:11 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 04:21:11 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 04:21:11 PM rcomm.py[line:143]INFO - data -> b'Olok\xa1\x92'
08/16/2022 04:21:11 PM daemon.py[line:111]DEBUG - send_json -> {'rep': {'result': 'success', 'device': 'm3'}}
08/16/2022 04:21:12 PM daemon.py[line:93]INFO - gui msg: {'req': {'ch': '7', 'device': 'm3', 'duty': '6', 'command': 'open_lid'}}
08/16/2022 04:21:12 PM daemon.py[line:1148]INFO - b'Ol\x07\x06\xc8\x03\x15'
08/16/2022 04:21:12 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 04:21:12 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 04:21:12 PM rcomm.py[line:143]INFO - data -> b'Olok\xa1\x92'
08/16/2022 04:21:12 PM daemon.py[line:111]DEBUG - send_json -> {'rep': {'result': 'success', 'device': 'm3'}}
08/16/2022 04:23:50 PM serv.py[line:49]INFO - serv heatbeat
08/16/2022 04:33:50 PM serv.py[line:49]INFO - serv heatbeat
08/16/2022 04:43:50 PM serv.py[line:49]INFO - serv heatbeat
08/16/2022 04:45:33 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 04:45:33 PM rcomm.py[line:171]ERROR - failed to read dev: Y as [Errno 5] Input/output error
08/16/2022 04:45:33 PM rcomm.py[line:115]ERROR - failed to open device: Y as [Errno 2] could not open port /dev/serial/by-id/usb-FTDI_FT230X_Basic_UART_DK0B3QX3-if00-port0: [Errno 2] No such file or directory: '/dev/serial/by-id/usb-FTDI_FT230X_Basic_UART_DK0B3QX3-if00-port0'
08/16/2022 04:45:33 PM rcomm.py[line:115]ERROR - failed to open device: AC as [Errno 2] could not open port /dev/serial/by-id/usb-1a86_USB2.0-Serial-if00-port0: [Errno 2] No such file or directory: '/dev/serial/by-id/usb-1a86_USB2.0-Serial-if00-port0'
08/16/2022 04:53:50 PM serv.py[line:49]INFO - serv heatbeat
08/16/2022 05:03:50 PM serv.py[line:49]INFO - serv heatbeat
08/16/2022 05:13:50 PM serv.py[line:49]INFO - serv heatbeat
08/16/2022 05:23:50 PM serv.py[line:49]INFO - serv heatbeat
08/16/2022 05:33:50 PM serv.py[line:49]INFO - serv heatbeat
08/16/2022 05:43:50 PM serv.py[line:49]INFO - serv heatbeat
08/16/2022 05:43:59 PM daemon.py[line:45]INFO - hello
08/16/2022 05:43:59 PM daemon.py[line:46]INFO - /home/ruijunfeng/works/fusion/m3ham/log/ham.log
08/16/2022 05:43:59 PM rcomm.py[line:72]INFO - ruijunfeng-PC
08/16/2022 05:43:59 PM rcomm.py[line:74]INFO - hello m3
08/16/2022 05:43:59 PM rcomm.py[line:51]INFO - found FTDI device:/dev/serial/by-id/usb-FTDI_FT230X_Basic_UART_DK0B3QX3-if00-port0
08/16/2022 05:43:59 PM rcomm.py[line:111]DEBUG - dev: Y opened
08/16/2022 05:43:59 PM rcomm.py[line:115]ERROR - failed to open device: AC as [Errno 2] could not open port /dev/serial/by-id/usb-1a86_USB2.0-Serial-if00-port0: [Errno 2] No such file or directory: '/dev/serial/by-id/usb-1a86_USB2.0-Serial-if00-port0'
08/16/2022 05:43:59 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 05:43:59 PM daemon.py[line:723]INFO - b'lg\x06R'
08/16/2022 05:43:59 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 05:43:59 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 05:43:59 PM rcomm.py[line:143]INFO - data -> b'lgok\xc2\xce'
08/16/2022 05:43:59 PM daemon.py[line:728]DEBUG - r -> b'lgok\xc2\xce'
08/16/2022 05:43:59 PM daemon.py[line:77]INFO - hello beans_control
08/16/2022 05:44:31 PM daemon.py[line:93]INFO - gui msg: {'req': {'device': 'm3', 'command': 'lock', 'ch': '101'}}
08/16/2022 05:44:31 PM daemon.py[line:97]ERROR - failed to process json: 'bool' object is not iterable
08/16/2022 05:45:10 PM daemon.py[line:93]INFO - gui msg: {'req': {'device': 'm3', 'command': 'lock', 'lock_id': '101'}}
08/16/2022 05:45:10 PM daemon.py[line:775]INFO - para_str-->1,
08/16/2022 05:45:10 PM daemon.py[line:1008]INFO - b'ld\x01\x01[r'
08/16/2022 05:45:10 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 05:45:10 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 05:45:10 PM rcomm.py[line:143]INFO - data -> b'ldok\x92\x97'
08/16/2022 05:45:10 PM daemon.py[line:1025]INFO - b'li\xc8\xb3'
08/16/2022 05:45:10 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 05:45:10 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 05:45:10 PM rcomm.py[line:143]INFO - data -> b'li,142,8,68,32,212,241,\xe9$'
08/16/2022 05:45:10 PM daemon.py[line:1030]INFO - sensors state-->['142', '8', '68', '32', '212', '241']
08/16/2022 05:45:10 PM daemon.py[line:1033]INFO - [1]
08/16/2022 05:45:10 PM daemon.py[line:111]DEBUG - send_json -> {'rep': {'device': 'm3', 'result': 'success'}}
08/16/2022 05:45:14 PM daemon.py[line:93]INFO - gui msg: {'req': {'device': 'm3', 'command': 'lock', 'lock_id': '102'}}
08/16/2022 05:45:14 PM daemon.py[line:775]INFO - para_str-->2,
08/16/2022 05:45:14 PM daemon.py[line:1008]INFO - b'ld\x01\x028B'
08/16/2022 05:45:14 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 05:45:14 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 05:45:14 PM rcomm.py[line:143]INFO - data -> b'ldok\x92\x97'
08/16/2022 05:45:14 PM daemon.py[line:1025]INFO - b'li\xc8\xb3'
08/16/2022 05:45:14 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 05:45:14 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 05:45:14 PM rcomm.py[line:143]INFO - data -> b'li,140,8,68,32,212,241,\xaa\xd4'
08/16/2022 05:45:14 PM daemon.py[line:1030]INFO - sensors state-->['140', '8', '68', '32', '212', '241']
08/16/2022 05:45:14 PM daemon.py[line:1033]INFO - [2]
08/16/2022 05:45:14 PM daemon.py[line:111]DEBUG - send_json -> {'rep': {'device': 'm3', 'result': 'success'}}
08/16/2022 05:46:05 PM daemon.py[line:93]INFO - gui msg: {'req': {'device': 'm3', 'command': 'lock', 'lock_id': '101'}}
08/16/2022 05:46:05 PM daemon.py[line:775]INFO - para_str-->1,
08/16/2022 05:46:05 PM daemon.py[line:1008]INFO - b'ld\x01\x01[r'
08/16/2022 05:46:05 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 05:46:05 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 05:46:05 PM rcomm.py[line:143]INFO - data -> b'ldok\x92\x97'
08/16/2022 05:46:06 PM daemon.py[line:1025]INFO - b'li\xc8\xb3'
08/16/2022 05:46:06 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 05:46:06 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 05:46:06 PM rcomm.py[line:143]INFO - data -> b'li,142,8,68,32,212,241,\xe9$'
08/16/2022 05:46:06 PM daemon.py[line:1030]INFO - sensors state-->['142', '8', '68', '32', '212', '241']
08/16/2022 05:46:06 PM daemon.py[line:1033]INFO - [1]
08/16/2022 05:46:06 PM daemon.py[line:111]DEBUG - send_json -> {'rep': {'device': 'm3', 'result': 'success'}}
08/16/2022 05:46:07 PM daemon.py[line:93]INFO - gui msg: {'req': {'device': 'm3', 'command': 'lock', 'lock_id': '102'}}
08/16/2022 05:46:07 PM daemon.py[line:775]INFO - para_str-->2,
08/16/2022 05:46:07 PM daemon.py[line:1008]INFO - b'ld\x01\x028B'
08/16/2022 05:46:07 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 05:46:07 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 05:46:07 PM rcomm.py[line:143]INFO - data -> b'ldok\x92\x97'
08/16/2022 05:46:07 PM daemon.py[line:1025]INFO - b'li\xc8\xb3'
08/16/2022 05:46:07 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 05:46:07 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 05:46:07 PM rcomm.py[line:143]INFO - data -> b'li,140,8,68,32,212,241,\xaa\xd4'
08/16/2022 05:46:07 PM daemon.py[line:1030]INFO - sensors state-->['140', '8', '68', '32', '212', '241']
08/16/2022 05:46:07 PM daemon.py[line:1033]INFO - [2]
08/16/2022 05:46:07 PM daemon.py[line:111]DEBUG - send_json -> {'rep': {'device': 'm3', 'result': 'success'}}
08/16/2022 05:46:08 PM daemon.py[line:93]INFO - gui msg: {'req': {'device': 'm3', 'command': 'lock', 'lock_id': '103'}}
08/16/2022 05:46:08 PM daemon.py[line:775]INFO - para_str-->3,
08/16/2022 05:46:08 PM daemon.py[line:1008]INFO - b'ld\x01\x03\x19R'
08/16/2022 05:46:08 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 05:46:08 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 05:46:08 PM rcomm.py[line:143]INFO - data -> b'ldok\x92\x97'
08/16/2022 05:46:08 PM daemon.py[line:1025]INFO - b'li\xc8\xb3'
08/16/2022 05:46:08 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 05:46:08 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 05:46:08 PM rcomm.py[line:143]INFO - data -> b'li,136,8,68,32,212,241,Q\xee'
08/16/2022 05:46:08 PM daemon.py[line:1030]INFO - sensors state-->['136', '8', '68', '32', '212', '241']
08/16/2022 05:46:08 PM daemon.py[line:1033]INFO - [3]
08/16/2022 05:46:08 PM daemon.py[line:111]DEBUG - send_json -> {'rep': {'device': 'm3', 'result': 'success'}}
08/16/2022 05:46:20 PM daemon.py[line:93]INFO - gui msg: {'req': {'device': 'm3', 'command': 'lock', 'lock_id': '101'}}
08/16/2022 05:46:20 PM daemon.py[line:775]INFO - para_str-->1,
08/16/2022 05:46:20 PM daemon.py[line:1008]INFO - b'ld\x01\x01[r'
08/16/2022 05:46:20 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 05:46:20 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 05:46:20 PM rcomm.py[line:143]INFO - data -> b'ldok\x92\x97'
08/16/2022 05:46:20 PM daemon.py[line:1025]INFO - b'li\xc8\xb3'
08/16/2022 05:46:20 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 05:46:20 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 05:46:20 PM rcomm.py[line:143]INFO - data -> b'li,136,8,68,32,212,241,Q\xee'
08/16/2022 05:46:20 PM daemon.py[line:1030]INFO - sensors state-->['136', '8', '68', '32', '212', '241']
08/16/2022 05:46:20 PM daemon.py[line:1033]INFO - [1]
08/16/2022 05:46:20 PM daemon.py[line:111]DEBUG - send_json -> {'rep': {'device': 'm3', 'result': 'success'}}
08/16/2022 05:46:21 PM daemon.py[line:93]INFO - gui msg: {'req': {'device': 'm3', 'command': 'lock', 'lock_id': '102'}}
08/16/2022 05:46:21 PM daemon.py[line:775]INFO - para_str-->2,
08/16/2022 05:46:21 PM daemon.py[line:1008]INFO - b'ld\x01\x028B'
08/16/2022 05:46:21 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 05:46:21 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 05:46:21 PM rcomm.py[line:143]INFO - data -> b'ldok\x92\x97'
08/16/2022 05:46:21 PM daemon.py[line:1025]INFO - b'li\xc8\xb3'
08/16/2022 05:46:21 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 05:46:21 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 05:46:21 PM rcomm.py[line:143]INFO - data -> b'li,136,8,68,32,212,241,Q\xee'
08/16/2022 05:46:21 PM daemon.py[line:1030]INFO - sensors state-->['136', '8', '68', '32', '212', '241']
08/16/2022 05:46:21 PM daemon.py[line:1033]INFO - [2]
08/16/2022 05:46:21 PM daemon.py[line:111]DEBUG - send_json -> {'rep': {'device': 'm3', 'result': 'success'}}
08/16/2022 05:46:22 PM daemon.py[line:93]INFO - gui msg: {'req': {'device': 'm3', 'command': 'lock', 'lock_id': '103'}}
08/16/2022 05:46:22 PM daemon.py[line:775]INFO - para_str-->3,
08/16/2022 05:46:22 PM daemon.py[line:1008]INFO - b'ld\x01\x03\x19R'
08/16/2022 05:46:22 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 05:46:22 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 05:46:22 PM rcomm.py[line:143]INFO - data -> b'ldok\x92\x97'
08/16/2022 05:46:23 PM daemon.py[line:1025]INFO - b'li\xc8\xb3'
08/16/2022 05:46:23 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 05:46:23 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 05:46:23 PM rcomm.py[line:143]INFO - data -> b'li,136,8,68,32,212,241,Q\xee'
08/16/2022 05:46:23 PM daemon.py[line:1030]INFO - sensors state-->['136', '8', '68', '32', '212', '241']
08/16/2022 05:46:23 PM daemon.py[line:1033]INFO - [3]
08/16/2022 05:46:23 PM daemon.py[line:111]DEBUG - send_json -> {'rep': {'device': 'm3', 'result': 'success'}}
08/16/2022 05:46:24 PM daemon.py[line:93]INFO - gui msg: {'req': {'device': 'm3', 'command': 'lock', 'lock_id': '104'}}
08/16/2022 05:46:24 PM daemon.py[line:775]INFO - para_str-->4,
08/16/2022 05:46:24 PM daemon.py[line:1008]INFO - b'ld\x01\x04\xfe"'
08/16/2022 05:46:24 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 05:46:24 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 05:46:24 PM rcomm.py[line:143]INFO - data -> b'ldok\x92\x97'
08/16/2022 05:46:24 PM daemon.py[line:1025]INFO - b'li\xc8\xb3'
08/16/2022 05:46:24 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 05:46:24 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 05:46:24 PM rcomm.py[line:143]INFO - data -> b'li,128,8,68,32,212,241,\xc5\xc1'
08/16/2022 05:46:24 PM daemon.py[line:1030]INFO - sensors state-->['128', '8', '68', '32', '212', '241']
08/16/2022 05:46:24 PM daemon.py[line:1033]INFO - [4]
08/16/2022 05:46:24 PM daemon.py[line:111]DEBUG - send_json -> {'rep': {'device': 'm3', 'result': 'success'}}
08/16/2022 05:46:25 PM daemon.py[line:93]INFO - gui msg: {'req': {'device': 'm3', 'command': 'lock', 'lock_id': '105'}}
08/16/2022 05:46:25 PM daemon.py[line:775]INFO - para_str-->5,
08/16/2022 05:46:25 PM daemon.py[line:1008]INFO - b'ld\x01\x05\xdf2'
08/16/2022 05:46:25 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 05:46:25 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 05:46:25 PM rcomm.py[line:143]INFO - data -> b'ldok\x92\x97'
08/16/2022 05:46:25 PM daemon.py[line:1025]INFO - b'li\xc8\xb3'
08/16/2022 05:46:25 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 05:46:25 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 05:46:25 PM rcomm.py[line:143]INFO - data -> b'li,128,8,68,32,212,241,\xc5\xc1'
08/16/2022 05:46:25 PM daemon.py[line:1030]INFO - sensors state-->['128', '8', '68', '32', '212', '241']
08/16/2022 05:46:25 PM daemon.py[line:1033]INFO - [5]
08/16/2022 05:46:25 PM daemon.py[line:111]DEBUG - send_json -> {'rep': {'device': 'm3', 'result': 'success'}}
08/16/2022 05:46:26 PM daemon.py[line:93]INFO - gui msg: {'req': {'device': 'm3', 'command': 'lock', 'lock_id': '106'}}
08/16/2022 05:46:26 PM daemon.py[line:775]INFO - para_str-->6,
08/16/2022 05:46:26 PM daemon.py[line:1008]INFO - b'ld\x01\x06\xbc\x02'
08/16/2022 05:46:26 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 05:46:26 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 05:46:26 PM rcomm.py[line:143]INFO - data -> b'ldok\x92\x97'
08/16/2022 05:46:26 PM daemon.py[line:1025]INFO - b'li\xc8\xb3'
08/16/2022 05:46:26 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 05:46:26 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 05:46:26 PM rcomm.py[line:143]INFO - data -> b'li,128,8,68,32,212,241,\xc5\xc1'
08/16/2022 05:46:26 PM daemon.py[line:1030]INFO - sensors state-->['128', '8', '68', '32', '212', '241']
08/16/2022 05:46:26 PM daemon.py[line:1033]INFO - [6]
08/16/2022 05:46:26 PM daemon.py[line:111]DEBUG - send_json -> {'rep': {'device': 'm3', 'result': 'success'}}
08/16/2022 05:46:27 PM daemon.py[line:93]INFO - gui msg: {'req': {'device': 'm3', 'command': 'lock', 'lock_id': '107'}}
08/16/2022 05:46:27 PM daemon.py[line:775]INFO - para_str-->7,
08/16/2022 05:46:27 PM daemon.py[line:1008]INFO - b'ld\x01\x07\x9d\x12'
08/16/2022 05:46:27 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 05:46:27 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 05:46:27 PM rcomm.py[line:143]INFO - data -> b'ldok\x92\x97'
08/16/2022 05:46:28 PM daemon.py[line:1025]INFO - b'li\xc8\xb3'
08/16/2022 05:46:28 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 05:46:28 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 05:46:28 PM rcomm.py[line:143]INFO - data -> b'li,128,8,68,32,212,241,\xc5\xc1'
08/16/2022 05:46:28 PM daemon.py[line:1030]INFO - sensors state-->['128', '8', '68', '32', '212', '241']
08/16/2022 05:46:28 PM daemon.py[line:1033]INFO - [7]
08/16/2022 05:46:28 PM daemon.py[line:111]DEBUG - send_json -> {'rep': {'device': 'm3', 'result': 'success'}}
08/16/2022 05:52:43 PM daemon.py[line:93]INFO - gui msg: {'req': {'device': 'm3', 'command': 'lock', 'lock_id': '401'}}
08/16/2022 05:52:43 PM daemon.py[line:775]INFO - para_str-->30,
08/16/2022 05:52:43 PM daemon.py[line:1008]INFO - b'ld\x01\x1e\x85\x91'
08/16/2022 05:52:43 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 05:52:43 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 05:52:43 PM rcomm.py[line:143]INFO - data -> b'ldok\x92\x97'
08/16/2022 05:52:43 PM daemon.py[line:1025]INFO - b'li\xc8\xb3'
08/16/2022 05:52:43 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 05:52:43 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 05:52:43 PM rcomm.py[line:143]INFO - data -> b'li,143,8,68,0,212,241,\x08!'
08/16/2022 05:52:43 PM daemon.py[line:1030]INFO - sensors state-->['143', '8', '68', '0', '212', '241']
08/16/2022 05:52:43 PM daemon.py[line:1033]INFO - [30]
08/16/2022 05:52:43 PM daemon.py[line:111]DEBUG - send_json -> {'rep': {'device': 'm3', 'result': 'success'}}
08/16/2022 05:52:44 PM daemon.py[line:93]INFO - gui msg: {'req': {'device': 'm3', 'command': 'lock', 'lock_id': '402'}}
08/16/2022 05:52:44 PM daemon.py[line:775]INFO - para_str-->31,
08/16/2022 05:52:44 PM daemon.py[line:1008]INFO - b'ld\x01\x1f\xa4\x81'
08/16/2022 05:52:44 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 05:52:44 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 05:52:44 PM rcomm.py[line:143]INFO - data -> b'ldok\x92\x97'
08/16/2022 05:52:44 PM daemon.py[line:1025]INFO - b'li\xc8\xb3'
08/16/2022 05:52:44 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 05:52:44 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 05:52:44 PM rcomm.py[line:143]INFO - data -> b'li,143,8,68,0,212,241,\x08!'
08/16/2022 05:52:44 PM daemon.py[line:1030]INFO - sensors state-->['143', '8', '68', '0', '212', '241']
08/16/2022 05:52:44 PM daemon.py[line:1033]INFO - [31]
08/16/2022 05:52:44 PM daemon.py[line:111]DEBUG - send_json -> {'rep': {'device': 'm3', 'result': 'success'}}
08/16/2022 05:52:45 PM daemon.py[line:93]INFO - gui msg: {'req': {'device': 'm3', 'command': 'lock', 'lock_id': '403'}}
08/16/2022 05:52:45 PM daemon.py[line:775]INFO - para_str-->32,
08/16/2022 05:52:45 PM daemon.py[line:1008]INFO - b'ld\x01 \x18F'
08/16/2022 05:52:45 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 05:52:45 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 05:52:45 PM rcomm.py[line:143]INFO - data -> b'ldok\x92\x97'
08/16/2022 05:52:45 PM daemon.py[line:1025]INFO - b'li\xc8\xb3'
08/16/2022 05:52:45 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 05:52:45 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 05:52:45 PM rcomm.py[line:143]INFO - data -> b'li,143,8,68,32,212,241,\xd8\xd4'
08/16/2022 05:52:45 PM daemon.py[line:1030]INFO - sensors state-->['143', '8', '68', '32', '212', '241']
08/16/2022 05:52:45 PM daemon.py[line:1033]INFO - [32]
08/16/2022 05:52:45 PM daemon.py[line:111]DEBUG - send_json -> {'rep': {'device': 'm3', 'result': 'success'}}
08/16/2022 05:52:46 PM daemon.py[line:93]INFO - gui msg: {'req': {'device': 'm3', 'command': 'lock', 'lock_id': '404'}}
08/16/2022 05:52:46 PM daemon.py[line:775]INFO - para_str-->33,
08/16/2022 05:52:46 PM daemon.py[line:1008]INFO - b'ld\x01!9V'
08/16/2022 05:52:46 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 05:52:46 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 05:52:46 PM rcomm.py[line:143]INFO - data -> b'ldok\x92\x97'
08/16/2022 05:52:47 PM daemon.py[line:1025]INFO - b'li\xc8\xb3'
08/16/2022 05:52:47 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 05:52:47 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 05:52:47 PM rcomm.py[line:143]INFO - data -> b'li,143,8,68,32,212,241,\xd8\xd4'
08/16/2022 05:52:47 PM daemon.py[line:1030]INFO - sensors state-->['143', '8', '68', '32', '212', '241']
08/16/2022 05:52:47 PM daemon.py[line:1033]INFO - [33]
08/16/2022 05:52:47 PM daemon.py[line:111]DEBUG - send_json -> {'rep': {'device': 'm3', 'result': 'success'}}
08/16/2022 05:52:48 PM daemon.py[line:93]INFO - gui msg: {'req': {'device': 'm3', 'command': 'lock', 'lock_id': '405'}}
08/16/2022 05:52:48 PM daemon.py[line:775]INFO - para_str-->34,
08/16/2022 05:52:48 PM daemon.py[line:1008]INFO - b'ld\x01"Zf'
08/16/2022 05:52:48 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 05:52:48 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 05:52:48 PM rcomm.py[line:143]INFO - data -> b'ldok\x92\x97'
08/16/2022 05:52:48 PM daemon.py[line:1025]INFO - b'li\xc8\xb3'
08/16/2022 05:52:48 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 05:52:48 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 05:52:48 PM rcomm.py[line:143]INFO - data -> b'li,143,8,68,32,212,241,\xd8\xd4'
08/16/2022 05:52:48 PM daemon.py[line:1030]INFO - sensors state-->['143', '8', '68', '32', '212', '241']
08/16/2022 05:52:48 PM daemon.py[line:1033]INFO - [34]
08/16/2022 05:52:48 PM daemon.py[line:111]DEBUG - send_json -> {'rep': {'device': 'm3', 'result': 'success'}}
08/16/2022 05:52:49 PM daemon.py[line:93]INFO - gui msg: {'req': {'device': 'm3', 'command': 'lock', 'lock_id': '406'}}
08/16/2022 05:52:49 PM daemon.py[line:775]INFO - para_str-->35,
08/16/2022 05:52:49 PM daemon.py[line:1008]INFO - b'ld\x01#{v'
08/16/2022 05:52:49 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 05:52:49 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 05:52:49 PM rcomm.py[line:143]INFO - data -> b'ldok\x92\x97'
08/16/2022 05:52:49 PM daemon.py[line:1025]INFO - b'li\xc8\xb3'
08/16/2022 05:52:49 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 05:52:49 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 05:52:49 PM rcomm.py[line:143]INFO - data -> b'li,143,8,68,32,212,241,\xd8\xd4'
08/16/2022 05:52:49 PM daemon.py[line:1030]INFO - sensors state-->['143', '8', '68', '32', '212', '241']
08/16/2022 05:52:49 PM daemon.py[line:1033]INFO - [35]
08/16/2022 05:52:49 PM daemon.py[line:1025]INFO - b'li\xc8\xb3'
08/16/2022 05:52:49 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 05:52:49 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 05:52:49 PM rcomm.py[line:143]INFO - data -> b'li,143,8,68,32,212,241,\xd8\xd4'
08/16/2022 05:52:49 PM daemon.py[line:1030]INFO - sensors state-->['143', '8', '68', '32', '212', '241']
08/16/2022 05:52:49 PM daemon.py[line:1033]INFO - [35]
08/16/2022 05:52:49 PM daemon.py[line:1025]INFO - b'li\xc8\xb3'
08/16/2022 05:52:49 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 05:52:49 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 05:52:49 PM rcomm.py[line:143]INFO - data -> b'li,143,8,68,32,212,241,\xd8\xd4'
08/16/2022 05:52:49 PM daemon.py[line:1030]INFO - sensors state-->['143', '8', '68', '32', '212', '241']
08/16/2022 05:52:49 PM daemon.py[line:1033]INFO - [35]
08/16/2022 05:52:50 PM daemon.py[line:111]DEBUG - send_json -> {'rep': {'device': 'm3', 'result': 'error', 'meta': {'35': 'CLOSE'}}}
08/16/2022 05:52:51 PM daemon.py[line:93]INFO - gui msg: {'req': {'device': 'm3', 'command': 'lock', 'lock_id': '407'}}
08/16/2022 05:52:51 PM daemon.py[line:775]INFO - para_str-->36,
08/16/2022 05:52:51 PM daemon.py[line:1008]INFO - b'ld\x01$\x9c\x06'
08/16/2022 05:52:51 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 05:52:51 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 05:52:51 PM rcomm.py[line:143]INFO - data -> b'ldok\x92\x97'
08/16/2022 05:52:51 PM daemon.py[line:1025]INFO - b'li\xc8\xb3'
08/16/2022 05:52:51 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 05:52:51 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 05:52:51 PM rcomm.py[line:143]INFO - data -> b'li,143,8,68,32,212,241,\xd8\xd4'
08/16/2022 05:52:51 PM daemon.py[line:1030]INFO - sensors state-->['143', '8', '68', '32', '212', '241']
08/16/2022 05:52:51 PM daemon.py[line:1033]INFO - [36]
08/16/2022 05:52:51 PM daemon.py[line:111]DEBUG - send_json -> {'rep': {'device': 'm3', 'result': 'success'}}
08/16/2022 05:52:52 PM daemon.py[line:93]INFO - gui msg: {'req': {'device': 'm3', 'command': 'lock', 'lock_id': '408'}}
08/16/2022 05:52:52 PM daemon.py[line:775]INFO - para_str-->37,
08/16/2022 05:52:52 PM daemon.py[line:1008]INFO - b'ld\x01%\xbd\x16'
08/16/2022 05:52:52 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 05:52:52 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 05:52:52 PM rcomm.py[line:143]INFO - data -> b'ldok\x92\x97'
08/16/2022 05:52:52 PM daemon.py[line:1025]INFO - b'li\xc8\xb3'
08/16/2022 05:52:52 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 05:52:52 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 05:52:52 PM rcomm.py[line:143]INFO - data -> b'li,143,8,68,32,196,241,\xa1\x89'
08/16/2022 05:52:52 PM daemon.py[line:1030]INFO - sensors state-->['143', '8', '68', '32', '196', '241']
08/16/2022 05:52:52 PM daemon.py[line:1033]INFO - [37]
08/16/2022 05:52:52 PM daemon.py[line:111]DEBUG - send_json -> {'rep': {'device': 'm3', 'result': 'success'}}
08/16/2022 05:52:53 PM daemon.py[line:93]INFO - gui msg: {'req': {'device': 'm3', 'command': 'lock', 'lock_id': '409'}}
08/16/2022 05:52:53 PM daemon.py[line:775]INFO - para_str-->38,
08/16/2022 05:52:53 PM daemon.py[line:1008]INFO - b'ld\x01&\xde&'
08/16/2022 05:52:53 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 05:52:53 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 05:52:53 PM rcomm.py[line:143]INFO - data -> b'ldok\x92\x97'
08/16/2022 05:52:53 PM daemon.py[line:1025]INFO - b'li\xc8\xb3'
08/16/2022 05:52:53 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 05:52:53 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 05:52:53 PM rcomm.py[line:143]INFO - data -> b'li,143,8,68,32,196,241,\xa1\x89'
08/16/2022 05:52:53 PM daemon.py[line:1030]INFO - sensors state-->['143', '8', '68', '32', '196', '241']
08/16/2022 05:52:53 PM daemon.py[line:1033]INFO - [38]
08/16/2022 05:52:53 PM daemon.py[line:111]DEBUG - send_json -> {'rep': {'device': 'm3', 'result': 'success'}}
08/16/2022 05:52:54 PM daemon.py[line:93]INFO - gui msg: {'req': {'device': 'm3', 'command': 'lock', 'lock_id': '410'}}
08/16/2022 05:52:54 PM daemon.py[line:775]INFO - para_str-->39,
08/16/2022 05:52:54 PM daemon.py[line:1008]INFO - b"ld\x01'\xff6"
08/16/2022 05:52:54 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 05:52:54 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 05:52:54 PM rcomm.py[line:143]INFO - data -> b'ldok\x92\x97'
08/16/2022 05:52:55 PM daemon.py[line:1025]INFO - b'li\xc8\xb3'
08/16/2022 05:52:55 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 05:52:55 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 05:52:55 PM rcomm.py[line:143]INFO - data -> b'li,143,8,68,32,196,241,\xa1\x89'
08/16/2022 05:52:55 PM daemon.py[line:1030]INFO - sensors state-->['143', '8', '68', '32', '196', '241']
08/16/2022 05:52:55 PM daemon.py[line:1033]INFO - [39]
08/16/2022 05:52:55 PM daemon.py[line:1025]INFO - b'li\xc8\xb3'
08/16/2022 05:52:55 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 05:52:55 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 05:52:55 PM rcomm.py[line:143]INFO - data -> b'li,143,8,68,32,196,241,\xa1\x89'
08/16/2022 05:52:55 PM daemon.py[line:1030]INFO - sensors state-->['143', '8', '68', '32', '196', '241']
08/16/2022 05:52:55 PM daemon.py[line:1033]INFO - [39]
08/16/2022 05:52:55 PM daemon.py[line:1025]INFO - b'li\xc8\xb3'
08/16/2022 05:52:55 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 05:52:55 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 05:52:55 PM rcomm.py[line:143]INFO - data -> b'li,143,8,68,32,196,241,\xa1\x89'
08/16/2022 05:52:55 PM daemon.py[line:1030]INFO - sensors state-->['143', '8', '68', '32', '196', '241']
08/16/2022 05:52:55 PM daemon.py[line:1033]INFO - [39]
08/16/2022 05:52:55 PM daemon.py[line:111]DEBUG - send_json -> {'rep': {'device': 'm3', 'result': 'error', 'meta': {'39': 'CLOSE'}}}
08/16/2022 05:52:56 PM daemon.py[line:93]INFO - gui msg: {'req': {'device': 'm3', 'command': 'lock', 'lock_id': '411'}}
08/16/2022 05:52:56 PM daemon.py[line:775]INFO - para_str-->40,
08/16/2022 05:52:56 PM daemon.py[line:1008]INFO - b'ld\x01(\x10\xc7'
08/16/2022 05:52:56 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 05:52:56 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 05:52:56 PM rcomm.py[line:143]INFO - data -> b'ldok\x92\x97'
08/16/2022 05:52:56 PM daemon.py[line:1025]INFO - b'li\xc8\xb3'
08/16/2022 05:52:56 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 05:52:56 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 05:52:56 PM rcomm.py[line:143]INFO - data -> b'li,143,8,68,32,196,241,\xa1\x89'
08/16/2022 05:52:56 PM daemon.py[line:1030]INFO - sensors state-->['143', '8', '68', '32', '196', '241']
08/16/2022 05:52:56 PM daemon.py[line:1033]INFO - [40]
08/16/2022 05:52:57 PM daemon.py[line:1025]INFO - b'li\xc8\xb3'
08/16/2022 05:52:57 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 05:52:57 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 05:52:57 PM rcomm.py[line:143]INFO - data -> b'li,143,8,68,32,196,241,\xa1\x89'
08/16/2022 05:52:57 PM daemon.py[line:1030]INFO - sensors state-->['143', '8', '68', '32', '196', '241']
08/16/2022 05:52:57 PM daemon.py[line:1033]INFO - [40]
08/16/2022 05:52:57 PM daemon.py[line:1025]INFO - b'li\xc8\xb3'
08/16/2022 05:52:57 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 05:52:57 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 05:52:57 PM rcomm.py[line:143]INFO - data -> b'li,143,8,68,32,196,241,\xa1\x89'
08/16/2022 05:52:57 PM daemon.py[line:1030]INFO - sensors state-->['143', '8', '68', '32', '196', '241']
08/16/2022 05:52:57 PM daemon.py[line:1033]INFO - [40]
08/16/2022 05:52:57 PM daemon.py[line:111]DEBUG - send_json -> {'rep': {'device': 'm3', 'result': 'error', 'meta': {'40': 'CLOSE'}}}
08/16/2022 05:52:58 PM daemon.py[line:93]INFO - gui msg: {'req': {'device': 'm3', 'command': 'lock', 'lock_id': '412'}}
08/16/2022 05:52:58 PM daemon.py[line:775]INFO - para_str-->41,
08/16/2022 05:52:58 PM daemon.py[line:1008]INFO - b'ld\x01)1\xd7'
08/16/2022 05:52:58 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 05:52:58 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 05:52:58 PM rcomm.py[line:143]INFO - data -> b'ldok\x92\x97'
08/16/2022 05:52:58 PM daemon.py[line:1025]INFO - b'li\xc8\xb3'
08/16/2022 05:52:58 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 05:52:58 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 05:52:58 PM rcomm.py[line:143]INFO - data -> b'li,143,8,68,32,196,241,\xa1\x89'
08/16/2022 05:52:58 PM daemon.py[line:1030]INFO - sensors state-->['143', '8', '68', '32', '196', '241']
08/16/2022 05:52:58 PM daemon.py[line:1033]INFO - [41]
08/16/2022 05:52:58 PM daemon.py[line:1025]INFO - b'li\xc8\xb3'
08/16/2022 05:52:58 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 05:52:58 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 05:52:58 PM rcomm.py[line:143]INFO - data -> b'li,143,8,68,32,196,241,\xa1\x89'
08/16/2022 05:52:58 PM daemon.py[line:1030]INFO - sensors state-->['143', '8', '68', '32', '196', '241']
08/16/2022 05:52:58 PM daemon.py[line:1033]INFO - [41]
08/16/2022 05:52:58 PM daemon.py[line:1025]INFO - b'li\xc8\xb3'
08/16/2022 05:52:58 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 05:52:58 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 05:52:58 PM rcomm.py[line:143]INFO - data -> b'li,143,8,68,32,196,241,\xa1\x89'
08/16/2022 05:52:58 PM daemon.py[line:1030]INFO - sensors state-->['143', '8', '68', '32', '196', '241']
08/16/2022 05:52:58 PM daemon.py[line:1033]INFO - [41]
08/16/2022 05:52:59 PM daemon.py[line:111]DEBUG - send_json -> {'rep': {'device': 'm3', 'result': 'error', 'meta': {'41': 'CLOSE'}}}
08/16/2022 05:53:00 PM daemon.py[line:93]INFO - gui msg: {'req': {'device': 'm3', 'command': 'lock', 'lock_id': '413'}}
08/16/2022 05:53:00 PM daemon.py[line:775]INFO - para_str-->42,
08/16/2022 05:53:00 PM daemon.py[line:1008]INFO - b'ld\x01*R\xe7'
08/16/2022 05:53:00 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 05:53:00 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 05:53:00 PM rcomm.py[line:143]INFO - data -> b'ldok\x92\x97'
08/16/2022 05:53:00 PM daemon.py[line:1025]INFO - b'li\xc8\xb3'
08/16/2022 05:53:00 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 05:53:00 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 05:53:00 PM rcomm.py[line:143]INFO - data -> b'li,143,8,68,32,196,241,\xa1\x89'
08/16/2022 05:53:00 PM daemon.py[line:1030]INFO - sensors state-->['143', '8', '68', '32', '196', '241']
08/16/2022 05:53:00 PM daemon.py[line:1033]INFO - [42]
08/16/2022 05:53:00 PM daemon.py[line:111]DEBUG - send_json -> {'rep': {'device': 'm3', 'result': 'success'}}
08/16/2022 05:53:01 PM daemon.py[line:93]INFO - gui msg: {'req': {'device': 'm3', 'command': 'lock', 'lock_id': '414'}}
08/16/2022 05:53:01 PM daemon.py[line:775]INFO - para_str-->43,
08/16/2022 05:53:01 PM daemon.py[line:1008]INFO - b'ld\x01+s\xf7'
08/16/2022 05:53:01 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 05:53:01 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 05:53:01 PM rcomm.py[line:143]INFO - data -> b'ldok\x92\x97'
08/16/2022 05:53:01 PM daemon.py[line:1025]INFO - b'li\xc8\xb3'
08/16/2022 05:53:01 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 05:53:01 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 05:53:01 PM rcomm.py[line:143]INFO - data -> b'li,143,8,68,32,196,241,\xa1\x89'
08/16/2022 05:53:01 PM daemon.py[line:1030]INFO - sensors state-->['143', '8', '68', '32', '196', '241']
08/16/2022 05:53:01 PM daemon.py[line:1033]INFO - [43]
08/16/2022 05:53:01 PM daemon.py[line:111]DEBUG - send_json -> {'rep': {'device': 'm3', 'result': 'success'}}
08/16/2022 05:53:26 PM daemon.py[line:93]INFO - gui msg: {'req': {'device': 'm3', 'command': 'lock', 'lock_id': '401'}}
08/16/2022 05:53:26 PM daemon.py[line:775]INFO - para_str-->30,
08/16/2022 05:53:26 PM daemon.py[line:1008]INFO - b'ld\x01\x1e\x85\x91'
08/16/2022 05:53:26 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 05:53:26 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 05:53:26 PM rcomm.py[line:143]INFO - data -> b'ldok\x92\x97'
08/16/2022 05:53:26 PM daemon.py[line:1025]INFO - b'li\xc8\xb3'
08/16/2022 05:53:26 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 05:53:26 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 05:53:26 PM rcomm.py[line:143]INFO - data -> b'li,143,8,68,0,196,241,q|'
08/16/2022 05:53:26 PM daemon.py[line:1030]INFO - sensors state-->['143', '8', '68', '0', '196', '241']
08/16/2022 05:53:26 PM daemon.py[line:1033]INFO - [30]
08/16/2022 05:53:26 PM daemon.py[line:111]DEBUG - send_json -> {'rep': {'device': 'm3', 'result': 'success'}}
08/16/2022 05:53:27 PM daemon.py[line:93]INFO - gui msg: {'req': {'device': 'm3', 'command': 'lock', 'lock_id': '401'}}
08/16/2022 05:53:27 PM daemon.py[line:775]INFO - para_str-->30,
08/16/2022 05:53:27 PM daemon.py[line:1008]INFO - b'ld\x01\x1e\x85\x91'
08/16/2022 05:53:27 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 05:53:27 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 05:53:27 PM rcomm.py[line:143]INFO - data -> b'ldok\x92\x97'
08/16/2022 05:53:28 PM daemon.py[line:1025]INFO - b'li\xc8\xb3'
08/16/2022 05:53:28 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 05:53:28 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 05:53:28 PM rcomm.py[line:143]INFO - data -> b'li,143,8,68,0,196,241,q|'
08/16/2022 05:53:28 PM daemon.py[line:1030]INFO - sensors state-->['143', '8', '68', '0', '196', '241']
08/16/2022 05:53:28 PM daemon.py[line:1033]INFO - [30]
08/16/2022 05:53:28 PM daemon.py[line:111]DEBUG - send_json -> {'rep': {'device': 'm3', 'result': 'success'}}
08/16/2022 05:53:29 PM daemon.py[line:93]INFO - gui msg: {'req': {'device': 'm3', 'command': 'lock', 'lock_id': '401'}}
08/16/2022 05:53:29 PM daemon.py[line:775]INFO - para_str-->30,
08/16/2022 05:53:29 PM daemon.py[line:1008]INFO - b'ld\x01\x1e\x85\x91'
08/16/2022 05:53:29 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 05:53:29 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 05:53:29 PM rcomm.py[line:143]INFO - data -> b'ldok\x92\x97'
08/16/2022 05:53:29 PM daemon.py[line:1025]INFO - b'li\xc8\xb3'
08/16/2022 05:53:29 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 05:53:29 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 05:53:29 PM rcomm.py[line:143]INFO - data -> b'li,143,8,68,0,196,241,q|'
08/16/2022 05:53:29 PM daemon.py[line:1030]INFO - sensors state-->['143', '8', '68', '0', '196', '241']
08/16/2022 05:53:29 PM daemon.py[line:1033]INFO - [30]
08/16/2022 05:53:29 PM daemon.py[line:111]DEBUG - send_json -> {'rep': {'device': 'm3', 'result': 'success'}}
08/16/2022 05:53:30 PM daemon.py[line:93]INFO - gui msg: {'req': {'device': 'm3', 'command': 'lock', 'lock_id': '401'}}
08/16/2022 05:53:30 PM daemon.py[line:775]INFO - para_str-->30,
08/16/2022 05:53:30 PM daemon.py[line:1008]INFO - b'ld\x01\x1e\x85\x91'
08/16/2022 05:53:30 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 05:53:30 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 05:53:30 PM rcomm.py[line:143]INFO - data -> b'ldok\x92\x97'
08/16/2022 05:53:30 PM daemon.py[line:1025]INFO - b'li\xc8\xb3'
08/16/2022 05:53:30 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 05:53:30 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 05:53:30 PM rcomm.py[line:143]INFO - data -> b'li,143,8,68,0,196,241,q|'
08/16/2022 05:53:30 PM daemon.py[line:1030]INFO - sensors state-->['143', '8', '68', '0', '196', '241']
08/16/2022 05:53:30 PM daemon.py[line:1033]INFO - [30]
08/16/2022 05:53:30 PM daemon.py[line:111]DEBUG - send_json -> {'rep': {'device': 'm3', 'result': 'success'}}
08/16/2022 05:53:31 PM daemon.py[line:93]INFO - gui msg: {'req': {'device': 'm3', 'command': 'lock', 'lock_id': '401'}}
08/16/2022 05:53:31 PM daemon.py[line:775]INFO - para_str-->30,
08/16/2022 05:53:31 PM daemon.py[line:1008]INFO - b'ld\x01\x1e\x85\x91'
08/16/2022 05:53:31 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 05:53:31 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 05:53:31 PM rcomm.py[line:143]INFO - data -> b'ldok\x92\x97'
08/16/2022 05:53:31 PM daemon.py[line:1025]INFO - b'li\xc8\xb3'
08/16/2022 05:53:31 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 05:53:31 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 05:53:31 PM rcomm.py[line:143]INFO - data -> b'li,143,8,68,0,196,241,q|'
08/16/2022 05:53:31 PM daemon.py[line:1030]INFO - sensors state-->['143', '8', '68', '0', '196', '241']
08/16/2022 05:53:31 PM daemon.py[line:1033]INFO - [30]
08/16/2022 05:53:31 PM daemon.py[line:111]DEBUG - send_json -> {'rep': {'device': 'm3', 'result': 'success'}}
08/16/2022 05:53:59 PM serv.py[line:49]INFO - serv heatbeat
08/16/2022 05:56:41 PM daemon.py[line:93]INFO - gui msg: {'req': {'device': 'm3', 'command': 'lock', 'lock_id': '101'}}
08/16/2022 05:56:41 PM daemon.py[line:775]INFO - para_str-->1,
08/16/2022 05:56:41 PM daemon.py[line:1008]INFO - b'ld\x01\x01[r'
08/16/2022 05:56:41 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 05:56:41 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 05:56:41 PM rcomm.py[line:143]INFO - data -> b'ldok\x92\x97'
08/16/2022 05:56:41 PM daemon.py[line:1025]INFO - b'li\xc8\xb3'
08/16/2022 05:56:41 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 05:56:41 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 05:56:41 PM rcomm.py[line:143]INFO - data -> b'li,254,143,255,223,255,255,\xea\xfb'
08/16/2022 05:56:41 PM daemon.py[line:1030]INFO - sensors state-->['254', '143', '255', '223', '255', '255']
08/16/2022 05:56:41 PM daemon.py[line:1033]INFO - [1]
08/16/2022 05:56:41 PM daemon.py[line:111]DEBUG - send_json -> {'rep': {'device': 'm3', 'result': 'success'}}
08/16/2022 05:56:42 PM daemon.py[line:93]INFO - gui msg: {'req': {'device': 'm3', 'command': 'lock', 'lock_id': '102'}}
08/16/2022 05:56:42 PM daemon.py[line:775]INFO - para_str-->2,
08/16/2022 05:56:42 PM daemon.py[line:1008]INFO - b'ld\x01\x028B'
08/16/2022 05:56:42 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 05:56:42 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 05:56:42 PM rcomm.py[line:143]INFO - data -> b'ldok\x92\x97'
08/16/2022 05:56:42 PM daemon.py[line:1025]INFO - b'li\xc8\xb3'
08/16/2022 05:56:42 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 05:56:42 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 05:56:42 PM rcomm.py[line:143]INFO - data -> b'li,252,143,255,223,255,255,\x1b\x87'
08/16/2022 05:56:42 PM daemon.py[line:1030]INFO - sensors state-->['252', '143', '255', '223', '255', '255']
08/16/2022 05:56:42 PM daemon.py[line:1033]INFO - [2]
08/16/2022 05:56:42 PM daemon.py[line:111]DEBUG - send_json -> {'rep': {'device': 'm3', 'result': 'success'}}
08/16/2022 05:56:43 PM daemon.py[line:93]INFO - gui msg: {'req': {'device': 'm3', 'command': 'lock', 'lock_id': '103'}}
08/16/2022 05:56:43 PM daemon.py[line:775]INFO - para_str-->3,
08/16/2022 05:56:43 PM daemon.py[line:1008]INFO - b'ld\x01\x03\x19R'
08/16/2022 05:56:43 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 05:56:43 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 05:56:43 PM rcomm.py[line:143]INFO - data -> b'ldok\x92\x97'
08/16/2022 05:56:43 PM daemon.py[line:1025]INFO - b'li\xc8\xb3'
08/16/2022 05:56:43 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 05:56:43 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 05:56:43 PM rcomm.py[line:143]INFO - data -> b'li,248,143,255,223,255,255,\x03g'
08/16/2022 05:56:43 PM daemon.py[line:1030]INFO - sensors state-->['248', '143', '255', '223', '255', '255']
08/16/2022 05:56:43 PM daemon.py[line:1033]INFO - [3]
08/16/2022 05:56:43 PM daemon.py[line:111]DEBUG - send_json -> {'rep': {'device': 'm3', 'result': 'success'}}
08/16/2022 05:56:44 PM daemon.py[line:93]INFO - gui msg: {'req': {'device': 'm3', 'command': 'lock', 'lock_id': '104'}}
08/16/2022 05:56:44 PM daemon.py[line:775]INFO - para_str-->4,
08/16/2022 05:56:44 PM daemon.py[line:1008]INFO - b'ld\x01\x04\xfe"'
08/16/2022 05:56:44 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 05:56:44 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 05:56:44 PM rcomm.py[line:143]INFO - data -> b'ldok\x92\x97'
08/16/2022 05:56:44 PM daemon.py[line:1025]INFO - b'li\xc8\xb3'
08/16/2022 05:56:44 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 05:56:44 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 05:56:45 PM rcomm.py[line:143]INFO - data -> b'li,240,143,255,223,255,255,\xa09'
08/16/2022 05:56:45 PM daemon.py[line:1030]INFO - sensors state-->['240', '143', '255', '223', '255', '255']
08/16/2022 05:56:45 PM daemon.py[line:1033]INFO - [4]
08/16/2022 05:56:45 PM daemon.py[line:111]DEBUG - send_json -> {'rep': {'device': 'm3', 'result': 'success'}}
08/16/2022 05:56:46 PM daemon.py[line:93]INFO - gui msg: {'req': {'device': 'm3', 'command': 'lock', 'lock_id': '105'}}
08/16/2022 05:56:46 PM daemon.py[line:775]INFO - para_str-->5,
08/16/2022 05:56:46 PM daemon.py[line:1008]INFO - b'ld\x01\x05\xdf2'
08/16/2022 05:56:46 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 05:56:46 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 05:56:46 PM rcomm.py[line:143]INFO - data -> b'ldok\x92\x97'
08/16/2022 05:56:46 PM daemon.py[line:1025]INFO - b'li\xc8\xb3'
08/16/2022 05:56:46 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 05:56:46 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 05:56:46 PM rcomm.py[line:143]INFO - data -> b'li,224,143,255,223,255,255,\xfa\xd0'
08/16/2022 05:56:46 PM daemon.py[line:1030]INFO - sensors state-->['224', '143', '255', '223', '255', '255']
08/16/2022 05:56:46 PM daemon.py[line:1033]INFO - [5]
08/16/2022 05:56:46 PM daemon.py[line:111]DEBUG - send_json -> {'rep': {'device': 'm3', 'result': 'success'}}
08/16/2022 05:56:47 PM daemon.py[line:93]INFO - gui msg: {'req': {'device': 'm3', 'command': 'lock', 'lock_id': '106'}}
08/16/2022 05:56:47 PM daemon.py[line:775]INFO - para_str-->6,
08/16/2022 05:56:47 PM daemon.py[line:1008]INFO - b'ld\x01\x06\xbc\x02'
08/16/2022 05:56:47 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 05:56:47 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 05:56:47 PM rcomm.py[line:143]INFO - data -> b'ldok\x92\x97'
08/16/2022 05:56:47 PM daemon.py[line:1025]INFO - b'li\xc8\xb3'
08/16/2022 05:56:47 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 05:56:47 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 05:56:47 PM rcomm.py[line:143]INFO - data -> b'li,192,143,255,223,255,255,(B'
08/16/2022 05:56:47 PM daemon.py[line:1030]INFO - sensors state-->['192', '143', '255', '223', '255', '255']
08/16/2022 05:56:47 PM daemon.py[line:1033]INFO - [6]
08/16/2022 05:56:47 PM daemon.py[line:111]DEBUG - send_json -> {'rep': {'device': 'm3', 'result': 'success'}}
08/16/2022 05:56:48 PM daemon.py[line:93]INFO - gui msg: {'req': {'device': 'm3', 'command': 'lock', 'lock_id': '107'}}
08/16/2022 05:56:48 PM daemon.py[line:775]INFO - para_str-->7,
08/16/2022 05:56:48 PM daemon.py[line:1008]INFO - b'ld\x01\x07\x9d\x12'
08/16/2022 05:56:48 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 05:56:48 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 05:56:48 PM rcomm.py[line:143]INFO - data -> b'ldok\x92\x97'
08/16/2022 05:56:48 PM daemon.py[line:1025]INFO - b'li\xc8\xb3'
08/16/2022 05:56:48 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 05:56:48 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 05:56:48 PM rcomm.py[line:143]INFO - data -> b'li,192,143,255,223,255,255,(B'
08/16/2022 05:56:48 PM daemon.py[line:1030]INFO - sensors state-->['192', '143', '255', '223', '255', '255']
08/16/2022 05:56:48 PM daemon.py[line:1033]INFO - [7]
08/16/2022 05:56:48 PM daemon.py[line:1025]INFO - b'li\xc8\xb3'
08/16/2022 05:56:48 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 05:56:48 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 05:56:49 PM rcomm.py[line:143]INFO - data -> b'li,192,143,255,223,255,255,(B'
08/16/2022 05:56:49 PM daemon.py[line:1030]INFO - sensors state-->['192', '143', '255', '223', '255', '255']
08/16/2022 05:56:49 PM daemon.py[line:1033]INFO - [7]
08/16/2022 05:56:49 PM daemon.py[line:1025]INFO - b'li\xc8\xb3'
08/16/2022 05:56:49 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 05:56:49 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 05:56:49 PM rcomm.py[line:143]INFO - data -> b'li,192,143,255,223,255,255,(B'
08/16/2022 05:56:49 PM daemon.py[line:1030]INFO - sensors state-->['192', '143', '255', '223', '255', '255']
08/16/2022 05:56:49 PM daemon.py[line:1033]INFO - [7]
08/16/2022 05:56:49 PM daemon.py[line:111]DEBUG - send_json -> {'rep': {'device': 'm3', 'result': 'error', 'meta': {'7': 'CLOSE'}}}
08/16/2022 05:57:01 PM daemon.py[line:93]INFO - gui msg: {'req': {'device': 'm3', 'command': 'lock', 'lock_id': '107'}}
08/16/2022 05:57:01 PM daemon.py[line:775]INFO - para_str-->7,
08/16/2022 05:57:01 PM daemon.py[line:1008]INFO - b'ld\x01\x07\x9d\x12'
08/16/2022 05:57:01 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 05:57:01 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 05:57:01 PM rcomm.py[line:143]INFO - data -> b'ldok\x92\x97'
08/16/2022 05:57:01 PM daemon.py[line:1025]INFO - b'li\xc8\xb3'
08/16/2022 05:57:01 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 05:57:01 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 05:57:01 PM rcomm.py[line:143]INFO - data -> b'li,192,143,255,223,255,255,(B'
08/16/2022 05:57:01 PM daemon.py[line:1030]INFO - sensors state-->['192', '143', '255', '223', '255', '255']
08/16/2022 05:57:01 PM daemon.py[line:1033]INFO - [7]
08/16/2022 05:57:01 PM daemon.py[line:1025]INFO - b'li\xc8\xb3'
08/16/2022 05:57:01 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 05:57:01 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 05:57:01 PM rcomm.py[line:143]INFO - data -> b'li,192,143,255,223,255,255,(B'
08/16/2022 05:57:01 PM daemon.py[line:1030]INFO - sensors state-->['192', '143', '255', '223', '255', '255']
08/16/2022 05:57:01 PM daemon.py[line:1033]INFO - [7]
08/16/2022 05:57:01 PM daemon.py[line:1025]INFO - b'li\xc8\xb3'
08/16/2022 05:57:01 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 05:57:01 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 05:57:01 PM rcomm.py[line:143]INFO - data -> b'li,192,143,255,223,255,255,(B'
08/16/2022 05:57:01 PM daemon.py[line:1030]INFO - sensors state-->['192', '143', '255', '223', '255', '255']
08/16/2022 05:57:01 PM daemon.py[line:1033]INFO - [7]
08/16/2022 05:57:01 PM daemon.py[line:111]DEBUG - send_json -> {'rep': {'device': 'm3', 'result': 'error', 'meta': {'7': 'CLOSE'}}}
08/16/2022 05:57:03 PM daemon.py[line:93]INFO - gui msg: {'req': {'device': 'm3', 'command': 'lock', 'lock_id': '107'}}
08/16/2022 05:57:03 PM daemon.py[line:775]INFO - para_str-->7,
08/16/2022 05:57:03 PM daemon.py[line:1008]INFO - b'ld\x01\x07\x9d\x12'
08/16/2022 05:57:03 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 05:57:03 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 05:57:03 PM rcomm.py[line:143]INFO - data -> b'ldok\x92\x97'
08/16/2022 05:57:03 PM daemon.py[line:1025]INFO - b'li\xc8\xb3'
08/16/2022 05:57:03 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 05:57:03 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 05:57:03 PM rcomm.py[line:143]INFO - data -> b'li,192,143,255,223,255,255,(B'
08/16/2022 05:57:03 PM daemon.py[line:1030]INFO - sensors state-->['192', '143', '255', '223', '255', '255']
08/16/2022 05:57:03 PM daemon.py[line:1033]INFO - [7]
08/16/2022 05:57:03 PM daemon.py[line:1025]INFO - b'li\xc8\xb3'
08/16/2022 05:57:03 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 05:57:03 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 05:57:03 PM rcomm.py[line:143]INFO - data -> b'li,192,143,255,223,255,255,(B'
08/16/2022 05:57:03 PM daemon.py[line:1030]INFO - sensors state-->['192', '143', '255', '223', '255', '255']
08/16/2022 05:57:03 PM daemon.py[line:1033]INFO - [7]
08/16/2022 05:57:03 PM daemon.py[line:1025]INFO - b'li\xc8\xb3'
08/16/2022 05:57:03 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 05:57:03 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 05:57:03 PM rcomm.py[line:143]INFO - data -> b'li,192,143,255,223,255,255,(B'
08/16/2022 05:57:03 PM daemon.py[line:1030]INFO - sensors state-->['192', '143', '255', '223', '255', '255']
08/16/2022 05:57:03 PM daemon.py[line:1033]INFO - [7]
08/16/2022 05:57:04 PM daemon.py[line:111]DEBUG - send_json -> {'rep': {'device': 'm3', 'result': 'error', 'meta': {'7': 'CLOSE'}}}
08/16/2022 05:57:05 PM daemon.py[line:93]INFO - gui msg: {'req': {'device': 'm3', 'command': 'lock', 'lock_id': '107'}}
08/16/2022 05:57:05 PM daemon.py[line:775]INFO - para_str-->7,
08/16/2022 05:57:05 PM daemon.py[line:1008]INFO - b'ld\x01\x07\x9d\x12'
08/16/2022 05:57:05 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 05:57:05 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 05:57:05 PM rcomm.py[line:143]INFO - data -> b'ldok\x92\x97'
08/16/2022 05:57:05 PM daemon.py[line:1025]INFO - b'li\xc8\xb3'
08/16/2022 05:57:05 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 05:57:05 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 05:57:05 PM rcomm.py[line:143]INFO - data -> b'li,192,143,255,223,255,255,(B'
08/16/2022 05:57:05 PM daemon.py[line:1030]INFO - sensors state-->['192', '143', '255', '223', '255', '255']
08/16/2022 05:57:05 PM daemon.py[line:1033]INFO - [7]
08/16/2022 05:57:05 PM daemon.py[line:1025]INFO - b'li\xc8\xb3'
08/16/2022 05:57:05 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 05:57:05 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 05:57:05 PM rcomm.py[line:143]INFO - data -> b'li,192,143,255,223,255,255,(B'
08/16/2022 05:57:05 PM daemon.py[line:1030]INFO - sensors state-->['192', '143', '255', '223', '255', '255']
08/16/2022 05:57:05 PM daemon.py[line:1033]INFO - [7]
08/16/2022 05:57:06 PM daemon.py[line:1025]INFO - b'li\xc8\xb3'
08/16/2022 05:57:06 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 05:57:06 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 05:57:06 PM rcomm.py[line:143]INFO - data -> b'li,192,143,255,223,255,255,(B'
08/16/2022 05:57:06 PM daemon.py[line:1030]INFO - sensors state-->['192', '143', '255', '223', '255', '255']
08/16/2022 05:57:06 PM daemon.py[line:1033]INFO - [7]
08/16/2022 05:57:06 PM daemon.py[line:111]DEBUG - send_json -> {'rep': {'device': 'm3', 'result': 'error', 'meta': {'7': 'CLOSE'}}}
08/16/2022 05:57:07 PM daemon.py[line:93]INFO - gui msg: {'req': {'device': 'm3', 'command': 'lock', 'lock_id': '107'}}
08/16/2022 05:57:07 PM daemon.py[line:775]INFO - para_str-->7,
08/16/2022 05:57:07 PM daemon.py[line:1008]INFO - b'ld\x01\x07\x9d\x12'
08/16/2022 05:57:07 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 05:57:07 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 05:57:07 PM rcomm.py[line:143]INFO - data -> b'ldok\x92\x97'
08/16/2022 05:57:07 PM daemon.py[line:1025]INFO - b'li\xc8\xb3'
08/16/2022 05:57:07 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 05:57:07 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 05:57:07 PM rcomm.py[line:143]INFO - data -> b'li,192,143,255,223,255,255,(B'
08/16/2022 05:57:07 PM daemon.py[line:1030]INFO - sensors state-->['192', '143', '255', '223', '255', '255']
08/16/2022 05:57:07 PM daemon.py[line:1033]INFO - [7]
08/16/2022 05:57:07 PM daemon.py[line:1025]INFO - b'li\xc8\xb3'
08/16/2022 05:57:07 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 05:57:07 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 05:57:07 PM rcomm.py[line:143]INFO - data -> b'li,192,143,255,223,255,255,(B'
08/16/2022 05:57:07 PM daemon.py[line:1030]INFO - sensors state-->['192', '143', '255', '223', '255', '255']
08/16/2022 05:57:07 PM daemon.py[line:1033]INFO - [7]
08/16/2022 05:57:07 PM daemon.py[line:1025]INFO - b'li\xc8\xb3'
08/16/2022 05:57:07 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 05:57:07 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 05:57:07 PM rcomm.py[line:143]INFO - data -> b'li,192,143,255,223,255,255,(B'
08/16/2022 05:57:07 PM daemon.py[line:1030]INFO - sensors state-->['192', '143', '255', '223', '255', '255']
08/16/2022 05:57:07 PM daemon.py[line:1033]INFO - [7]
08/16/2022 05:57:07 PM daemon.py[line:111]DEBUG - send_json -> {'rep': {'device': 'm3', 'result': 'error', 'meta': {'7': 'CLOSE'}}}
08/16/2022 05:57:08 PM daemon.py[line:93]INFO - gui msg: {'req': {'device': 'm3', 'command': 'lock', 'lock_id': '107'}}
08/16/2022 05:57:08 PM daemon.py[line:775]INFO - para_str-->7,
08/16/2022 05:57:08 PM daemon.py[line:1008]INFO - b'ld\x01\x07\x9d\x12'
08/16/2022 05:57:08 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 05:57:08 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 05:57:09 PM rcomm.py[line:143]INFO - data -> b'ldok\x92\x97'
08/16/2022 05:57:09 PM daemon.py[line:1025]INFO - b'li\xc8\xb3'
08/16/2022 05:57:09 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 05:57:09 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 05:57:09 PM rcomm.py[line:143]INFO - data -> b'li,192,143,255,223,255,255,(B'
08/16/2022 05:57:09 PM daemon.py[line:1030]INFO - sensors state-->['192', '143', '255', '223', '255', '255']
08/16/2022 05:57:09 PM daemon.py[line:1033]INFO - [7]
08/16/2022 05:57:09 PM daemon.py[line:1025]INFO - b'li\xc8\xb3'
08/16/2022 05:57:09 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 05:57:09 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 05:57:09 PM rcomm.py[line:143]INFO - data -> b'li,192,143,255,223,255,255,(B'
08/16/2022 05:57:09 PM daemon.py[line:1030]INFO - sensors state-->['192', '143', '255', '223', '255', '255']
08/16/2022 05:57:09 PM daemon.py[line:1033]INFO - [7]
08/16/2022 05:57:09 PM daemon.py[line:1025]INFO - b'li\xc8\xb3'
08/16/2022 05:57:09 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 05:57:09 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 05:57:09 PM rcomm.py[line:143]INFO - data -> b'li,192,143,255,223,255,255,(B'
08/16/2022 05:57:09 PM daemon.py[line:1030]INFO - sensors state-->['192', '143', '255', '223', '255', '255']
08/16/2022 05:57:09 PM daemon.py[line:1033]INFO - [7]
08/16/2022 05:57:09 PM daemon.py[line:111]DEBUG - send_json -> {'rep': {'device': 'm3', 'result': 'error', 'meta': {'7': 'CLOSE'}}}
08/16/2022 05:57:11 PM daemon.py[line:93]INFO - gui msg: {'req': {'device': 'm3', 'command': 'lock', 'lock_id': '107'}}
08/16/2022 05:57:11 PM daemon.py[line:775]INFO - para_str-->7,
08/16/2022 05:57:11 PM daemon.py[line:1008]INFO - b'ld\x01\x07\x9d\x12'
08/16/2022 05:57:11 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 05:57:11 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 05:57:11 PM rcomm.py[line:143]INFO - data -> b'ldok\x92\x97'
08/16/2022 05:57:11 PM daemon.py[line:1025]INFO - b'li\xc8\xb3'
08/16/2022 05:57:11 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 05:57:11 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 05:57:11 PM rcomm.py[line:143]INFO - data -> b'li,192,143,255,223,255,255,(B'
08/16/2022 05:57:11 PM daemon.py[line:1030]INFO - sensors state-->['192', '143', '255', '223', '255', '255']
08/16/2022 05:57:11 PM daemon.py[line:1033]INFO - [7]
08/16/2022 05:57:11 PM daemon.py[line:1025]INFO - b'li\xc8\xb3'
08/16/2022 05:57:11 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 05:57:11 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 05:57:11 PM rcomm.py[line:143]INFO - data -> b'li,192,143,255,223,255,255,(B'
08/16/2022 05:57:11 PM daemon.py[line:1030]INFO - sensors state-->['192', '143', '255', '223', '255', '255']
08/16/2022 05:57:11 PM daemon.py[line:1033]INFO - [7]
08/16/2022 05:57:11 PM daemon.py[line:1025]INFO - b'li\xc8\xb3'
08/16/2022 05:57:11 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 05:57:11 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 05:57:11 PM rcomm.py[line:143]INFO - data -> b'li,192,143,255,223,255,255,(B'
08/16/2022 05:57:11 PM daemon.py[line:1030]INFO - sensors state-->['192', '143', '255', '223', '255', '255']
08/16/2022 05:57:11 PM daemon.py[line:1033]INFO - [7]
08/16/2022 05:57:11 PM daemon.py[line:111]DEBUG - send_json -> {'rep': {'device': 'm3', 'result': 'error', 'meta': {'7': 'CLOSE'}}}
08/16/2022 05:57:31 PM daemon.py[line:93]INFO - gui msg: {'req': {'device': 'm3', 'command': 'lock', 'lock_id': '201'}}
08/16/2022 05:57:31 PM daemon.py[line:775]INFO - para_str-->8,
08/16/2022 05:57:31 PM daemon.py[line:1008]INFO - b'ld\x01\x08r\xe3'
08/16/2022 05:57:31 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 05:57:31 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 05:57:31 PM rcomm.py[line:143]INFO - data -> b'ldok\x92\x97'
08/16/2022 05:57:31 PM daemon.py[line:1025]INFO - b'li\xc8\xb3'
08/16/2022 05:57:31 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 05:57:31 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 05:57:31 PM rcomm.py[line:143]INFO - data -> b'li,207,143,255,223,255,255,\x84\xac'
08/16/2022 05:57:31 PM daemon.py[line:1030]INFO - sensors state-->['207', '143', '255', '223', '255', '255']
08/16/2022 05:57:31 PM daemon.py[line:1033]INFO - [8]
08/16/2022 05:57:31 PM daemon.py[line:1025]INFO - b'li\xc8\xb3'
08/16/2022 05:57:31 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 05:57:31 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 05:57:31 PM rcomm.py[line:143]INFO - data -> b'li,207,143,255,223,255,255,\x84\xac'
08/16/2022 05:57:31 PM daemon.py[line:1030]INFO - sensors state-->['207', '143', '255', '223', '255', '255']
08/16/2022 05:57:31 PM daemon.py[line:1033]INFO - [8]
08/16/2022 05:57:31 PM daemon.py[line:1025]INFO - b'li\xc8\xb3'
08/16/2022 05:57:31 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 05:57:32 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 05:57:32 PM rcomm.py[line:143]INFO - data -> b'li,207,143,255,223,255,255,\x84\xac'
08/16/2022 05:57:32 PM daemon.py[line:1030]INFO - sensors state-->['207', '143', '255', '223', '255', '255']
08/16/2022 05:57:32 PM daemon.py[line:1033]INFO - [8]
08/16/2022 05:57:32 PM daemon.py[line:111]DEBUG - send_json -> {'rep': {'device': 'm3', 'result': 'error', 'meta': {'8': 'CLOSE'}}}
08/16/2022 05:57:33 PM daemon.py[line:93]INFO - gui msg: {'req': {'device': 'm3', 'command': 'lock', 'lock_id': '202'}}
08/16/2022 05:57:33 PM daemon.py[line:775]INFO - para_str-->9,
08/16/2022 05:57:33 PM daemon.py[line:1008]INFO - b'ld\x01\tS\xf3'
08/16/2022 05:57:33 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 05:57:33 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 05:57:33 PM rcomm.py[line:143]INFO - data -> b'ldok\x92\x97'
08/16/2022 05:57:33 PM daemon.py[line:1025]INFO - b'li\xc8\xb3'
08/16/2022 05:57:33 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 05:57:33 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 05:57:33 PM rcomm.py[line:143]INFO - data -> b'li,207,142,255,223,255,255,\xb5\\'
08/16/2022 05:57:33 PM daemon.py[line:1030]INFO - sensors state-->['207', '142', '255', '223', '255', '255']
08/16/2022 05:57:33 PM daemon.py[line:1033]INFO - [9]
08/16/2022 05:57:33 PM daemon.py[line:111]DEBUG - send_json -> {'rep': {'device': 'm3', 'result': 'success'}}
08/16/2022 05:57:34 PM daemon.py[line:93]INFO - gui msg: {'req': {'device': 'm3', 'command': 'lock', 'lock_id': '203'}}
08/16/2022 05:57:34 PM daemon.py[line:775]INFO - para_str-->10,
08/16/2022 05:57:34 PM daemon.py[line:1008]INFO - b'ld\x01\n0\xc3'
08/16/2022 05:57:34 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 05:57:34 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 05:57:34 PM rcomm.py[line:143]INFO - data -> b'ldok\x92\x97'
08/16/2022 05:57:34 PM daemon.py[line:1025]INFO - b'li\xc8\xb3'
08/16/2022 05:57:34 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 05:57:34 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 05:57:34 PM rcomm.py[line:143]INFO - data -> b'li,207,140,255,223,255,255,\xf6\xac'
08/16/2022 05:57:34 PM daemon.py[line:1030]INFO - sensors state-->['207', '140', '255', '223', '255', '255']
08/16/2022 05:57:34 PM daemon.py[line:1033]INFO - [10]
08/16/2022 05:57:34 PM daemon.py[line:111]DEBUG - send_json -> {'rep': {'device': 'm3', 'result': 'success'}}
08/16/2022 05:57:35 PM daemon.py[line:93]INFO - gui msg: {'req': {'device': 'm3', 'command': 'lock', 'lock_id': '204'}}
08/16/2022 05:57:35 PM daemon.py[line:775]INFO - para_str-->11,
08/16/2022 05:57:35 PM daemon.py[line:1008]INFO - b'ld\x01\x0b\x11\xd3'
08/16/2022 05:57:35 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 05:57:35 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 05:57:35 PM rcomm.py[line:143]INFO - data -> b'ldok\x92\x97'
08/16/2022 05:57:35 PM daemon.py[line:1025]INFO - b'li\xc8\xb3'
08/16/2022 05:57:35 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 05:57:35 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 05:57:35 PM rcomm.py[line:143]INFO - data -> b'li,143,136,255,223,255,255,D\xec'
08/16/2022 05:57:35 PM daemon.py[line:1030]INFO - sensors state-->['143', '136', '255', '223', '255', '255']
08/16/2022 05:57:35 PM daemon.py[line:1033]INFO - [11]
08/16/2022 05:57:35 PM daemon.py[line:111]DEBUG - send_json -> {'rep': {'device': 'm3', 'result': 'success'}}
08/16/2022 05:57:36 PM daemon.py[line:93]INFO - gui msg: {'req': {'device': 'm3', 'command': 'lock', 'lock_id': '205'}}
08/16/2022 05:57:36 PM daemon.py[line:775]INFO - para_str-->12,13,
08/16/2022 05:57:36 PM daemon.py[line:1008]INFO - b'ld\x02\x0c\rt\xfb'
08/16/2022 05:57:36 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 05:57:36 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 05:57:37 PM rcomm.py[line:143]INFO - data -> b'ldok\x92\x97'
08/16/2022 05:57:37 PM daemon.py[line:1025]INFO - b'li\xc8\xb3'
08/16/2022 05:57:37 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 05:57:37 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 05:57:37 PM rcomm.py[line:143]INFO - data -> b'li,143,136,255,223,255,255,D\xec'
08/16/2022 05:57:37 PM daemon.py[line:1030]INFO - sensors state-->['143', '136', '255', '223', '255', '255']
08/16/2022 05:57:37 PM daemon.py[line:1033]INFO - [12, 13]
08/16/2022 05:57:37 PM daemon.py[line:1025]INFO - b'li\xc8\xb3'
08/16/2022 05:57:37 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 05:57:37 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 05:57:37 PM rcomm.py[line:143]INFO - data -> b'li,143,136,255,223,255,255,D\xec'
08/16/2022 05:57:37 PM daemon.py[line:1030]INFO - sensors state-->['143', '136', '255', '223', '255', '255']
08/16/2022 05:57:37 PM daemon.py[line:1033]INFO - [12, 13]
08/16/2022 05:57:37 PM daemon.py[line:1025]INFO - b'li\xc8\xb3'
08/16/2022 05:57:37 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 05:57:37 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 05:57:37 PM rcomm.py[line:143]INFO - data -> b'li,143,136,255,223,255,255,D\xec'
08/16/2022 05:57:37 PM daemon.py[line:1030]INFO - sensors state-->['143', '136', '255', '223', '255', '255']
08/16/2022 05:57:37 PM daemon.py[line:1033]INFO - [12, 13]
08/16/2022 05:57:37 PM daemon.py[line:111]DEBUG - send_json -> {'rep': {'device': 'm3', 'result': 'error', 'meta': {'13': 'OPEN', '12': 'CLOSE'}}}
08/16/2022 05:57:38 PM daemon.py[line:93]INFO - gui msg: {'req': {'device': 'm3', 'command': 'lock', 'lock_id': '206'}}
08/16/2022 05:57:38 PM daemon.py[line:775]INFO - para_str-->14,
08/16/2022 05:57:38 PM daemon.py[line:1008]INFO - b'ld\x01\x0e\xb4\x83'
08/16/2022 05:57:38 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 05:57:38 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 05:57:38 PM rcomm.py[line:143]INFO - data -> b'ldok\x92\x97'
08/16/2022 05:57:38 PM daemon.py[line:1025]INFO - b'li\xc8\xb3'
08/16/2022 05:57:38 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 05:57:38 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 05:57:38 PM rcomm.py[line:143]INFO - data -> b'li,143,136,255,223,255,255,D\xec'
08/16/2022 05:57:38 PM daemon.py[line:1030]INFO - sensors state-->['143', '136', '255', '223', '255', '255']
08/16/2022 05:57:38 PM daemon.py[line:1033]INFO - [14]
08/16/2022 05:57:38 PM daemon.py[line:111]DEBUG - send_json -> {'rep': {'device': 'm3', 'result': 'success'}}
08/16/2022 05:57:39 PM daemon.py[line:93]INFO - gui msg: {'req': {'device': 'm3', 'command': 'lock', 'lock_id': '207'}}
08/16/2022 05:57:39 PM daemon.py[line:775]INFO - para_str-->15,
08/16/2022 05:57:39 PM daemon.py[line:1008]INFO - b'ld\x01\x0f\x95\x93'
08/16/2022 05:57:39 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 05:57:39 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 05:57:39 PM rcomm.py[line:143]INFO - data -> b'ldok\x92\x97'
08/16/2022 05:57:40 PM daemon.py[line:1025]INFO - b'li\xc8\xb3'
08/16/2022 05:57:40 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 05:57:40 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 05:57:40 PM rcomm.py[line:143]INFO - data -> b'li,143,136,255,223,255,255,D\xec'
08/16/2022 05:57:40 PM daemon.py[line:1030]INFO - sensors state-->['143', '136', '255', '223', '255', '255']
08/16/2022 05:57:40 PM daemon.py[line:1033]INFO - [15]
08/16/2022 05:57:40 PM daemon.py[line:111]DEBUG - send_json -> {'rep': {'device': 'm3', 'result': 'success'}}
08/16/2022 05:57:41 PM daemon.py[line:93]INFO - gui msg: {'req': {'device': 'm3', 'command': 'lock', 'lock_id': '208'}}
08/16/2022 05:57:41 PM daemon.py[line:775]INFO - para_str-->16,
08/16/2022 05:57:41 PM daemon.py[line:1008]INFO - b'ld\x01\x10Kp'
08/16/2022 05:57:41 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 05:57:41 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 05:57:41 PM rcomm.py[line:143]INFO - data -> b'ldok\x92\x97'
08/16/2022 05:57:41 PM daemon.py[line:1025]INFO - b'li\xc8\xb3'
08/16/2022 05:57:41 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 05:57:41 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 05:57:41 PM rcomm.py[line:143]INFO - data -> b'li,143,8,255,223,255,255,\xbao'
08/16/2022 05:57:41 PM daemon.py[line:1030]INFO - sensors state-->['143', '8', '255', '223', '255', '255']
08/16/2022 05:57:41 PM daemon.py[line:1033]INFO - [16]
08/16/2022 05:57:41 PM daemon.py[line:111]DEBUG - send_json -> {'rep': {'device': 'm3', 'result': 'success'}}
08/16/2022 05:57:42 PM daemon.py[line:93]INFO - gui msg: {'req': {'device': 'm3', 'command': 'lock', 'lock_id': '209'}}
08/16/2022 05:57:42 PM daemon.py[line:775]INFO - para_str-->17,
08/16/2022 05:57:42 PM daemon.py[line:1008]INFO - b'ld\x01\x11j`'
08/16/2022 05:57:42 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 05:57:42 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 05:57:42 PM rcomm.py[line:143]INFO - data -> b'ldok\x92\x97'
08/16/2022 05:57:42 PM daemon.py[line:1025]INFO - b'li\xc8\xb3'
08/16/2022 05:57:42 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 05:57:42 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 05:57:42 PM rcomm.py[line:143]INFO - data -> b'li,143,8,254,223,255,255,\xdb\x14'
08/16/2022 05:57:42 PM daemon.py[line:1030]INFO - sensors state-->['143', '8', '254', '223', '255', '255']
08/16/2022 05:57:42 PM daemon.py[line:1033]INFO - [17]
08/16/2022 05:57:42 PM daemon.py[line:111]DEBUG - send_json -> {'rep': {'device': 'm3', 'result': 'success'}}
08/16/2022 05:57:59 PM daemon.py[line:93]INFO - gui msg: {'req': {'device': 'm3', 'command': 'lock', 'lock_id': '201'}}
08/16/2022 05:57:59 PM daemon.py[line:775]INFO - para_str-->8,
08/16/2022 05:57:59 PM daemon.py[line:1008]INFO - b'ld\x01\x08r\xe3'
08/16/2022 05:57:59 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 05:57:59 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 05:57:59 PM rcomm.py[line:143]INFO - data -> b'ldok\x92\x97'
08/16/2022 05:57:59 PM daemon.py[line:1025]INFO - b'li\xc8\xb3'
08/16/2022 05:57:59 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 05:57:59 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 05:57:59 PM rcomm.py[line:143]INFO - data -> b'li,143,15,254,223,255,255,Q\xdf'
08/16/2022 05:57:59 PM daemon.py[line:1030]INFO - sensors state-->['143', '15', '254', '223', '255', '255']
08/16/2022 05:57:59 PM daemon.py[line:1033]INFO - [8]
08/16/2022 05:57:59 PM daemon.py[line:1025]INFO - b'li\xc8\xb3'
08/16/2022 05:57:59 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 05:57:59 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 05:57:59 PM rcomm.py[line:143]INFO - data -> b'li,143,15,254,223,255,255,Q\xdf'
08/16/2022 05:57:59 PM daemon.py[line:1030]INFO - sensors state-->['143', '15', '254', '223', '255', '255']
08/16/2022 05:57:59 PM daemon.py[line:1033]INFO - [8]
08/16/2022 05:57:59 PM daemon.py[line:1025]INFO - b'li\xc8\xb3'
08/16/2022 05:57:59 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 05:57:59 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 05:58:00 PM rcomm.py[line:143]INFO - data -> b'li,143,15,254,223,255,255,Q\xdf'
08/16/2022 05:58:00 PM daemon.py[line:1030]INFO - sensors state-->['143', '15', '254', '223', '255', '255']
08/16/2022 05:58:00 PM daemon.py[line:1033]INFO - [8]
08/16/2022 05:58:00 PM daemon.py[line:111]DEBUG - send_json -> {'rep': {'device': 'm3', 'result': 'error', 'meta': {'8': 'CLOSE'}}}
08/16/2022 05:58:12 PM daemon.py[line:93]INFO - gui msg: {'req': {'device': 'm3', 'command': 'lock', 'lock_id': '205'}}
08/16/2022 05:58:12 PM daemon.py[line:775]INFO - para_str-->12,13,
08/16/2022 05:58:12 PM daemon.py[line:1008]INFO - b'ld\x02\x0c\rt\xfb'
08/16/2022 05:58:12 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 05:58:12 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 05:58:12 PM rcomm.py[line:143]INFO - data -> b'ldok\x92\x97'
08/16/2022 05:58:12 PM daemon.py[line:1025]INFO - b'li\xc8\xb3'
08/16/2022 05:58:12 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 05:58:12 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 05:58:12 PM rcomm.py[line:143]INFO - data -> b'li,143,15,254,223,255,255,Q\xdf'
08/16/2022 05:58:12 PM daemon.py[line:1030]INFO - sensors state-->['143', '15', '254', '223', '255', '255']
08/16/2022 05:58:12 PM daemon.py[line:1033]INFO - [12, 13]
08/16/2022 05:58:13 PM daemon.py[line:1025]INFO - b'li\xc8\xb3'
08/16/2022 05:58:13 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 05:58:13 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 05:58:13 PM rcomm.py[line:143]INFO - data -> b'li,143,15,254,223,255,255,Q\xdf'
08/16/2022 05:58:13 PM daemon.py[line:1030]INFO - sensors state-->['143', '15', '254', '223', '255', '255']
08/16/2022 05:58:13 PM daemon.py[line:1033]INFO - [12, 13]
08/16/2022 05:58:13 PM daemon.py[line:1025]INFO - b'li\xc8\xb3'
08/16/2022 05:58:13 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 05:58:13 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 05:58:13 PM rcomm.py[line:143]INFO - data -> b'li,143,15,254,223,255,255,Q\xdf'
08/16/2022 05:58:13 PM daemon.py[line:1030]INFO - sensors state-->['143', '15', '254', '223', '255', '255']
08/16/2022 05:58:13 PM daemon.py[line:1033]INFO - [12, 13]
08/16/2022 05:58:13 PM daemon.py[line:111]DEBUG - send_json -> {'rep': {'device': 'm3', 'result': 'error', 'meta': {'13': 'OPEN', '12': 'CLOSE'}}}
08/16/2022 05:58:21 PM daemon.py[line:93]INFO - gui msg: {'req': {'device': 'm3', 'command': 'lock', 'lock_id': '205'}}
08/16/2022 05:58:21 PM daemon.py[line:775]INFO - para_str-->12,13,
08/16/2022 05:58:21 PM daemon.py[line:1008]INFO - b'ld\x02\x0c\rt\xfb'
08/16/2022 05:58:21 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 05:58:21 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 05:58:21 PM rcomm.py[line:143]INFO - data -> b'ldok\x92\x97'
08/16/2022 05:58:21 PM daemon.py[line:1025]INFO - b'li\xc8\xb3'
08/16/2022 05:58:21 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 05:58:21 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 05:58:21 PM rcomm.py[line:143]INFO - data -> b'li,143,15,254,223,255,255,Q\xdf'
08/16/2022 05:58:21 PM daemon.py[line:1030]INFO - sensors state-->['143', '15', '254', '223', '255', '255']
08/16/2022 05:58:21 PM daemon.py[line:1033]INFO - [12, 13]
08/16/2022 05:58:21 PM daemon.py[line:1025]INFO - b'li\xc8\xb3'
08/16/2022 05:58:21 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 05:58:21 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 05:58:21 PM rcomm.py[line:143]INFO - data -> b'li,143,15,254,223,255,255,Q\xdf'
08/16/2022 05:58:21 PM daemon.py[line:1030]INFO - sensors state-->['143', '15', '254', '223', '255', '255']
08/16/2022 05:58:21 PM daemon.py[line:1033]INFO - [12, 13]
08/16/2022 05:58:21 PM daemon.py[line:1025]INFO - b'li\xc8\xb3'
08/16/2022 05:58:21 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 05:58:21 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 05:58:21 PM rcomm.py[line:143]INFO - data -> b'li,143,15,254,223,255,255,Q\xdf'
08/16/2022 05:58:21 PM daemon.py[line:1030]INFO - sensors state-->['143', '15', '254', '223', '255', '255']
08/16/2022 05:58:21 PM daemon.py[line:1033]INFO - [12, 13]
08/16/2022 05:58:21 PM daemon.py[line:111]DEBUG - send_json -> {'rep': {'device': 'm3', 'result': 'error', 'meta': {'13': 'OPEN', '12': 'CLOSE'}}}
08/16/2022 05:58:23 PM daemon.py[line:93]INFO - gui msg: {'req': {'device': 'm3', 'command': 'lock', 'lock_id': '205'}}
08/16/2022 05:58:23 PM daemon.py[line:775]INFO - para_str-->12,13,
08/16/2022 05:58:23 PM daemon.py[line:1008]INFO - b'ld\x02\x0c\rt\xfb'
08/16/2022 05:58:23 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 05:58:23 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 05:58:23 PM rcomm.py[line:143]INFO - data -> b'ldok\x92\x97'
08/16/2022 05:58:23 PM daemon.py[line:1025]INFO - b'li\xc8\xb3'
08/16/2022 05:58:23 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 05:58:23 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 05:58:23 PM rcomm.py[line:143]INFO - data -> b'li,143,15,254,223,255,255,Q\xdf'
08/16/2022 05:58:23 PM daemon.py[line:1030]INFO - sensors state-->['143', '15', '254', '223', '255', '255']
08/16/2022 05:58:23 PM daemon.py[line:1033]INFO - [12, 13]
08/16/2022 05:58:23 PM daemon.py[line:1025]INFO - b'li\xc8\xb3'
08/16/2022 05:58:23 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 05:58:23 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 05:58:23 PM rcomm.py[line:143]INFO - data -> b'li,143,15,254,223,255,255,Q\xdf'
08/16/2022 05:58:23 PM daemon.py[line:1030]INFO - sensors state-->['143', '15', '254', '223', '255', '255']
08/16/2022 05:58:23 PM daemon.py[line:1033]INFO - [12, 13]
08/16/2022 05:58:23 PM daemon.py[line:1025]INFO - b'li\xc8\xb3'
08/16/2022 05:58:23 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 05:58:23 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 05:58:23 PM rcomm.py[line:143]INFO - data -> b'li,143,15,254,223,255,255,Q\xdf'
08/16/2022 05:58:23 PM daemon.py[line:1030]INFO - sensors state-->['143', '15', '254', '223', '255', '255']
08/16/2022 05:58:23 PM daemon.py[line:1033]INFO - [12, 13]
08/16/2022 05:58:23 PM daemon.py[line:111]DEBUG - send_json -> {'rep': {'device': 'm3', 'result': 'error', 'meta': {'13': 'OPEN', '12': 'CLOSE'}}}
08/16/2022 05:58:26 PM daemon.py[line:93]INFO - gui msg: {'req': {'device': 'm3', 'command': 'lock', 'lock_id': '205'}}
08/16/2022 05:58:26 PM daemon.py[line:775]INFO - para_str-->12,13,
08/16/2022 05:58:26 PM daemon.py[line:1008]INFO - b'ld\x02\x0c\rt\xfb'
08/16/2022 05:58:26 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 05:58:26 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 05:58:26 PM rcomm.py[line:143]INFO - data -> b'ldok\x92\x97'
08/16/2022 05:58:26 PM daemon.py[line:1025]INFO - b'li\xc8\xb3'
08/16/2022 05:58:26 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 05:58:26 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 05:58:26 PM rcomm.py[line:143]INFO - data -> b'li,143,15,254,223,255,255,Q\xdf'
08/16/2022 05:58:26 PM daemon.py[line:1030]INFO - sensors state-->['143', '15', '254', '223', '255', '255']
08/16/2022 05:58:26 PM daemon.py[line:1033]INFO - [12, 13]
08/16/2022 05:58:26 PM daemon.py[line:1025]INFO - b'li\xc8\xb3'
08/16/2022 05:58:26 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 05:58:26 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 05:58:26 PM rcomm.py[line:143]INFO - data -> b'li,143,15,254,223,255,255,Q\xdf'
08/16/2022 05:58:26 PM daemon.py[line:1030]INFO - sensors state-->['143', '15', '254', '223', '255', '255']
08/16/2022 05:58:26 PM daemon.py[line:1033]INFO - [12, 13]
08/16/2022 05:58:26 PM daemon.py[line:1025]INFO - b'li\xc8\xb3'
08/16/2022 05:58:26 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 05:58:26 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 05:58:26 PM rcomm.py[line:143]INFO - data -> b'li,143,15,254,223,255,255,Q\xdf'
08/16/2022 05:58:26 PM daemon.py[line:1030]INFO - sensors state-->['143', '15', '254', '223', '255', '255']
08/16/2022 05:58:26 PM daemon.py[line:1033]INFO - [12, 13]
08/16/2022 05:58:26 PM daemon.py[line:111]DEBUG - send_json -> {'rep': {'device': 'm3', 'result': 'error', 'meta': {'13': 'OPEN', '12': 'CLOSE'}}}
08/16/2022 05:58:31 PM daemon.py[line:93]INFO - gui msg: {'req': {'device': 'm3', 'command': 'lock', 'lock_id': '205'}}
08/16/2022 05:58:31 PM daemon.py[line:775]INFO - para_str-->12,13,
08/16/2022 05:58:31 PM daemon.py[line:1008]INFO - b'ld\x02\x0c\rt\xfb'
08/16/2022 05:58:31 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 05:58:31 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 05:58:31 PM rcomm.py[line:143]INFO - data -> b'ldok\x92\x97'
08/16/2022 05:58:31 PM daemon.py[line:1025]INFO - b'li\xc8\xb3'
08/16/2022 05:58:31 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 05:58:31 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 05:58:31 PM rcomm.py[line:143]INFO - data -> b'li,143,15,254,223,255,255,Q\xdf'
08/16/2022 05:58:31 PM daemon.py[line:1030]INFO - sensors state-->['143', '15', '254', '223', '255', '255']
08/16/2022 05:58:31 PM daemon.py[line:1033]INFO - [12, 13]
08/16/2022 05:58:31 PM daemon.py[line:1025]INFO - b'li\xc8\xb3'
08/16/2022 05:58:31 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 05:58:31 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 05:58:31 PM rcomm.py[line:143]INFO - data -> b'li,143,15,254,223,255,255,Q\xdf'
08/16/2022 05:58:31 PM daemon.py[line:1030]INFO - sensors state-->['143', '15', '254', '223', '255', '255']
08/16/2022 05:58:31 PM daemon.py[line:1033]INFO - [12, 13]
08/16/2022 05:58:31 PM daemon.py[line:1025]INFO - b'li\xc8\xb3'
08/16/2022 05:58:31 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 05:58:31 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 05:58:31 PM rcomm.py[line:143]INFO - data -> b'li,143,15,254,223,255,255,Q\xdf'
08/16/2022 05:58:31 PM daemon.py[line:1030]INFO - sensors state-->['143', '15', '254', '223', '255', '255']
08/16/2022 05:58:31 PM daemon.py[line:1033]INFO - [12, 13]
08/16/2022 05:58:31 PM daemon.py[line:111]DEBUG - send_json -> {'rep': {'device': 'm3', 'result': 'error', 'meta': {'13': 'OPEN', '12': 'CLOSE'}}}
08/16/2022 05:58:33 PM daemon.py[line:93]INFO - gui msg: {'req': {'device': 'm3', 'command': 'lock', 'lock_id': '205'}}
08/16/2022 05:58:33 PM daemon.py[line:775]INFO - para_str-->12,13,
08/16/2022 05:58:33 PM daemon.py[line:1008]INFO - b'ld\x02\x0c\rt\xfb'
08/16/2022 05:58:33 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 05:58:33 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 05:58:33 PM rcomm.py[line:143]INFO - data -> b'ldok\x92\x97'
08/16/2022 05:58:33 PM daemon.py[line:1025]INFO - b'li\xc8\xb3'
08/16/2022 05:58:33 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 05:58:33 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 05:58:33 PM rcomm.py[line:143]INFO - data -> b'li,143,15,254,223,255,255,Q\xdf'
08/16/2022 05:58:33 PM daemon.py[line:1030]INFO - sensors state-->['143', '15', '254', '223', '255', '255']
08/16/2022 05:58:33 PM daemon.py[line:1033]INFO - [12, 13]
08/16/2022 05:58:33 PM daemon.py[line:1025]INFO - b'li\xc8\xb3'
08/16/2022 05:58:33 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 05:58:33 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 05:58:33 PM rcomm.py[line:143]INFO - data -> b'li,143,15,254,223,255,255,Q\xdf'
08/16/2022 05:58:33 PM daemon.py[line:1030]INFO - sensors state-->['143', '15', '254', '223', '255', '255']
08/16/2022 05:58:33 PM daemon.py[line:1033]INFO - [12, 13]
08/16/2022 05:58:33 PM daemon.py[line:1025]INFO - b'li\xc8\xb3'
08/16/2022 05:58:33 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 05:58:33 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 05:58:33 PM rcomm.py[line:143]INFO - data -> b'li,143,15,254,223,255,255,Q\xdf'
08/16/2022 05:58:33 PM daemon.py[line:1030]INFO - sensors state-->['143', '15', '254', '223', '255', '255']
08/16/2022 05:58:33 PM daemon.py[line:1033]INFO - [12, 13]
08/16/2022 05:58:34 PM daemon.py[line:111]DEBUG - send_json -> {'rep': {'device': 'm3', 'result': 'error', 'meta': {'13': 'OPEN', '12': 'CLOSE'}}}
08/16/2022 05:58:34 PM daemon.py[line:93]INFO - gui msg: {'req': {'device': 'm3', 'command': 'lock', 'lock_id': '205'}}
08/16/2022 05:58:34 PM daemon.py[line:775]INFO - para_str-->12,13,
08/16/2022 05:58:34 PM daemon.py[line:1008]INFO - b'ld\x02\x0c\rt\xfb'
08/16/2022 05:58:34 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 05:58:34 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 05:58:34 PM rcomm.py[line:143]INFO - data -> b'ldok\x92\x97'
08/16/2022 05:58:34 PM daemon.py[line:1025]INFO - b'li\xc8\xb3'
08/16/2022 05:58:34 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 05:58:34 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 05:58:34 PM rcomm.py[line:143]INFO - data -> b'li,143,15,254,223,255,255,Q\xdf'
08/16/2022 05:58:34 PM daemon.py[line:1030]INFO - sensors state-->['143', '15', '254', '223', '255', '255']
08/16/2022 05:58:34 PM daemon.py[line:1033]INFO - [12, 13]
08/16/2022 05:58:34 PM daemon.py[line:1025]INFO - b'li\xc8\xb3'
08/16/2022 05:58:34 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 05:58:34 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 05:58:34 PM rcomm.py[line:143]INFO - data -> b'li,143,15,254,223,255,255,Q\xdf'
08/16/2022 05:58:34 PM daemon.py[line:1030]INFO - sensors state-->['143', '15', '254', '223', '255', '255']
08/16/2022 05:58:34 PM daemon.py[line:1033]INFO - [12, 13]
08/16/2022 05:58:35 PM daemon.py[line:1025]INFO - b'li\xc8\xb3'
08/16/2022 05:58:35 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 05:58:35 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 05:58:35 PM rcomm.py[line:143]INFO - data -> b'li,143,15,254,223,255,255,Q\xdf'
08/16/2022 05:58:35 PM daemon.py[line:1030]INFO - sensors state-->['143', '15', '254', '223', '255', '255']
08/16/2022 05:58:35 PM daemon.py[line:1033]INFO - [12, 13]
08/16/2022 05:58:35 PM daemon.py[line:111]DEBUG - send_json -> {'rep': {'device': 'm3', 'result': 'error', 'meta': {'13': 'OPEN', '12': 'CLOSE'}}}
08/16/2022 05:58:35 PM daemon.py[line:93]INFO - gui msg: {'req': {'device': 'm3', 'command': 'lock', 'lock_id': '205'}}
08/16/2022 05:58:35 PM daemon.py[line:775]INFO - para_str-->12,13,
08/16/2022 05:58:35 PM daemon.py[line:1008]INFO - b'ld\x02\x0c\rt\xfb'
08/16/2022 05:58:35 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 05:58:35 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 05:58:35 PM rcomm.py[line:143]INFO - data -> b'ldok\x92\x97'
08/16/2022 05:58:35 PM daemon.py[line:1025]INFO - b'li\xc8\xb3'
08/16/2022 05:58:35 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 05:58:35 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 05:58:35 PM rcomm.py[line:143]INFO - data -> b'li,143,15,254,223,255,255,Q\xdf'
08/16/2022 05:58:35 PM daemon.py[line:1030]INFO - sensors state-->['143', '15', '254', '223', '255', '255']
08/16/2022 05:58:35 PM daemon.py[line:1033]INFO - [12, 13]
08/16/2022 05:58:35 PM daemon.py[line:1025]INFO - b'li\xc8\xb3'
08/16/2022 05:58:35 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 05:58:35 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 05:58:36 PM rcomm.py[line:143]INFO - data -> b'li,143,15,254,223,255,255,Q\xdf'
08/16/2022 05:58:36 PM daemon.py[line:1030]INFO - sensors state-->['143', '15', '254', '223', '255', '255']
08/16/2022 05:58:36 PM daemon.py[line:1033]INFO - [12, 13]
08/16/2022 05:58:36 PM daemon.py[line:1025]INFO - b'li\xc8\xb3'
08/16/2022 05:58:36 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 05:58:36 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 05:58:36 PM rcomm.py[line:143]INFO - data -> b'li,143,15,254,223,255,255,Q\xdf'
08/16/2022 05:58:36 PM daemon.py[line:1030]INFO - sensors state-->['143', '15', '254', '223', '255', '255']
08/16/2022 05:58:36 PM daemon.py[line:1033]INFO - [12, 13]
08/16/2022 05:58:36 PM daemon.py[line:111]DEBUG - send_json -> {'rep': {'device': 'm3', 'result': 'error', 'meta': {'13': 'OPEN', '12': 'CLOSE'}}}
08/16/2022 05:58:37 PM daemon.py[line:93]INFO - gui msg: {'req': {'device': 'm3', 'command': 'lock', 'lock_id': '205'}}
08/16/2022 05:58:37 PM daemon.py[line:775]INFO - para_str-->12,13,
08/16/2022 05:58:37 PM daemon.py[line:1008]INFO - b'ld\x02\x0c\rt\xfb'
08/16/2022 05:58:37 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 05:58:37 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 05:58:37 PM rcomm.py[line:143]INFO - data -> b'ldok\x92\x97'
08/16/2022 05:58:37 PM daemon.py[line:1025]INFO - b'li\xc8\xb3'
08/16/2022 05:58:37 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 05:58:37 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 05:58:37 PM rcomm.py[line:143]INFO - data -> b'li,143,15,254,223,255,255,Q\xdf'
08/16/2022 05:58:37 PM daemon.py[line:1030]INFO - sensors state-->['143', '15', '254', '223', '255', '255']
08/16/2022 05:58:37 PM daemon.py[line:1033]INFO - [12, 13]
08/16/2022 05:58:37 PM daemon.py[line:1025]INFO - b'li\xc8\xb3'
08/16/2022 05:58:37 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 05:58:37 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 05:58:37 PM rcomm.py[line:143]INFO - data -> b'li,143,15,254,223,255,255,Q\xdf'
08/16/2022 05:58:37 PM daemon.py[line:1030]INFO - sensors state-->['143', '15', '254', '223', '255', '255']
08/16/2022 05:58:37 PM daemon.py[line:1033]INFO - [12, 13]
08/16/2022 05:58:37 PM daemon.py[line:1025]INFO - b'li\xc8\xb3'
08/16/2022 05:58:37 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 05:58:37 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 05:58:37 PM rcomm.py[line:143]INFO - data -> b'li,143,15,254,223,255,255,Q\xdf'
08/16/2022 05:58:37 PM daemon.py[line:1030]INFO - sensors state-->['143', '15', '254', '223', '255', '255']
08/16/2022 05:58:37 PM daemon.py[line:1033]INFO - [12, 13]
08/16/2022 05:58:37 PM daemon.py[line:111]DEBUG - send_json -> {'rep': {'device': 'm3', 'result': 'error', 'meta': {'13': 'OPEN', '12': 'CLOSE'}}}
08/16/2022 05:58:38 PM daemon.py[line:93]INFO - gui msg: {'req': {'device': 'm3', 'command': 'lock', 'lock_id': '205'}}
08/16/2022 05:58:38 PM daemon.py[line:775]INFO - para_str-->12,13,
08/16/2022 05:58:38 PM daemon.py[line:1008]INFO - b'ld\x02\x0c\rt\xfb'
08/16/2022 05:58:38 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 05:58:38 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 05:58:38 PM rcomm.py[line:143]INFO - data -> b'ldok\x92\x97'
08/16/2022 05:58:38 PM daemon.py[line:1025]INFO - b'li\xc8\xb3'
08/16/2022 05:58:38 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 05:58:38 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 05:58:38 PM rcomm.py[line:143]INFO - data -> b'li,143,15,254,223,255,255,Q\xdf'
08/16/2022 05:58:38 PM daemon.py[line:1030]INFO - sensors state-->['143', '15', '254', '223', '255', '255']
08/16/2022 05:58:38 PM daemon.py[line:1033]INFO - [12, 13]
08/16/2022 05:58:38 PM daemon.py[line:1025]INFO - b'li\xc8\xb3'
08/16/2022 05:58:38 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 05:58:38 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 05:58:39 PM rcomm.py[line:143]INFO - data -> b'li,143,31,254,223,255,255,\xe9\x83'
08/16/2022 05:58:39 PM daemon.py[line:1030]INFO - sensors state-->['143', '31', '254', '223', '255', '255']
08/16/2022 05:58:39 PM daemon.py[line:1033]INFO - [12, 13]
08/16/2022 05:58:39 PM daemon.py[line:1025]INFO - b'li\xc8\xb3'
08/16/2022 05:58:39 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 05:58:39 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 05:58:39 PM rcomm.py[line:143]INFO - data -> b'li,143,31,254,223,255,255,\xe9\x83'
08/16/2022 05:58:39 PM daemon.py[line:1030]INFO - sensors state-->['143', '31', '254', '223', '255', '255']
08/16/2022 05:58:39 PM daemon.py[line:1033]INFO - [12, 13]
08/16/2022 05:58:39 PM daemon.py[line:111]DEBUG - send_json -> {'rep': {'device': 'm3', 'result': 'error', 'meta': {'13': 'CLOSE', '12': 'CLOSE'}}}
08/16/2022 05:58:43 PM daemon.py[line:93]INFO - gui msg: {'req': {'device': 'm3', 'command': 'lock', 'lock_id': '205'}}
08/16/2022 05:58:43 PM daemon.py[line:775]INFO - para_str-->12,13,
08/16/2022 05:58:43 PM daemon.py[line:1008]INFO - b'ld\x02\x0c\rt\xfb'
08/16/2022 05:58:43 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 05:58:43 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 05:58:43 PM rcomm.py[line:143]INFO - data -> b'ldok\x92\x97'
08/16/2022 05:58:43 PM daemon.py[line:1025]INFO - b'li\xc8\xb3'
08/16/2022 05:58:43 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 05:58:43 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 05:58:43 PM rcomm.py[line:143]INFO - data -> b'li,143,15,254,223,255,255,Q\xdf'
08/16/2022 05:58:43 PM daemon.py[line:1030]INFO - sensors state-->['143', '15', '254', '223', '255', '255']
08/16/2022 05:58:43 PM daemon.py[line:1033]INFO - [12, 13]
08/16/2022 05:58:43 PM daemon.py[line:1025]INFO - b'li\xc8\xb3'
08/16/2022 05:58:43 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 05:58:43 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 05:58:43 PM rcomm.py[line:143]INFO - data -> b'li,143,15,254,223,255,255,Q\xdf'
08/16/2022 05:58:43 PM daemon.py[line:1030]INFO - sensors state-->['143', '15', '254', '223', '255', '255']
08/16/2022 05:58:43 PM daemon.py[line:1033]INFO - [12, 13]
08/16/2022 05:58:44 PM daemon.py[line:1025]INFO - b'li\xc8\xb3'
08/16/2022 05:58:44 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 05:58:44 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 05:58:44 PM rcomm.py[line:143]INFO - data -> b'li,143,15,254,223,255,255,Q\xdf'
08/16/2022 05:58:44 PM daemon.py[line:1030]INFO - sensors state-->['143', '15', '254', '223', '255', '255']
08/16/2022 05:58:44 PM daemon.py[line:1033]INFO - [12, 13]
08/16/2022 05:58:44 PM daemon.py[line:111]DEBUG - send_json -> {'rep': {'device': 'm3', 'result': 'error', 'meta': {'13': 'OPEN', '12': 'CLOSE'}}}
08/16/2022 05:58:45 PM daemon.py[line:93]INFO - gui msg: {'req': {'device': 'm3', 'command': 'lock', 'lock_id': '205'}}
08/16/2022 05:58:45 PM daemon.py[line:775]INFO - para_str-->12,13,
08/16/2022 05:58:45 PM daemon.py[line:1008]INFO - b'ld\x02\x0c\rt\xfb'
08/16/2022 05:58:45 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 05:58:45 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 05:58:45 PM rcomm.py[line:143]INFO - data -> b'ldok\x92\x97'
08/16/2022 05:58:45 PM daemon.py[line:1025]INFO - b'li\xc8\xb3'
08/16/2022 05:58:45 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 05:58:45 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 05:58:45 PM rcomm.py[line:143]INFO - data -> b'li,143,15,254,223,255,255,Q\xdf'
08/16/2022 05:58:45 PM daemon.py[line:1030]INFO - sensors state-->['143', '15', '254', '223', '255', '255']
08/16/2022 05:58:45 PM daemon.py[line:1033]INFO - [12, 13]
08/16/2022 05:58:45 PM daemon.py[line:1025]INFO - b'li\xc8\xb3'
08/16/2022 05:58:45 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 05:58:45 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 05:58:45 PM rcomm.py[line:143]INFO - data -> b'li,143,15,254,223,255,255,Q\xdf'
08/16/2022 05:58:45 PM daemon.py[line:1030]INFO - sensors state-->['143', '15', '254', '223', '255', '255']
08/16/2022 05:58:45 PM daemon.py[line:1033]INFO - [12, 13]
08/16/2022 05:58:45 PM daemon.py[line:1025]INFO - b'li\xc8\xb3'
08/16/2022 05:58:45 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 05:58:45 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 05:58:45 PM rcomm.py[line:143]INFO - data -> b'li,143,15,254,223,255,255,Q\xdf'
08/16/2022 05:58:45 PM daemon.py[line:1030]INFO - sensors state-->['143', '15', '254', '223', '255', '255']
08/16/2022 05:58:45 PM daemon.py[line:1033]INFO - [12, 13]
08/16/2022 05:58:45 PM daemon.py[line:111]DEBUG - send_json -> {'rep': {'device': 'm3', 'result': 'error', 'meta': {'13': 'OPEN', '12': 'CLOSE'}}}
08/16/2022 05:58:46 PM daemon.py[line:93]INFO - gui msg: {'req': {'device': 'm3', 'command': 'lock', 'lock_id': '205'}}
08/16/2022 05:58:46 PM daemon.py[line:775]INFO - para_str-->12,13,
08/16/2022 05:58:46 PM daemon.py[line:1008]INFO - b'ld\x02\x0c\rt\xfb'
08/16/2022 05:58:46 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 05:58:46 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 05:58:46 PM rcomm.py[line:143]INFO - data -> b'ldok\x92\x97'
08/16/2022 05:58:46 PM daemon.py[line:1025]INFO - b'li\xc8\xb3'
08/16/2022 05:58:46 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 05:58:46 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 05:58:46 PM rcomm.py[line:143]INFO - data -> b'li,143,15,254,223,255,255,Q\xdf'
08/16/2022 05:58:46 PM daemon.py[line:1030]INFO - sensors state-->['143', '15', '254', '223', '255', '255']
08/16/2022 05:58:46 PM daemon.py[line:1033]INFO - [12, 13]
08/16/2022 05:58:46 PM daemon.py[line:1025]INFO - b'li\xc8\xb3'
08/16/2022 05:58:46 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 05:58:46 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 05:58:47 PM rcomm.py[line:143]INFO - data -> b'li,143,15,254,223,255,255,Q\xdf'
08/16/2022 05:58:47 PM daemon.py[line:1030]INFO - sensors state-->['143', '15', '254', '223', '255', '255']
08/16/2022 05:58:47 PM daemon.py[line:1033]INFO - [12, 13]
08/16/2022 05:58:47 PM daemon.py[line:1025]INFO - b'li\xc8\xb3'
08/16/2022 05:58:47 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 05:58:47 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 05:58:47 PM rcomm.py[line:143]INFO - data -> b'li,143,15,254,223,255,255,Q\xdf'
08/16/2022 05:58:47 PM daemon.py[line:1030]INFO - sensors state-->['143', '15', '254', '223', '255', '255']
08/16/2022 05:58:47 PM daemon.py[line:1033]INFO - [12, 13]
08/16/2022 05:58:47 PM daemon.py[line:111]DEBUG - send_json -> {'rep': {'device': 'm3', 'result': 'error', 'meta': {'13': 'OPEN', '12': 'CLOSE'}}}
08/16/2022 05:58:47 PM daemon.py[line:93]INFO - gui msg: {'req': {'device': 'm3', 'command': 'lock', 'lock_id': '205'}}
08/16/2022 05:58:47 PM daemon.py[line:775]INFO - para_str-->12,13,
08/16/2022 05:58:47 PM daemon.py[line:1008]INFO - b'ld\x02\x0c\rt\xfb'
08/16/2022 05:58:47 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 05:58:47 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 05:58:47 PM rcomm.py[line:143]INFO - data -> b'ldok\x92\x97'
08/16/2022 05:58:48 PM daemon.py[line:1025]INFO - b'li\xc8\xb3'
08/16/2022 05:58:48 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 05:58:48 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 05:58:48 PM rcomm.py[line:143]INFO - data -> b'li,143,15,254,223,255,255,Q\xdf'
08/16/2022 05:58:48 PM daemon.py[line:1030]INFO - sensors state-->['143', '15', '254', '223', '255', '255']
08/16/2022 05:58:48 PM daemon.py[line:1033]INFO - [12, 13]
08/16/2022 05:58:48 PM daemon.py[line:1025]INFO - b'li\xc8\xb3'
08/16/2022 05:58:48 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 05:58:48 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 05:58:48 PM rcomm.py[line:143]INFO - data -> b'li,143,15,254,223,255,255,Q\xdf'
08/16/2022 05:58:48 PM daemon.py[line:1030]INFO - sensors state-->['143', '15', '254', '223', '255', '255']
08/16/2022 05:58:48 PM daemon.py[line:1033]INFO - [12, 13]
08/16/2022 05:58:48 PM daemon.py[line:1025]INFO - b'li\xc8\xb3'
08/16/2022 05:58:48 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 05:58:48 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 05:58:48 PM rcomm.py[line:143]INFO - data -> b'li,143,15,254,223,255,255,Q\xdf'
08/16/2022 05:58:48 PM daemon.py[line:1030]INFO - sensors state-->['143', '15', '254', '223', '255', '255']
08/16/2022 05:58:48 PM daemon.py[line:1033]INFO - [12, 13]
08/16/2022 05:58:48 PM daemon.py[line:111]DEBUG - send_json -> {'rep': {'device': 'm3', 'result': 'error', 'meta': {'13': 'OPEN', '12': 'CLOSE'}}}
08/16/2022 05:58:51 PM daemon.py[line:93]INFO - gui msg: {'req': {'device': 'm3', 'command': 'lock', 'lock_id': '201'}}
08/16/2022 05:58:51 PM daemon.py[line:775]INFO - para_str-->8,
08/16/2022 05:58:51 PM daemon.py[line:1008]INFO - b'ld\x01\x08r\xe3'
08/16/2022 05:58:51 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 05:58:51 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 05:58:51 PM rcomm.py[line:143]INFO - data -> b'ldok\x92\x97'
08/16/2022 05:58:51 PM daemon.py[line:1025]INFO - b'li\xc8\xb3'
08/16/2022 05:58:51 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 05:58:51 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 05:58:51 PM rcomm.py[line:143]INFO - data -> b'li,143,15,254,223,255,255,Q\xdf'
08/16/2022 05:58:51 PM daemon.py[line:1030]INFO - sensors state-->['143', '15', '254', '223', '255', '255']
08/16/2022 05:58:51 PM daemon.py[line:1033]INFO - [8]
08/16/2022 05:58:51 PM daemon.py[line:1025]INFO - b'li\xc8\xb3'
08/16/2022 05:58:51 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 05:58:51 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 05:58:52 PM rcomm.py[line:143]INFO - data -> b'li,143,15,254,223,255,255,Q\xdf'
08/16/2022 05:58:52 PM daemon.py[line:1030]INFO - sensors state-->['143', '15', '254', '223', '255', '255']
08/16/2022 05:58:52 PM daemon.py[line:1033]INFO - [8]
08/16/2022 05:58:52 PM daemon.py[line:1025]INFO - b'li\xc8\xb3'
08/16/2022 05:58:52 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 05:58:52 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 05:58:52 PM rcomm.py[line:143]INFO - data -> b'li,143,15,254,223,255,255,Q\xdf'
08/16/2022 05:58:52 PM daemon.py[line:1030]INFO - sensors state-->['143', '15', '254', '223', '255', '255']
08/16/2022 05:58:52 PM daemon.py[line:1033]INFO - [8]
08/16/2022 05:58:52 PM daemon.py[line:111]DEBUG - send_json -> {'rep': {'device': 'm3', 'result': 'error', 'meta': {'8': 'CLOSE'}}}
08/16/2022 05:58:52 PM daemon.py[line:93]INFO - gui msg: {'req': {'device': 'm3', 'command': 'lock', 'lock_id': '201'}}
08/16/2022 05:58:52 PM daemon.py[line:775]INFO - para_str-->8,
08/16/2022 05:58:52 PM daemon.py[line:1008]INFO - b'ld\x01\x08r\xe3'
08/16/2022 05:58:52 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 05:58:52 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 05:58:53 PM rcomm.py[line:143]INFO - data -> b'ldok\x92\x97'
08/16/2022 05:58:53 PM daemon.py[line:1025]INFO - b'li\xc8\xb3'
08/16/2022 05:58:53 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 05:58:53 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 05:58:53 PM rcomm.py[line:143]INFO - data -> b'li,143,15,254,223,255,255,Q\xdf'
08/16/2022 05:58:53 PM daemon.py[line:1030]INFO - sensors state-->['143', '15', '254', '223', '255', '255']
08/16/2022 05:58:53 PM daemon.py[line:1033]INFO - [8]
08/16/2022 05:58:53 PM daemon.py[line:1025]INFO - b'li\xc8\xb3'
08/16/2022 05:58:53 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 05:58:53 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 05:58:53 PM rcomm.py[line:143]INFO - data -> b'li,143,15,254,223,255,255,Q\xdf'
08/16/2022 05:58:53 PM daemon.py[line:1030]INFO - sensors state-->['143', '15', '254', '223', '255', '255']
08/16/2022 05:58:53 PM daemon.py[line:1033]INFO - [8]
08/16/2022 05:58:53 PM daemon.py[line:1025]INFO - b'li\xc8\xb3'
08/16/2022 05:58:53 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 05:58:53 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 05:58:53 PM rcomm.py[line:143]INFO - data -> b'li,143,15,254,223,255,255,Q\xdf'
08/16/2022 05:58:53 PM daemon.py[line:1030]INFO - sensors state-->['143', '15', '254', '223', '255', '255']
08/16/2022 05:58:53 PM daemon.py[line:1033]INFO - [8]
08/16/2022 05:58:53 PM daemon.py[line:111]DEBUG - send_json -> {'rep': {'device': 'm3', 'result': 'error', 'meta': {'8': 'CLOSE'}}}
08/16/2022 05:58:54 PM daemon.py[line:93]INFO - gui msg: {'req': {'device': 'm3', 'command': 'lock', 'lock_id': '201'}}
08/16/2022 05:58:54 PM daemon.py[line:775]INFO - para_str-->8,
08/16/2022 05:58:54 PM daemon.py[line:1008]INFO - b'ld\x01\x08r\xe3'
08/16/2022 05:58:54 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 05:58:54 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 05:58:54 PM rcomm.py[line:143]INFO - data -> b'ldok\x92\x97'
08/16/2022 05:58:54 PM daemon.py[line:1025]INFO - b'li\xc8\xb3'
08/16/2022 05:58:54 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 05:58:54 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 05:58:54 PM rcomm.py[line:143]INFO - data -> b'li,143,15,254,223,255,255,Q\xdf'
08/16/2022 05:58:54 PM daemon.py[line:1030]INFO - sensors state-->['143', '15', '254', '223', '255', '255']
08/16/2022 05:58:54 PM daemon.py[line:1033]INFO - [8]
08/16/2022 05:58:54 PM daemon.py[line:1025]INFO - b'li\xc8\xb3'
08/16/2022 05:58:54 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 05:58:54 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 05:58:54 PM rcomm.py[line:143]INFO - data -> b'li,143,15,254,223,255,255,Q\xdf'
08/16/2022 05:58:54 PM daemon.py[line:1030]INFO - sensors state-->['143', '15', '254', '223', '255', '255']
08/16/2022 05:58:54 PM daemon.py[line:1033]INFO - [8]
08/16/2022 05:58:54 PM daemon.py[line:1025]INFO - b'li\xc8\xb3'
08/16/2022 05:58:54 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 05:58:54 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 05:58:54 PM rcomm.py[line:143]INFO - data -> b'li,143,15,254,223,255,255,Q\xdf'
08/16/2022 05:58:54 PM daemon.py[line:1030]INFO - sensors state-->['143', '15', '254', '223', '255', '255']
08/16/2022 05:58:54 PM daemon.py[line:1033]INFO - [8]
08/16/2022 05:58:54 PM daemon.py[line:111]DEBUG - send_json -> {'rep': {'device': 'm3', 'result': 'error', 'meta': {'8': 'CLOSE'}}}
08/16/2022 05:58:55 PM daemon.py[line:93]INFO - gui msg: {'req': {'device': 'm3', 'command': 'lock', 'lock_id': '201'}}
08/16/2022 05:58:55 PM daemon.py[line:775]INFO - para_str-->8,
08/16/2022 05:58:55 PM daemon.py[line:1008]INFO - b'ld\x01\x08r\xe3'
08/16/2022 05:58:55 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 05:58:55 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 05:58:55 PM rcomm.py[line:143]INFO - data -> b'ldok\x92\x97'
08/16/2022 05:58:55 PM daemon.py[line:1025]INFO - b'li\xc8\xb3'
08/16/2022 05:58:55 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 05:58:55 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 05:58:56 PM rcomm.py[line:143]INFO - data -> b'li,143,15,254,223,255,255,Q\xdf'
08/16/2022 05:58:56 PM daemon.py[line:1030]INFO - sensors state-->['143', '15', '254', '223', '255', '255']
08/16/2022 05:58:56 PM daemon.py[line:1033]INFO - [8]
08/16/2022 05:58:56 PM daemon.py[line:1025]INFO - b'li\xc8\xb3'
08/16/2022 05:58:56 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 05:58:56 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 05:58:56 PM rcomm.py[line:143]INFO - data -> b'li,143,15,254,223,255,255,Q\xdf'
08/16/2022 05:58:56 PM daemon.py[line:1030]INFO - sensors state-->['143', '15', '254', '223', '255', '255']
08/16/2022 05:58:56 PM daemon.py[line:1033]INFO - [8]
08/16/2022 05:58:56 PM daemon.py[line:1025]INFO - b'li\xc8\xb3'
08/16/2022 05:58:56 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 05:58:56 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 05:58:56 PM rcomm.py[line:143]INFO - data -> b'li,143,15,254,223,255,255,Q\xdf'
08/16/2022 05:58:56 PM daemon.py[line:1030]INFO - sensors state-->['143', '15', '254', '223', '255', '255']
08/16/2022 05:58:56 PM daemon.py[line:1033]INFO - [8]
08/16/2022 05:58:56 PM daemon.py[line:111]DEBUG - send_json -> {'rep': {'device': 'm3', 'result': 'error', 'meta': {'8': 'CLOSE'}}}
08/16/2022 05:59:04 PM daemon.py[line:93]INFO - gui msg: {'req': {'device': 'm3', 'command': 'lock', 'lock_id': '205'}}
08/16/2022 05:59:04 PM daemon.py[line:775]INFO - para_str-->12,13,
08/16/2022 05:59:04 PM daemon.py[line:1008]INFO - b'ld\x02\x0c\rt\xfb'
08/16/2022 05:59:04 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 05:59:04 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 05:59:04 PM rcomm.py[line:143]INFO - data -> b'ldok\x92\x97'
08/16/2022 05:59:04 PM daemon.py[line:1025]INFO - b'li\xc8\xb3'
08/16/2022 05:59:04 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 05:59:04 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 05:59:04 PM rcomm.py[line:143]INFO - data -> b'li,143,15,254,223,255,255,Q\xdf'
08/16/2022 05:59:04 PM daemon.py[line:1030]INFO - sensors state-->['143', '15', '254', '223', '255', '255']
08/16/2022 05:59:04 PM daemon.py[line:1033]INFO - [12, 13]
08/16/2022 05:59:04 PM daemon.py[line:1025]INFO - b'li\xc8\xb3'
08/16/2022 05:59:04 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 05:59:04 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 05:59:04 PM rcomm.py[line:143]INFO - data -> b'li,143,15,254,223,255,255,Q\xdf'
08/16/2022 05:59:04 PM daemon.py[line:1030]INFO - sensors state-->['143', '15', '254', '223', '255', '255']
08/16/2022 05:59:04 PM daemon.py[line:1033]INFO - [12, 13]
08/16/2022 05:59:04 PM daemon.py[line:1025]INFO - b'li\xc8\xb3'
08/16/2022 05:59:04 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 05:59:04 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 05:59:05 PM rcomm.py[line:143]INFO - data -> b'li,143,15,254,223,255,255,Q\xdf'
08/16/2022 05:59:05 PM daemon.py[line:1030]INFO - sensors state-->['143', '15', '254', '223', '255', '255']
08/16/2022 05:59:05 PM daemon.py[line:1033]INFO - [12, 13]
08/16/2022 05:59:05 PM daemon.py[line:111]DEBUG - send_json -> {'rep': {'device': 'm3', 'result': 'error', 'meta': {'13': 'OPEN', '12': 'CLOSE'}}}
08/16/2022 05:59:06 PM daemon.py[line:93]INFO - gui msg: {'req': {'device': 'm3', 'command': 'lock', 'lock_id': '205'}}
08/16/2022 05:59:06 PM daemon.py[line:775]INFO - para_str-->12,13,
08/16/2022 05:59:06 PM daemon.py[line:1008]INFO - b'ld\x02\x0c\rt\xfb'
08/16/2022 05:59:06 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 05:59:06 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 05:59:06 PM rcomm.py[line:143]INFO - data -> b'ldok\x92\x97'
08/16/2022 05:59:06 PM daemon.py[line:1025]INFO - b'li\xc8\xb3'
08/16/2022 05:59:06 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 05:59:06 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 05:59:06 PM rcomm.py[line:143]INFO - data -> b'li,143,15,254,223,255,255,Q\xdf'
08/16/2022 05:59:06 PM daemon.py[line:1030]INFO - sensors state-->['143', '15', '254', '223', '255', '255']
08/16/2022 05:59:06 PM daemon.py[line:1033]INFO - [12, 13]
08/16/2022 05:59:06 PM daemon.py[line:1025]INFO - b'li\xc8\xb3'
08/16/2022 05:59:06 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 05:59:06 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 05:59:06 PM rcomm.py[line:143]INFO - data -> b'li,143,15,254,223,255,255,Q\xdf'
08/16/2022 05:59:06 PM daemon.py[line:1030]INFO - sensors state-->['143', '15', '254', '223', '255', '255']
08/16/2022 05:59:06 PM daemon.py[line:1033]INFO - [12, 13]
08/16/2022 05:59:06 PM daemon.py[line:1025]INFO - b'li\xc8\xb3'
08/16/2022 05:59:06 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 05:59:06 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 05:59:06 PM rcomm.py[line:143]INFO - data -> b'li,143,15,254,223,255,255,Q\xdf'
08/16/2022 05:59:06 PM daemon.py[line:1030]INFO - sensors state-->['143', '15', '254', '223', '255', '255']
08/16/2022 05:59:06 PM daemon.py[line:1033]INFO - [12, 13]
08/16/2022 05:59:07 PM daemon.py[line:111]DEBUG - send_json -> {'rep': {'device': 'm3', 'result': 'error', 'meta': {'13': 'OPEN', '12': 'CLOSE'}}}
08/16/2022 05:59:08 PM daemon.py[line:93]INFO - gui msg: {'req': {'device': 'm3', 'command': 'lock', 'lock_id': '205'}}
08/16/2022 05:59:08 PM daemon.py[line:775]INFO - para_str-->12,13,
08/16/2022 05:59:08 PM daemon.py[line:1008]INFO - b'ld\x02\x0c\rt\xfb'
08/16/2022 05:59:08 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 05:59:08 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 05:59:08 PM rcomm.py[line:143]INFO - data -> b'ldok\x92\x97'
08/16/2022 05:59:08 PM daemon.py[line:1025]INFO - b'li\xc8\xb3'
08/16/2022 05:59:08 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 05:59:08 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 05:59:08 PM rcomm.py[line:143]INFO - data -> b'li,143,15,254,223,255,255,Q\xdf'
08/16/2022 05:59:08 PM daemon.py[line:1030]INFO - sensors state-->['143', '15', '254', '223', '255', '255']
08/16/2022 05:59:08 PM daemon.py[line:1033]INFO - [12, 13]
08/16/2022 05:59:08 PM daemon.py[line:1025]INFO - b'li\xc8\xb3'
08/16/2022 05:59:08 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 05:59:08 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 05:59:08 PM rcomm.py[line:143]INFO - data -> b'li,143,15,254,223,255,255,Q\xdf'
08/16/2022 05:59:08 PM daemon.py[line:1030]INFO - sensors state-->['143', '15', '254', '223', '255', '255']
08/16/2022 05:59:08 PM daemon.py[line:1033]INFO - [12, 13]
08/16/2022 05:59:08 PM daemon.py[line:1025]INFO - b'li\xc8\xb3'
08/16/2022 05:59:08 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 05:59:08 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 05:59:08 PM rcomm.py[line:143]INFO - data -> b'li,143,15,254,223,255,255,Q\xdf'
08/16/2022 05:59:08 PM daemon.py[line:1030]INFO - sensors state-->['143', '15', '254', '223', '255', '255']
08/16/2022 05:59:08 PM daemon.py[line:1033]INFO - [12, 13]
08/16/2022 05:59:08 PM daemon.py[line:111]DEBUG - send_json -> {'rep': {'device': 'm3', 'result': 'error', 'meta': {'13': 'OPEN', '12': 'CLOSE'}}}
08/16/2022 05:59:12 PM daemon.py[line:93]INFO - gui msg: {'req': {'device': 'm3', 'command': 'lock', 'lock_id': '107'}}
08/16/2022 05:59:12 PM daemon.py[line:775]INFO - para_str-->7,
08/16/2022 05:59:12 PM daemon.py[line:1008]INFO - b'ld\x01\x07\x9d\x12'
08/16/2022 05:59:12 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 05:59:12 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 05:59:12 PM rcomm.py[line:143]INFO - data -> b'ldok\x92\x97'
08/16/2022 05:59:12 PM daemon.py[line:1025]INFO - b'li\xc8\xb3'
08/16/2022 05:59:12 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 05:59:12 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 05:59:12 PM rcomm.py[line:143]INFO - data -> b'li,207,15,254,223,255,255,\xb6\xb0'
08/16/2022 05:59:12 PM daemon.py[line:1030]INFO - sensors state-->['207', '15', '254', '223', '255', '255']
08/16/2022 05:59:12 PM daemon.py[line:1033]INFO - [7]
08/16/2022 05:59:13 PM daemon.py[line:1025]INFO - b'li\xc8\xb3'
08/16/2022 05:59:13 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 05:59:13 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 05:59:13 PM rcomm.py[line:143]INFO - data -> b'li,207,15,254,223,255,255,\xb6\xb0'
08/16/2022 05:59:13 PM daemon.py[line:1030]INFO - sensors state-->['207', '15', '254', '223', '255', '255']
08/16/2022 05:59:13 PM daemon.py[line:1033]INFO - [7]
08/16/2022 05:59:13 PM daemon.py[line:1025]INFO - b'li\xc8\xb3'
08/16/2022 05:59:13 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 05:59:13 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 05:59:13 PM rcomm.py[line:143]INFO - data -> b'li,207,15,254,223,255,255,\xb6\xb0'
08/16/2022 05:59:13 PM daemon.py[line:1030]INFO - sensors state-->['207', '15', '254', '223', '255', '255']
08/16/2022 05:59:13 PM daemon.py[line:1033]INFO - [7]
08/16/2022 05:59:13 PM daemon.py[line:111]DEBUG - send_json -> {'rep': {'device': 'm3', 'result': 'error', 'meta': {'7': 'CLOSE'}}}
08/16/2022 05:59:19 PM daemon.py[line:93]INFO - gui msg: {'req': {'device': 'm3', 'command': 'lock', 'lock_id': '107'}}
08/16/2022 05:59:19 PM daemon.py[line:775]INFO - para_str-->7,
08/16/2022 05:59:19 PM daemon.py[line:1008]INFO - b'ld\x01\x07\x9d\x12'
08/16/2022 05:59:19 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 05:59:19 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 05:59:19 PM rcomm.py[line:143]INFO - data -> b'ldok\x92\x97'
08/16/2022 05:59:19 PM daemon.py[line:1025]INFO - b'li\xc8\xb3'
08/16/2022 05:59:19 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 05:59:19 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 05:59:19 PM rcomm.py[line:143]INFO - data -> b'li,207,15,254,223,255,255,\xb6\xb0'
08/16/2022 05:59:19 PM daemon.py[line:1030]INFO - sensors state-->['207', '15', '254', '223', '255', '255']
08/16/2022 05:59:19 PM daemon.py[line:1033]INFO - [7]
08/16/2022 05:59:19 PM daemon.py[line:1025]INFO - b'li\xc8\xb3'
08/16/2022 05:59:19 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 05:59:19 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 05:59:19 PM rcomm.py[line:143]INFO - data -> b'li,207,15,254,223,255,255,\xb6\xb0'
08/16/2022 05:59:19 PM daemon.py[line:1030]INFO - sensors state-->['207', '15', '254', '223', '255', '255']
08/16/2022 05:59:19 PM daemon.py[line:1033]INFO - [7]
08/16/2022 05:59:19 PM daemon.py[line:1025]INFO - b'li\xc8\xb3'
08/16/2022 05:59:19 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 05:59:19 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 05:59:20 PM rcomm.py[line:143]INFO - data -> b'li,207,15,254,223,255,255,\xb6\xb0'
08/16/2022 05:59:20 PM daemon.py[line:1030]INFO - sensors state-->['207', '15', '254', '223', '255', '255']
08/16/2022 05:59:20 PM daemon.py[line:1033]INFO - [7]
08/16/2022 05:59:20 PM daemon.py[line:111]DEBUG - send_json -> {'rep': {'device': 'm3', 'result': 'error', 'meta': {'7': 'CLOSE'}}}
08/16/2022 05:59:23 PM daemon.py[line:93]INFO - gui msg: {'req': {'device': 'm3', 'command': 'lock', 'lock_id': '107'}}
08/16/2022 05:59:23 PM daemon.py[line:775]INFO - para_str-->7,
08/16/2022 05:59:23 PM daemon.py[line:1008]INFO - b'ld\x01\x07\x9d\x12'
08/16/2022 05:59:23 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 05:59:23 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 05:59:23 PM rcomm.py[line:143]INFO - data -> b'ldok\x92\x97'
08/16/2022 05:59:24 PM daemon.py[line:1025]INFO - b'li\xc8\xb3'
08/16/2022 05:59:24 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 05:59:24 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 05:59:24 PM rcomm.py[line:143]INFO - data -> b'li,207,15,254,223,255,255,\xb6\xb0'
08/16/2022 05:59:24 PM daemon.py[line:1030]INFO - sensors state-->['207', '15', '254', '223', '255', '255']
08/16/2022 05:59:24 PM daemon.py[line:1033]INFO - [7]
08/16/2022 05:59:24 PM daemon.py[line:1025]INFO - b'li\xc8\xb3'
08/16/2022 05:59:24 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 05:59:24 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 05:59:24 PM rcomm.py[line:143]INFO - data -> b'li,207,15,254,223,255,255,\xb6\xb0'
08/16/2022 05:59:24 PM daemon.py[line:1030]INFO - sensors state-->['207', '15', '254', '223', '255', '255']
08/16/2022 05:59:24 PM daemon.py[line:1033]INFO - [7]
08/16/2022 05:59:24 PM daemon.py[line:1025]INFO - b'li\xc8\xb3'
08/16/2022 05:59:24 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 05:59:24 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 05:59:24 PM rcomm.py[line:143]INFO - data -> b'li,207,15,254,223,255,255,\xb6\xb0'
08/16/2022 05:59:24 PM daemon.py[line:1030]INFO - sensors state-->['207', '15', '254', '223', '255', '255']
08/16/2022 05:59:24 PM daemon.py[line:1033]INFO - [7]
08/16/2022 05:59:24 PM daemon.py[line:111]DEBUG - send_json -> {'rep': {'device': 'm3', 'result': 'error', 'meta': {'7': 'CLOSE'}}}
08/16/2022 05:59:29 PM daemon.py[line:93]INFO - gui msg: {'req': {'device': 'm3', 'command': 'lock', 'lock_id': '107'}}
08/16/2022 05:59:29 PM daemon.py[line:775]INFO - para_str-->7,
08/16/2022 05:59:29 PM daemon.py[line:1008]INFO - b'ld\x01\x07\x9d\x12'
08/16/2022 05:59:29 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 05:59:29 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 05:59:29 PM rcomm.py[line:143]INFO - data -> b'ldok\x92\x97'
08/16/2022 05:59:29 PM daemon.py[line:1025]INFO - b'li\xc8\xb3'
08/16/2022 05:59:29 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 05:59:29 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 05:59:29 PM rcomm.py[line:143]INFO - data -> b'li,207,15,254,223,255,255,\xb6\xb0'
08/16/2022 05:59:29 PM daemon.py[line:1030]INFO - sensors state-->['207', '15', '254', '223', '255', '255']
08/16/2022 05:59:29 PM daemon.py[line:1033]INFO - [7]
08/16/2022 05:59:29 PM daemon.py[line:1025]INFO - b'li\xc8\xb3'
08/16/2022 05:59:29 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 05:59:29 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 05:59:29 PM rcomm.py[line:143]INFO - data -> b'li,207,15,254,223,255,255,\xb6\xb0'
08/16/2022 05:59:29 PM daemon.py[line:1030]INFO - sensors state-->['207', '15', '254', '223', '255', '255']
08/16/2022 05:59:29 PM daemon.py[line:1033]INFO - [7]
08/16/2022 05:59:29 PM daemon.py[line:1025]INFO - b'li\xc8\xb3'
08/16/2022 05:59:29 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 05:59:29 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 05:59:29 PM rcomm.py[line:143]INFO - data -> b'li,143,15,254,223,255,255,Q\xdf'
08/16/2022 05:59:29 PM daemon.py[line:1030]INFO - sensors state-->['143', '15', '254', '223', '255', '255']
08/16/2022 05:59:29 PM daemon.py[line:1033]INFO - [7]
08/16/2022 05:59:29 PM daemon.py[line:111]DEBUG - send_json -> {'rep': {'device': 'm3', 'result': 'success'}}
08/16/2022 05:59:31 PM daemon.py[line:93]INFO - gui msg: {'req': {'device': 'm3', 'command': 'lock', 'lock_id': '107'}}
08/16/2022 05:59:31 PM daemon.py[line:775]INFO - para_str-->7,
08/16/2022 05:59:31 PM daemon.py[line:1008]INFO - b'ld\x01\x07\x9d\x12'
08/16/2022 05:59:31 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 05:59:31 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 05:59:31 PM rcomm.py[line:143]INFO - data -> b'ldok\x92\x97'
08/16/2022 05:59:31 PM daemon.py[line:1025]INFO - b'li\xc8\xb3'
08/16/2022 05:59:31 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 05:59:31 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 05:59:31 PM rcomm.py[line:143]INFO - data -> b'li,143,15,254,223,255,255,Q\xdf'
08/16/2022 05:59:31 PM daemon.py[line:1030]INFO - sensors state-->['143', '15', '254', '223', '255', '255']
08/16/2022 05:59:31 PM daemon.py[line:1033]INFO - [7]
08/16/2022 05:59:31 PM daemon.py[line:111]DEBUG - send_json -> {'rep': {'device': 'm3', 'result': 'success'}}
08/16/2022 05:59:32 PM daemon.py[line:93]INFO - gui msg: {'req': {'device': 'm3', 'command': 'lock', 'lock_id': '107'}}
08/16/2022 05:59:32 PM daemon.py[line:775]INFO - para_str-->7,
08/16/2022 05:59:32 PM daemon.py[line:1008]INFO - b'ld\x01\x07\x9d\x12'
08/16/2022 05:59:32 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 05:59:32 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 05:59:32 PM rcomm.py[line:143]INFO - data -> b'ldok\x92\x97'
08/16/2022 05:59:32 PM daemon.py[line:1025]INFO - b'li\xc8\xb3'
08/16/2022 05:59:32 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 05:59:32 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 05:59:32 PM rcomm.py[line:143]INFO - data -> b'li,143,15,254,223,255,255,Q\xdf'
08/16/2022 05:59:32 PM daemon.py[line:1030]INFO - sensors state-->['143', '15', '254', '223', '255', '255']
08/16/2022 05:59:32 PM daemon.py[line:1033]INFO - [7]
08/16/2022 05:59:32 PM daemon.py[line:111]DEBUG - send_json -> {'rep': {'device': 'm3', 'result': 'success'}}
08/16/2022 05:59:35 PM daemon.py[line:93]INFO - gui msg: {'req': {'device': 'm3', 'command': 'lock', 'lock_id': '107'}}
08/16/2022 05:59:35 PM daemon.py[line:775]INFO - para_str-->7,
08/16/2022 05:59:35 PM daemon.py[line:1008]INFO - b'ld\x01\x07\x9d\x12'
08/16/2022 05:59:35 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 05:59:35 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 05:59:35 PM rcomm.py[line:143]INFO - data -> b'ldok\x92\x97'
08/16/2022 05:59:35 PM daemon.py[line:1025]INFO - b'li\xc8\xb3'
08/16/2022 05:59:35 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 05:59:35 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 05:59:35 PM rcomm.py[line:143]INFO - data -> b'li,143,15,254,223,255,255,Q\xdf'
08/16/2022 05:59:35 PM daemon.py[line:1030]INFO - sensors state-->['143', '15', '254', '223', '255', '255']
08/16/2022 05:59:35 PM daemon.py[line:1033]INFO - [7]
08/16/2022 05:59:35 PM daemon.py[line:111]DEBUG - send_json -> {'rep': {'device': 'm3', 'result': 'success'}}
08/16/2022 05:59:36 PM daemon.py[line:93]INFO - gui msg: {'req': {'device': 'm3', 'command': 'lock', 'lock_id': '107'}}
08/16/2022 05:59:36 PM daemon.py[line:775]INFO - para_str-->7,
08/16/2022 05:59:36 PM daemon.py[line:1008]INFO - b'ld\x01\x07\x9d\x12'
08/16/2022 05:59:36 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 05:59:36 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 05:59:36 PM rcomm.py[line:143]INFO - data -> b'ldok\x92\x97'
08/16/2022 05:59:36 PM daemon.py[line:1025]INFO - b'li\xc8\xb3'
08/16/2022 05:59:36 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 05:59:36 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 05:59:36 PM rcomm.py[line:143]INFO - data -> b'li,143,15,254,223,255,255,Q\xdf'
08/16/2022 05:59:36 PM daemon.py[line:1030]INFO - sensors state-->['143', '15', '254', '223', '255', '255']
08/16/2022 05:59:36 PM daemon.py[line:1033]INFO - [7]
08/16/2022 05:59:36 PM daemon.py[line:111]DEBUG - send_json -> {'rep': {'device': 'm3', 'result': 'success'}}
08/16/2022 05:59:37 PM daemon.py[line:93]INFO - gui msg: {'req': {'device': 'm3', 'command': 'lock', 'lock_id': '107'}}
08/16/2022 05:59:37 PM daemon.py[line:775]INFO - para_str-->7,
08/16/2022 05:59:37 PM daemon.py[line:1008]INFO - b'ld\x01\x07\x9d\x12'
08/16/2022 05:59:37 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 05:59:37 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 05:59:37 PM rcomm.py[line:143]INFO - data -> b'ldok\x92\x97'
08/16/2022 05:59:37 PM daemon.py[line:1025]INFO - b'li\xc8\xb3'
08/16/2022 05:59:37 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 05:59:38 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 05:59:38 PM rcomm.py[line:143]INFO - data -> b'li,207,15,254,223,255,255,\xb6\xb0'
08/16/2022 05:59:38 PM daemon.py[line:1030]INFO - sensors state-->['207', '15', '254', '223', '255', '255']
08/16/2022 05:59:38 PM daemon.py[line:1033]INFO - [7]
08/16/2022 05:59:38 PM daemon.py[line:1025]INFO - b'li\xc8\xb3'
08/16/2022 05:59:38 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 05:59:38 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 05:59:38 PM rcomm.py[line:143]INFO - data -> b'li,207,15,254,223,255,255,\xb6\xb0'
08/16/2022 05:59:38 PM daemon.py[line:1030]INFO - sensors state-->['207', '15', '254', '223', '255', '255']
08/16/2022 05:59:38 PM daemon.py[line:1033]INFO - [7]
08/16/2022 05:59:38 PM daemon.py[line:1025]INFO - b'li\xc8\xb3'
08/16/2022 05:59:38 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 05:59:38 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 05:59:38 PM rcomm.py[line:143]INFO - data -> b'li,207,15,254,223,255,255,\xb6\xb0'
08/16/2022 05:59:38 PM daemon.py[line:1030]INFO - sensors state-->['207', '15', '254', '223', '255', '255']
08/16/2022 05:59:38 PM daemon.py[line:1033]INFO - [7]
08/16/2022 05:59:38 PM daemon.py[line:111]DEBUG - send_json -> {'rep': {'device': 'm3', 'result': 'error', 'meta': {'7': 'CLOSE'}}}
08/16/2022 05:59:45 PM daemon.py[line:93]INFO - gui msg: {'req': {'device': 'm3', 'command': 'lock', 'lock_id': '201'}}
08/16/2022 05:59:45 PM daemon.py[line:775]INFO - para_str-->8,
08/16/2022 05:59:45 PM daemon.py[line:1008]INFO - b'ld\x01\x08r\xe3'
08/16/2022 05:59:45 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 05:59:45 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 05:59:45 PM rcomm.py[line:143]INFO - data -> b'ldok\x92\x97'
08/16/2022 05:59:45 PM daemon.py[line:1025]INFO - b'li\xc8\xb3'
08/16/2022 05:59:45 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 05:59:45 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 05:59:45 PM rcomm.py[line:143]INFO - data -> b'li,143,15,254,223,255,255,Q\xdf'
08/16/2022 05:59:45 PM daemon.py[line:1030]INFO - sensors state-->['143', '15', '254', '223', '255', '255']
08/16/2022 05:59:45 PM daemon.py[line:1033]INFO - [8]
08/16/2022 05:59:45 PM daemon.py[line:1025]INFO - b'li\xc8\xb3'
08/16/2022 05:59:45 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 05:59:45 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 05:59:45 PM rcomm.py[line:143]INFO - data -> b'li,143,15,254,223,255,255,Q\xdf'
08/16/2022 05:59:45 PM daemon.py[line:1030]INFO - sensors state-->['143', '15', '254', '223', '255', '255']
08/16/2022 05:59:45 PM daemon.py[line:1033]INFO - [8]
08/16/2022 05:59:46 PM daemon.py[line:1025]INFO - b'li\xc8\xb3'
08/16/2022 05:59:46 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 05:59:46 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 05:59:46 PM rcomm.py[line:143]INFO - data -> b'li,143,15,254,223,255,255,Q\xdf'
08/16/2022 05:59:46 PM daemon.py[line:1030]INFO - sensors state-->['143', '15', '254', '223', '255', '255']
08/16/2022 05:59:46 PM daemon.py[line:1033]INFO - [8]
08/16/2022 05:59:46 PM daemon.py[line:111]DEBUG - send_json -> {'rep': {'device': 'm3', 'result': 'error', 'meta': {'8': 'CLOSE'}}}
08/16/2022 05:59:47 PM daemon.py[line:93]INFO - gui msg: {'req': {'device': 'm3', 'command': 'lock', 'lock_id': '201'}}
08/16/2022 05:59:47 PM daemon.py[line:775]INFO - para_str-->8,
08/16/2022 05:59:47 PM daemon.py[line:1008]INFO - b'ld\x01\x08r\xe3'
08/16/2022 05:59:47 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 05:59:47 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 05:59:47 PM rcomm.py[line:143]INFO - data -> b'ldok\x92\x97'
08/16/2022 05:59:47 PM daemon.py[line:1025]INFO - b'li\xc8\xb3'
08/16/2022 05:59:47 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 05:59:47 PM rcomm.py[line:226]ERROR - failed to flush Y -> (4, 'Interrupted system call')
08/16/2022 05:59:47 PM rcomm.py[line:111]DEBUG - dev: Y opened
08/16/2022 05:59:47 PM rcomm.py[line:115]ERROR - failed to open device: AC as [Errno 2] could not open port /dev/serial/by-id/usb-1a86_USB2.0-Serial-if00-port0: [Errno 2] No such file or directory: '/dev/serial/by-id/usb-1a86_USB2.0-Serial-if00-port0'
08/16/2022 05:59:47 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 05:59:47 PM rcomm.py[line:143]INFO - data -> b'li,143,15,254,223,255,255,Q\xdf'
08/16/2022 05:59:47 PM daemon.py[line:1030]INFO - sensors state-->['143', '15', '254', '223', '255', '255']
08/16/2022 05:59:47 PM daemon.py[line:1033]INFO - [8]
08/16/2022 05:59:47 PM daemon.py[line:1025]INFO - b'li\xc8\xb3'
08/16/2022 05:59:47 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 05:59:47 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 05:59:47 PM rcomm.py[line:143]INFO - data -> b'li,143,15,254,223,255,255,Q\xdf'
08/16/2022 05:59:47 PM daemon.py[line:1030]INFO - sensors state-->['143', '15', '254', '223', '255', '255']
08/16/2022 05:59:47 PM daemon.py[line:1033]INFO - [8]
08/16/2022 05:59:47 PM daemon.py[line:1025]INFO - b'li\xc8\xb3'
08/16/2022 05:59:47 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 05:59:47 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 05:59:47 PM rcomm.py[line:143]INFO - data -> b'li,143,15,254,223,255,255,Q\xdf'
08/16/2022 05:59:47 PM daemon.py[line:1030]INFO - sensors state-->['143', '15', '254', '223', '255', '255']
08/16/2022 05:59:47 PM daemon.py[line:1033]INFO - [8]
08/16/2022 05:59:47 PM daemon.py[line:111]DEBUG - send_json -> {'rep': {'device': 'm3', 'result': 'error', 'meta': {'8': 'CLOSE'}}}
08/16/2022 05:59:48 PM daemon.py[line:93]INFO - gui msg: {'req': {'device': 'm3', 'command': 'lock', 'lock_id': '201'}}
08/16/2022 05:59:48 PM daemon.py[line:775]INFO - para_str-->8,
08/16/2022 05:59:48 PM daemon.py[line:1008]INFO - b'ld\x01\x08r\xe3'
08/16/2022 05:59:48 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 05:59:48 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 05:59:48 PM rcomm.py[line:143]INFO - data -> b'ldok\x92\x97'
08/16/2022 05:59:48 PM daemon.py[line:1025]INFO - b'li\xc8\xb3'
08/16/2022 05:59:48 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 05:59:48 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 05:59:48 PM rcomm.py[line:143]INFO - data -> b'li,143,15,254,223,255,255,Q\xdf'
08/16/2022 05:59:48 PM daemon.py[line:1030]INFO - sensors state-->['143', '15', '254', '223', '255', '255']
08/16/2022 05:59:48 PM daemon.py[line:1033]INFO - [8]
08/16/2022 05:59:48 PM daemon.py[line:1025]INFO - b'li\xc8\xb3'
08/16/2022 05:59:48 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 05:59:48 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 05:59:48 PM rcomm.py[line:143]INFO - data -> b'li,143,15,254,223,255,255,Q\xdf'
08/16/2022 05:59:48 PM daemon.py[line:1030]INFO - sensors state-->['143', '15', '254', '223', '255', '255']
08/16/2022 05:59:48 PM daemon.py[line:1033]INFO - [8]
08/16/2022 05:59:48 PM daemon.py[line:1025]INFO - b'li\xc8\xb3'
08/16/2022 05:59:48 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 05:59:48 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 05:59:48 PM rcomm.py[line:143]INFO - data -> b'li,143,15,254,223,255,255,Q\xdf'
08/16/2022 05:59:48 PM daemon.py[line:1030]INFO - sensors state-->['143', '15', '254', '223', '255', '255']
08/16/2022 05:59:48 PM daemon.py[line:1033]INFO - [8]
08/16/2022 05:59:48 PM daemon.py[line:111]DEBUG - send_json -> {'rep': {'device': 'm3', 'result': 'error', 'meta': {'8': 'CLOSE'}}}
08/16/2022 05:59:49 PM daemon.py[line:93]INFO - gui msg: {'req': {'device': 'm3', 'command': 'lock', 'lock_id': '201'}}
08/16/2022 05:59:49 PM daemon.py[line:775]INFO - para_str-->8,
08/16/2022 05:59:49 PM daemon.py[line:1008]INFO - b'ld\x01\x08r\xe3'
08/16/2022 05:59:49 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 05:59:49 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 05:59:49 PM rcomm.py[line:143]INFO - data -> b'ldok\x92\x97'
08/16/2022 05:59:49 PM daemon.py[line:1025]INFO - b'li\xc8\xb3'
08/16/2022 05:59:49 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 05:59:49 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 05:59:49 PM rcomm.py[line:143]INFO - data -> b'li,143,15,254,223,255,255,Q\xdf'
08/16/2022 05:59:49 PM daemon.py[line:1030]INFO - sensors state-->['143', '15', '254', '223', '255', '255']
08/16/2022 05:59:49 PM daemon.py[line:1033]INFO - [8]
08/16/2022 05:59:49 PM daemon.py[line:1025]INFO - b'li\xc8\xb3'
08/16/2022 05:59:49 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 05:59:49 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 05:59:49 PM rcomm.py[line:143]INFO - data -> b'li,143,15,254,223,255,255,Q\xdf'
08/16/2022 05:59:49 PM daemon.py[line:1030]INFO - sensors state-->['143', '15', '254', '223', '255', '255']
08/16/2022 05:59:49 PM daemon.py[line:1033]INFO - [8]
08/16/2022 05:59:49 PM daemon.py[line:1025]INFO - b'li\xc8\xb3'
08/16/2022 05:59:49 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 05:59:49 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 05:59:49 PM rcomm.py[line:143]INFO - data -> b'li,143,15,254,223,255,255,Q\xdf'
08/16/2022 05:59:49 PM daemon.py[line:1030]INFO - sensors state-->['143', '15', '254', '223', '255', '255']
08/16/2022 05:59:49 PM daemon.py[line:1033]INFO - [8]
08/16/2022 05:59:50 PM daemon.py[line:111]DEBUG - send_json -> {'rep': {'device': 'm3', 'result': 'error', 'meta': {'8': 'CLOSE'}}}
08/16/2022 05:59:55 PM daemon.py[line:93]INFO - gui msg: {'req': {'device': 'm3', 'command': 'lock', 'lock_id': '201'}}
08/16/2022 05:59:55 PM daemon.py[line:775]INFO - para_str-->8,
08/16/2022 05:59:55 PM daemon.py[line:1008]INFO - b'ld\x01\x08r\xe3'
08/16/2022 05:59:55 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 05:59:55 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 05:59:55 PM rcomm.py[line:143]INFO - data -> b'ldok\x92\x97'
08/16/2022 05:59:55 PM daemon.py[line:1025]INFO - b'li\xc8\xb3'
08/16/2022 05:59:55 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 05:59:55 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 05:59:55 PM rcomm.py[line:143]INFO - data -> b'li,143,15,254,223,255,255,Q\xdf'
08/16/2022 05:59:55 PM daemon.py[line:1030]INFO - sensors state-->['143', '15', '254', '223', '255', '255']
08/16/2022 05:59:55 PM daemon.py[line:1033]INFO - [8]
08/16/2022 05:59:56 PM daemon.py[line:1025]INFO - b'li\xc8\xb3'
08/16/2022 05:59:56 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 05:59:56 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 05:59:56 PM rcomm.py[line:143]INFO - data -> b'li,143,15,254,223,255,255,Q\xdf'
08/16/2022 05:59:56 PM daemon.py[line:1030]INFO - sensors state-->['143', '15', '254', '223', '255', '255']
08/16/2022 05:59:56 PM daemon.py[line:1033]INFO - [8]
08/16/2022 05:59:56 PM daemon.py[line:1025]INFO - b'li\xc8\xb3'
08/16/2022 05:59:56 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 05:59:56 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 05:59:56 PM rcomm.py[line:143]INFO - data -> b'li,143,15,254,223,255,255,Q\xdf'
08/16/2022 05:59:56 PM daemon.py[line:1030]INFO - sensors state-->['143', '15', '254', '223', '255', '255']
08/16/2022 05:59:56 PM daemon.py[line:1033]INFO - [8]
08/16/2022 05:59:56 PM daemon.py[line:111]DEBUG - send_json -> {'rep': {'device': 'm3', 'result': 'error', 'meta': {'8': 'CLOSE'}}}
08/16/2022 06:00:17 PM daemon.py[line:93]INFO - gui msg: {'req': {'device': 'm3', 'command': 'lock', 'lock_id': '301'}}
08/16/2022 06:00:17 PM daemon.py[line:775]INFO - para_str-->18,
08/16/2022 06:00:17 PM daemon.py[line:1008]INFO - b'ld\x01\x12\tP'
08/16/2022 06:00:17 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 06:00:17 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 06:00:17 PM rcomm.py[line:143]INFO - data -> b'ldok\x92\x97'
08/16/2022 06:00:17 PM daemon.py[line:1025]INFO - b'li\xc8\xb3'
08/16/2022 06:00:17 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 06:00:17 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 06:00:17 PM rcomm.py[line:143]INFO - data -> b'li,143,15,252,223,255,255,6\xd4'
08/16/2022 06:00:17 PM daemon.py[line:1030]INFO - sensors state-->['143', '15', '252', '223', '255', '255']
08/16/2022 06:00:17 PM daemon.py[line:1033]INFO - [18]
08/16/2022 06:00:17 PM daemon.py[line:111]DEBUG - send_json -> {'rep': {'device': 'm3', 'result': 'success'}}
08/16/2022 06:00:18 PM daemon.py[line:93]INFO - gui msg: {'req': {'device': 'm3', 'command': 'lock', 'lock_id': '302'}}
08/16/2022 06:00:18 PM daemon.py[line:775]INFO - para_str-->19,
08/16/2022 06:00:18 PM daemon.py[line:1008]INFO - b'ld\x01\x13(@'
08/16/2022 06:00:18 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 06:00:18 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 06:00:18 PM rcomm.py[line:143]INFO - data -> b'ldok\x92\x97'
08/16/2022 06:00:18 PM daemon.py[line:1025]INFO - b'li\xc8\xb3'
08/16/2022 06:00:18 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 06:00:18 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 06:00:18 PM rcomm.py[line:143]INFO - data -> b'li,143,15,248,223,255,255,cg'
08/16/2022 06:00:18 PM daemon.py[line:1030]INFO - sensors state-->['143', '15', '248', '223', '255', '255']
08/16/2022 06:00:18 PM daemon.py[line:1033]INFO - [19]
08/16/2022 06:00:18 PM daemon.py[line:111]DEBUG - send_json -> {'rep': {'device': 'm3', 'result': 'success'}}
08/16/2022 06:00:19 PM daemon.py[line:93]INFO - gui msg: {'req': {'device': 'm3', 'command': 'lock', 'lock_id': '303'}}
08/16/2022 06:00:19 PM daemon.py[line:775]INFO - para_str-->20,
08/16/2022 06:00:19 PM daemon.py[line:1008]INFO - b'ld\x01\x14\xcf0'
08/16/2022 06:00:19 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 06:00:19 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 06:00:19 PM rcomm.py[line:143]INFO - data -> b'ldok\x92\x97'
08/16/2022 06:00:19 PM daemon.py[line:1025]INFO - b'li\xc8\xb3'
08/16/2022 06:00:19 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 06:00:19 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 06:00:20 PM rcomm.py[line:143]INFO - data -> b'li,143,15,244,223,255,255,\xadq'
08/16/2022 06:00:20 PM daemon.py[line:1030]INFO - sensors state-->['143', '15', '244', '223', '255', '255']
08/16/2022 06:00:20 PM daemon.py[line:1033]INFO - [20]
08/16/2022 06:00:20 PM daemon.py[line:111]DEBUG - send_json -> {'rep': {'device': 'm3', 'result': 'success'}}
08/16/2022 06:00:21 PM daemon.py[line:93]INFO - gui msg: {'req': {'device': 'm3', 'command': 'lock', 'lock_id': '304'}}
08/16/2022 06:00:21 PM daemon.py[line:775]INFO - para_str-->21,
08/16/2022 06:00:21 PM daemon.py[line:1008]INFO - b'ld\x01\x15\xee '
08/16/2022 06:00:21 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 06:00:21 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 06:00:21 PM rcomm.py[line:143]INFO - data -> b'ldok\x92\x97'
08/16/2022 06:00:21 PM daemon.py[line:1025]INFO - b'li\xc8\xb3'
08/16/2022 06:00:21 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 06:00:21 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 06:00:21 PM rcomm.py[line:143]INFO - data -> b'li,143,15,230,223,255,255,\x9f\xf4'
08/16/2022 06:00:21 PM daemon.py[line:1030]INFO - sensors state-->['143', '15', '230', '223', '255', '255']
08/16/2022 06:00:21 PM daemon.py[line:1033]INFO - [21]
08/16/2022 06:00:21 PM daemon.py[line:111]DEBUG - send_json -> {'rep': {'device': 'm3', 'result': 'success'}}
08/16/2022 06:00:22 PM daemon.py[line:93]INFO - gui msg: {'req': {'device': 'm3', 'command': 'lock', 'lock_id': '305'}}
08/16/2022 06:00:22 PM daemon.py[line:775]INFO - para_str-->22,
08/16/2022 06:00:22 PM daemon.py[line:1008]INFO - b'ld\x01\x16\x8d\x10'
08/16/2022 06:00:22 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 06:00:22 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 06:00:22 PM rcomm.py[line:143]INFO - data -> b'ldok\x92\x97'
08/16/2022 06:00:22 PM daemon.py[line:1025]INFO - b'li\xc8\xb3'
08/16/2022 06:00:22 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 06:00:22 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 06:00:22 PM rcomm.py[line:143]INFO - data -> b'li,143,15,198,223,255,255,%\x9d'
08/16/2022 06:00:22 PM daemon.py[line:1030]INFO - sensors state-->['143', '15', '198', '223', '255', '255']
08/16/2022 06:00:22 PM daemon.py[line:1033]INFO - [22]
08/16/2022 06:00:22 PM daemon.py[line:111]DEBUG - send_json -> {'rep': {'device': 'm3', 'result': 'success'}}
08/16/2022 06:00:23 PM daemon.py[line:93]INFO - gui msg: {'req': {'device': 'm3', 'command': 'lock', 'lock_id': '306'}}
08/16/2022 06:00:23 PM daemon.py[line:775]INFO - para_str-->23,
08/16/2022 06:00:23 PM daemon.py[line:1008]INFO - b'ld\x01\x17\xac\x00'
08/16/2022 06:00:23 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 06:00:23 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 06:00:23 PM rcomm.py[line:143]INFO - data -> b'ldok\x92\x97'
08/16/2022 06:00:23 PM daemon.py[line:1025]INFO - b'li\xc8\xb3'
08/16/2022 06:00:23 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 06:00:23 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 06:00:23 PM rcomm.py[line:143]INFO - data -> b'li,143,15,134,223,255,255,w\xe1'
08/16/2022 06:00:23 PM daemon.py[line:1030]INFO - sensors state-->['143', '15', '134', '223', '255', '255']
08/16/2022 06:00:23 PM daemon.py[line:1033]INFO - [23]
08/16/2022 06:00:23 PM daemon.py[line:111]DEBUG - send_json -> {'rep': {'device': 'm3', 'result': 'success'}}
08/16/2022 06:00:24 PM daemon.py[line:93]INFO - gui msg: {'req': {'device': 'm3', 'command': 'lock', 'lock_id': '307'}}
08/16/2022 06:00:24 PM daemon.py[line:775]INFO - para_str-->24,
08/16/2022 06:00:24 PM daemon.py[line:1008]INFO - b'ld\x01\x18C\xf1'
08/16/2022 06:00:24 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 06:00:24 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 06:00:24 PM rcomm.py[line:143]INFO - data -> b'ldok\x92\x97'
08/16/2022 06:00:24 PM daemon.py[line:1025]INFO - b'li\xc8\xb3'
08/16/2022 06:00:24 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 06:00:24 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 06:00:25 PM rcomm.py[line:143]INFO - data -> b'li,143,15,6,223,255,255,\x98\x94'
08/16/2022 06:00:25 PM daemon.py[line:1030]INFO - sensors state-->['143', '15', '6', '223', '255', '255']
08/16/2022 06:00:25 PM daemon.py[line:1033]INFO - [24]
08/16/2022 06:00:25 PM daemon.py[line:111]DEBUG - send_json -> {'rep': {'device': 'm3', 'result': 'success'}}
08/16/2022 06:00:26 PM daemon.py[line:93]INFO - gui msg: {'req': {'device': 'm3', 'command': 'lock', 'lock_id': '308'}}
08/16/2022 06:00:26 PM daemon.py[line:775]INFO - para_str-->25,
08/16/2022 06:00:26 PM daemon.py[line:1008]INFO - b'ld\x01\x19b\xe1'
08/16/2022 06:00:26 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 06:00:26 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 06:00:26 PM rcomm.py[line:143]INFO - data -> b'ldok\x92\x97'
08/16/2022 06:00:26 PM daemon.py[line:1025]INFO - b'li\xc8\xb3'
08/16/2022 06:00:26 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 06:00:26 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 06:00:26 PM rcomm.py[line:143]INFO - data -> b'li,143,15,6,222,255,255,\xdd\xfb'
08/16/2022 06:00:26 PM daemon.py[line:1030]INFO - sensors state-->['143', '15', '6', '222', '255', '255']
08/16/2022 06:00:26 PM daemon.py[line:1033]INFO - [25]
08/16/2022 06:00:26 PM daemon.py[line:111]DEBUG - send_json -> {'rep': {'device': 'm3', 'result': 'success'}}
08/16/2022 06:00:27 PM daemon.py[line:93]INFO - gui msg: {'req': {'device': 'm3', 'command': 'lock', 'lock_id': '309'}}
08/16/2022 06:00:27 PM daemon.py[line:775]INFO - para_str-->26,
08/16/2022 06:00:27 PM daemon.py[line:1008]INFO - b'ld\x01\x1a\x01\xd1'
08/16/2022 06:00:27 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 06:00:27 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 06:00:27 PM rcomm.py[line:143]INFO - data -> b'ldok\x92\x97'
08/16/2022 06:00:27 PM daemon.py[line:1025]INFO - b'li\xc8\xb3'
08/16/2022 06:00:27 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 06:00:27 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 06:00:27 PM rcomm.py[line:143]INFO - data -> b'li,143,15,6,220,255,255,W%'
08/16/2022 06:00:27 PM daemon.py[line:1030]INFO - sensors state-->['143', '15', '6', '220', '255', '255']
08/16/2022 06:00:27 PM daemon.py[line:1033]INFO - [26]
08/16/2022 06:00:27 PM daemon.py[line:111]DEBUG - send_json -> {'rep': {'device': 'm3', 'result': 'success'}}
08/16/2022 06:00:28 PM daemon.py[line:93]INFO - gui msg: {'req': {'device': 'm3', 'command': 'lock', 'lock_id': '310'}}
08/16/2022 06:00:28 PM daemon.py[line:775]INFO - para_str-->27,
08/16/2022 06:00:28 PM daemon.py[line:1008]INFO - b'ld\x01\x1b \xc1'
08/16/2022 06:00:28 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 06:00:28 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 06:00:28 PM rcomm.py[line:143]INFO - data -> b'ldok\x92\x97'
08/16/2022 06:00:28 PM daemon.py[line:1025]INFO - b'li\xc8\xb3'
08/16/2022 06:00:28 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 06:00:28 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 06:00:28 PM rcomm.py[line:143]INFO - data -> b'li,143,15,6,216,255,255,\x12.'
08/16/2022 06:00:28 PM daemon.py[line:1030]INFO - sensors state-->['143', '15', '6', '216', '255', '255']
08/16/2022 06:00:28 PM daemon.py[line:1033]INFO - [27]
08/16/2022 06:00:28 PM daemon.py[line:111]DEBUG - send_json -> {'rep': {'device': 'm3', 'result': 'success'}}
08/16/2022 06:00:29 PM daemon.py[line:93]INFO - gui msg: {'req': {'device': 'm3', 'command': 'lock', 'lock_id': '311'}}
08/16/2022 06:00:29 PM daemon.py[line:775]INFO - para_str-->28,
08/16/2022 06:00:29 PM daemon.py[line:1008]INFO - b'ld\x01\x1c\xc7\xb1'
08/16/2022 06:00:29 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 06:00:29 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 06:00:29 PM rcomm.py[line:143]INFO - data -> b'ldok\x92\x97'
08/16/2022 06:00:29 PM daemon.py[line:1025]INFO - b'li\xc8\xb3'
08/16/2022 06:00:29 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 06:00:30 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 06:00:30 PM rcomm.py[line:143]INFO - data -> b'li,143,15,6,208,255,255,\xaf\xcf'
08/16/2022 06:00:30 PM daemon.py[line:1030]INFO - sensors state-->['143', '15', '6', '208', '255', '255']
08/16/2022 06:00:30 PM daemon.py[line:1033]INFO - [28]
08/16/2022 06:00:30 PM daemon.py[line:111]DEBUG - send_json -> {'rep': {'device': 'm3', 'result': 'success'}}
08/16/2022 06:00:31 PM daemon.py[line:93]INFO - gui msg: {'req': {'device': 'm3', 'command': 'lock', 'lock_id': '312'}}
08/16/2022 06:00:31 PM daemon.py[line:775]INFO - para_str-->29,
08/16/2022 06:00:31 PM daemon.py[line:1008]INFO - b'ld\x01\x1d\xe6\xa1'
08/16/2022 06:00:31 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 06:00:31 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 06:00:31 PM rcomm.py[line:143]INFO - data -> b'ldok\x92\x97'
08/16/2022 06:00:31 PM daemon.py[line:1025]INFO - b'li\xc8\xb3'
08/16/2022 06:00:31 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 06:00:31 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 06:00:31 PM rcomm.py[line:143]INFO - data -> b'li,143,15,6,192,255,255,6$'
08/16/2022 06:00:31 PM daemon.py[line:1030]INFO - sensors state-->['143', '15', '6', '192', '255', '255']
08/16/2022 06:00:31 PM daemon.py[line:1033]INFO - [29]
08/16/2022 06:00:31 PM daemon.py[line:111]DEBUG - send_json -> {'rep': {'device': 'm3', 'result': 'success'}}
08/16/2022 06:00:32 PM daemon.py[line:93]INFO - gui msg: {'req': {'device': 'm3', 'command': 'lock', 'lock_id': '313'}}
08/16/2022 06:00:32 PM daemon.py[line:775]INFO - para_str-->30,
08/16/2022 06:00:32 PM daemon.py[line:1008]INFO - b'ld\x01\x1e\x85\x91'
08/16/2022 06:00:32 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 06:00:32 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 06:00:32 PM rcomm.py[line:143]INFO - data -> b'ldok\x92\x97'
08/16/2022 06:00:32 PM daemon.py[line:1025]INFO - b'li\xc8\xb3'
08/16/2022 06:00:32 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 06:00:32 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 06:00:32 PM rcomm.py[line:143]INFO - data -> b'li,143,15,6,192,255,255,6$'
08/16/2022 06:00:32 PM daemon.py[line:1030]INFO - sensors state-->['143', '15', '6', '192', '255', '255']
08/16/2022 06:00:32 PM daemon.py[line:1033]INFO - [30]
08/16/2022 06:00:32 PM daemon.py[line:111]DEBUG - send_json -> {'rep': {'device': 'm3', 'result': 'success'}}
08/16/2022 06:00:33 PM daemon.py[line:93]INFO - gui msg: {'req': {'device': 'm3', 'command': 'lock', 'lock_id': '314'}}
08/16/2022 06:00:33 PM daemon.py[line:775]INFO - para_str-->31,
08/16/2022 06:00:33 PM daemon.py[line:1008]INFO - b'ld\x01\x1f\xa4\x81'
08/16/2022 06:00:33 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 06:00:33 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 06:00:33 PM rcomm.py[line:143]INFO - data -> b'ldok\x92\x97'
08/16/2022 06:00:33 PM daemon.py[line:1025]INFO - b'li\xc8\xb3'
08/16/2022 06:00:33 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 06:00:33 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 06:00:33 PM rcomm.py[line:143]INFO - data -> b'li,143,15,6,128,255,255,\x83j'
08/16/2022 06:00:33 PM daemon.py[line:1030]INFO - sensors state-->['143', '15', '6', '128', '255', '255']
08/16/2022 06:00:33 PM daemon.py[line:1033]INFO - [31]
08/16/2022 06:00:33 PM daemon.py[line:111]DEBUG - send_json -> {'rep': {'device': 'm3', 'result': 'success'}}
08/16/2022 06:01:13 PM daemon.py[line:93]INFO - gui msg: {'req': {'device': 'm3', 'command': 'lock', 'lock_id': '401'}}
08/16/2022 06:01:13 PM daemon.py[line:775]INFO - para_str-->30,
08/16/2022 06:01:13 PM daemon.py[line:1008]INFO - b'ld\x01\x1e\x85\x91'
08/16/2022 06:01:13 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 06:01:13 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 06:01:13 PM rcomm.py[line:143]INFO - data -> b'ldok\x92\x97'
08/16/2022 06:01:13 PM daemon.py[line:1025]INFO - b'li\xc8\xb3'
08/16/2022 06:01:13 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 06:01:13 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 06:01:13 PM rcomm.py[line:143]INFO - data -> b'li,143,15,6,128,255,255,\x83j'
08/16/2022 06:01:13 PM daemon.py[line:1030]INFO - sensors state-->['143', '15', '6', '128', '255', '255']
08/16/2022 06:01:13 PM daemon.py[line:1033]INFO - [30]
08/16/2022 06:01:13 PM daemon.py[line:111]DEBUG - send_json -> {'rep': {'device': 'm3', 'result': 'success'}}
08/16/2022 06:01:14 PM daemon.py[line:93]INFO - gui msg: {'req': {'device': 'm3', 'command': 'lock', 'lock_id': '402'}}
08/16/2022 06:01:14 PM daemon.py[line:775]INFO - para_str-->31,
08/16/2022 06:01:14 PM daemon.py[line:1008]INFO - b'ld\x01\x1f\xa4\x81'
08/16/2022 06:01:14 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 06:01:14 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 06:01:14 PM rcomm.py[line:143]INFO - data -> b'ldok\x92\x97'
08/16/2022 06:01:14 PM daemon.py[line:1025]INFO - b'li\xc8\xb3'
08/16/2022 06:01:14 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 06:01:14 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 06:01:14 PM rcomm.py[line:143]INFO - data -> b'li,143,15,6,128,255,255,\x83j'
08/16/2022 06:01:14 PM daemon.py[line:1030]INFO - sensors state-->['143', '15', '6', '128', '255', '255']
08/16/2022 06:01:14 PM daemon.py[line:1033]INFO - [31]
08/16/2022 06:01:14 PM daemon.py[line:111]DEBUG - send_json -> {'rep': {'device': 'm3', 'result': 'success'}}
08/16/2022 06:01:15 PM daemon.py[line:93]INFO - gui msg: {'req': {'device': 'm3', 'command': 'lock', 'lock_id': '403'}}
08/16/2022 06:01:15 PM daemon.py[line:775]INFO - para_str-->32,
08/16/2022 06:01:15 PM daemon.py[line:1008]INFO - b'ld\x01 \x18F'
08/16/2022 06:01:15 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 06:01:15 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 06:01:15 PM rcomm.py[line:143]INFO - data -> b'ldok\x92\x97'
08/16/2022 06:01:15 PM daemon.py[line:1025]INFO - b'li\xc8\xb3'
08/16/2022 06:01:15 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 06:01:16 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 06:01:16 PM rcomm.py[line:143]INFO - data -> b'li,143,15,6,0,255,255,\x81\x8b'
08/16/2022 06:01:16 PM daemon.py[line:1030]INFO - sensors state-->['143', '15', '6', '0', '255', '255']
08/16/2022 06:01:16 PM daemon.py[line:1033]INFO - [32]
08/16/2022 06:01:16 PM daemon.py[line:111]DEBUG - send_json -> {'rep': {'device': 'm3', 'result': 'success'}}
08/16/2022 06:01:17 PM daemon.py[line:93]INFO - gui msg: {'req': {'device': 'm3', 'command': 'lock', 'lock_id': '404'}}
08/16/2022 06:01:17 PM daemon.py[line:775]INFO - para_str-->33,
08/16/2022 06:01:17 PM daemon.py[line:1008]INFO - b'ld\x01!9V'
08/16/2022 06:01:17 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 06:01:17 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 06:01:17 PM rcomm.py[line:143]INFO - data -> b'ldok\x92\x97'
08/16/2022 06:01:17 PM daemon.py[line:1025]INFO - b'li\xc8\xb3'
08/16/2022 06:01:17 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 06:01:17 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 06:01:17 PM rcomm.py[line:143]INFO - data -> b'li,143,15,6,0,254,255,!\xce'
08/16/2022 06:01:17 PM daemon.py[line:1030]INFO - sensors state-->['143', '15', '6', '0', '254', '255']
08/16/2022 06:01:17 PM daemon.py[line:1033]INFO - [33]
08/16/2022 06:01:17 PM daemon.py[line:111]DEBUG - send_json -> {'rep': {'device': 'm3', 'result': 'success'}}
08/16/2022 06:01:18 PM daemon.py[line:93]INFO - gui msg: {'req': {'device': 'm3', 'command': 'lock', 'lock_id': '405'}}
08/16/2022 06:01:18 PM daemon.py[line:775]INFO - para_str-->34,
08/16/2022 06:01:18 PM daemon.py[line:1008]INFO - b'ld\x01"Zf'
08/16/2022 06:01:18 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 06:01:18 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 06:01:18 PM rcomm.py[line:143]INFO - data -> b'ldok\x92\x97'
08/16/2022 06:01:18 PM daemon.py[line:1025]INFO - b'li\xc8\xb3'
08/16/2022 06:01:18 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 06:01:18 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 06:01:18 PM rcomm.py[line:143]INFO - data -> b'li,143,15,6,0,252,255,\xc0C'
08/16/2022 06:01:18 PM daemon.py[line:1030]INFO - sensors state-->['143', '15', '6', '0', '252', '255']
08/16/2022 06:01:18 PM daemon.py[line:1033]INFO - [34]
08/16/2022 06:01:18 PM daemon.py[line:111]DEBUG - send_json -> {'rep': {'device': 'm3', 'result': 'success'}}
08/16/2022 06:01:19 PM daemon.py[line:93]INFO - gui msg: {'req': {'device': 'm3', 'command': 'lock', 'lock_id': '406'}}
08/16/2022 06:01:19 PM daemon.py[line:775]INFO - para_str-->35,
08/16/2022 06:01:19 PM daemon.py[line:1008]INFO - b'ld\x01#{v'
08/16/2022 06:01:19 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 06:01:19 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 06:01:19 PM rcomm.py[line:143]INFO - data -> b'ldok\x92\x97'
08/16/2022 06:01:19 PM daemon.py[line:1025]INFO - b'li\xc8\xb3'
08/16/2022 06:01:19 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 06:01:19 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 06:01:19 PM rcomm.py[line:143]INFO - data -> b'li,143,15,6,0,252,255,\xc0C'
08/16/2022 06:01:19 PM daemon.py[line:1030]INFO - sensors state-->['143', '15', '6', '0', '252', '255']
08/16/2022 06:01:19 PM daemon.py[line:1033]INFO - [35]
08/16/2022 06:01:19 PM daemon.py[line:1025]INFO - b'li\xc8\xb3'
08/16/2022 06:01:19 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 06:01:19 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 06:01:20 PM rcomm.py[line:143]INFO - data -> b'li,143,15,6,0,252,255,\xc0C'
08/16/2022 06:01:20 PM daemon.py[line:1030]INFO - sensors state-->['143', '15', '6', '0', '252', '255']
08/16/2022 06:01:20 PM daemon.py[line:1033]INFO - [35]
08/16/2022 06:01:20 PM daemon.py[line:1025]INFO - b'li\xc8\xb3'
08/16/2022 06:01:20 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 06:01:20 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 06:01:20 PM rcomm.py[line:143]INFO - data -> b'li,143,15,6,0,252,255,\xc0C'
08/16/2022 06:01:20 PM daemon.py[line:1030]INFO - sensors state-->['143', '15', '6', '0', '252', '255']
08/16/2022 06:01:20 PM daemon.py[line:1033]INFO - [35]
08/16/2022 06:01:20 PM daemon.py[line:111]DEBUG - send_json -> {'rep': {'device': 'm3', 'result': 'error', 'meta': {'35': 'CLOSE'}}}
08/16/2022 06:01:21 PM daemon.py[line:93]INFO - gui msg: {'req': {'device': 'm3', 'command': 'lock', 'lock_id': '407'}}
08/16/2022 06:01:21 PM daemon.py[line:775]INFO - para_str-->36,
08/16/2022 06:01:21 PM daemon.py[line:1008]INFO - b'ld\x01$\x9c\x06'
08/16/2022 06:01:21 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 06:01:21 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 06:01:21 PM rcomm.py[line:143]INFO - data -> b'ldok\x92\x97'
08/16/2022 06:01:21 PM daemon.py[line:1025]INFO - b'li\xc8\xb3'
08/16/2022 06:01:21 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 06:01:21 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 06:01:21 PM rcomm.py[line:143]INFO - data -> b'li,143,15,6,0,244,255,@v'
08/16/2022 06:01:21 PM daemon.py[line:1030]INFO - sensors state-->['143', '15', '6', '0', '244', '255']
08/16/2022 06:01:21 PM daemon.py[line:1033]INFO - [36]
08/16/2022 06:01:21 PM daemon.py[line:111]DEBUG - send_json -> {'rep': {'device': 'm3', 'result': 'success'}}
08/16/2022 06:01:22 PM daemon.py[line:93]INFO - gui msg: {'req': {'device': 'm3', 'command': 'lock', 'lock_id': '408'}}
08/16/2022 06:01:22 PM daemon.py[line:775]INFO - para_str-->37,
08/16/2022 06:01:22 PM daemon.py[line:1008]INFO - b'ld\x01%\xbd\x16'
08/16/2022 06:01:22 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 06:01:22 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 06:01:22 PM rcomm.py[line:143]INFO - data -> b'ldok\x92\x97'
08/16/2022 06:01:22 PM daemon.py[line:1025]INFO - b'li\xc8\xb3'
08/16/2022 06:01:22 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 06:01:22 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 06:01:22 PM rcomm.py[line:143]INFO - data -> b'li,143,15,6,0,228,255,\x86\xdc'
08/16/2022 06:01:22 PM daemon.py[line:1030]INFO - sensors state-->['143', '15', '6', '0', '228', '255']
08/16/2022 06:01:22 PM daemon.py[line:1033]INFO - [37]
08/16/2022 06:01:22 PM daemon.py[line:111]DEBUG - send_json -> {'rep': {'device': 'm3', 'result': 'success'}}
08/16/2022 06:01:23 PM daemon.py[line:93]INFO - gui msg: {'req': {'device': 'm3', 'command': 'lock', 'lock_id': '409'}}
08/16/2022 06:01:23 PM daemon.py[line:775]INFO - para_str-->38,
08/16/2022 06:01:23 PM daemon.py[line:1008]INFO - b'ld\x01&\xde&'
08/16/2022 06:01:23 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 06:01:23 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 06:01:23 PM rcomm.py[line:143]INFO - data -> b'ldok\x92\x97'
08/16/2022 06:01:24 PM daemon.py[line:1025]INFO - b'li\xc8\xb3'
08/16/2022 06:01:24 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 06:01:24 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 06:01:24 PM rcomm.py[line:143]INFO - data -> b'li,143,15,6,0,196,255,\x7f\xdf'
08/16/2022 06:01:24 PM daemon.py[line:1030]INFO - sensors state-->['143', '15', '6', '0', '196', '255']
08/16/2022 06:01:24 PM daemon.py[line:1033]INFO - [38]
08/16/2022 06:01:24 PM daemon.py[line:111]DEBUG - send_json -> {'rep': {'device': 'm3', 'result': 'success'}}
08/16/2022 06:01:25 PM daemon.py[line:93]INFO - gui msg: {'req': {'device': 'm3', 'command': 'lock', 'lock_id': '410'}}
08/16/2022 06:01:25 PM daemon.py[line:775]INFO - para_str-->39,
08/16/2022 06:01:25 PM daemon.py[line:1008]INFO - b"ld\x01'\xff6"
08/16/2022 06:01:25 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 06:01:25 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 06:01:25 PM rcomm.py[line:143]INFO - data -> b'ldok\x92\x97'
08/16/2022 06:01:25 PM daemon.py[line:1025]INFO - b'li\xc8\xb3'
08/16/2022 06:01:25 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 06:01:25 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 06:01:25 PM rcomm.py[line:143]INFO - data -> b'li,143,15,6,0,196,255,\x7f\xdf'
08/16/2022 06:01:25 PM daemon.py[line:1030]INFO - sensors state-->['143', '15', '6', '0', '196', '255']
08/16/2022 06:01:25 PM daemon.py[line:1033]INFO - [39]
08/16/2022 06:01:25 PM daemon.py[line:1025]INFO - b'li\xc8\xb3'
08/16/2022 06:01:25 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 06:01:25 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 06:01:25 PM rcomm.py[line:143]INFO - data -> b'li,143,15,6,0,196,255,\x7f\xdf'
08/16/2022 06:01:25 PM daemon.py[line:1030]INFO - sensors state-->['143', '15', '6', '0', '196', '255']
08/16/2022 06:01:25 PM daemon.py[line:1033]INFO - [39]
08/16/2022 06:01:25 PM daemon.py[line:1025]INFO - b'li\xc8\xb3'
08/16/2022 06:01:25 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 06:01:25 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 06:01:25 PM rcomm.py[line:143]INFO - data -> b'li,143,15,6,0,196,255,\x7f\xdf'
08/16/2022 06:01:25 PM daemon.py[line:1030]INFO - sensors state-->['143', '15', '6', '0', '196', '255']
08/16/2022 06:01:25 PM daemon.py[line:1033]INFO - [39]
08/16/2022 06:01:25 PM daemon.py[line:111]DEBUG - send_json -> {'rep': {'device': 'm3', 'result': 'error', 'meta': {'39': 'CLOSE'}}}
08/16/2022 06:01:26 PM daemon.py[line:93]INFO - gui msg: {'req': {'device': 'm3', 'command': 'lock', 'lock_id': '411'}}
08/16/2022 06:01:26 PM daemon.py[line:775]INFO - para_str-->40,
08/16/2022 06:01:26 PM daemon.py[line:1008]INFO - b'ld\x01(\x10\xc7'
08/16/2022 06:01:26 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 06:01:26 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 06:01:26 PM rcomm.py[line:143]INFO - data -> b'ldok\x92\x97'
08/16/2022 06:01:26 PM daemon.py[line:1025]INFO - b'li\xc8\xb3'
08/16/2022 06:01:26 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 06:01:26 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 06:01:27 PM rcomm.py[line:143]INFO - data -> b'li,143,15,6,0,196,255,\x7f\xdf'
08/16/2022 06:01:27 PM daemon.py[line:1030]INFO - sensors state-->['143', '15', '6', '0', '196', '255']
08/16/2022 06:01:27 PM daemon.py[line:1033]INFO - [40]
08/16/2022 06:01:27 PM daemon.py[line:1025]INFO - b'li\xc8\xb3'
08/16/2022 06:01:27 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 06:01:27 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 06:01:27 PM rcomm.py[line:143]INFO - data -> b'li,143,15,6,0,196,255,\x7f\xdf'
08/16/2022 06:01:27 PM daemon.py[line:1030]INFO - sensors state-->['143', '15', '6', '0', '196', '255']
08/16/2022 06:01:27 PM daemon.py[line:1033]INFO - [40]
08/16/2022 06:01:27 PM daemon.py[line:1025]INFO - b'li\xc8\xb3'
08/16/2022 06:01:27 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 06:01:27 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 06:01:27 PM rcomm.py[line:143]INFO - data -> b'li,143,15,6,0,196,255,\x7f\xdf'
08/16/2022 06:01:27 PM daemon.py[line:1030]INFO - sensors state-->['143', '15', '6', '0', '196', '255']
08/16/2022 06:01:27 PM daemon.py[line:1033]INFO - [40]
08/16/2022 06:01:27 PM daemon.py[line:111]DEBUG - send_json -> {'rep': {'device': 'm3', 'result': 'error', 'meta': {'40': 'CLOSE'}}}
08/16/2022 06:01:28 PM daemon.py[line:93]INFO - gui msg: {'req': {'device': 'm3', 'command': 'lock', 'lock_id': '412'}}
08/16/2022 06:01:28 PM daemon.py[line:775]INFO - para_str-->41,
08/16/2022 06:01:28 PM daemon.py[line:1008]INFO - b'ld\x01)1\xd7'
08/16/2022 06:01:28 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 06:01:28 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 06:01:28 PM rcomm.py[line:143]INFO - data -> b'ldok\x92\x97'
08/16/2022 06:01:28 PM daemon.py[line:1025]INFO - b'li\xc8\xb3'
08/16/2022 06:01:28 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 06:01:28 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 06:01:28 PM rcomm.py[line:143]INFO - data -> b'li,143,15,6,0,196,255,\x7f\xdf'
08/16/2022 06:01:28 PM daemon.py[line:1030]INFO - sensors state-->['143', '15', '6', '0', '196', '255']
08/16/2022 06:01:28 PM daemon.py[line:1033]INFO - [41]
08/16/2022 06:01:28 PM daemon.py[line:1025]INFO - b'li\xc8\xb3'
08/16/2022 06:01:28 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 06:01:28 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 06:01:28 PM rcomm.py[line:143]INFO - data -> b'li,143,15,6,0,196,255,\x7f\xdf'
08/16/2022 06:01:28 PM daemon.py[line:1030]INFO - sensors state-->['143', '15', '6', '0', '196', '255']
08/16/2022 06:01:28 PM daemon.py[line:1033]INFO - [41]
08/16/2022 06:01:29 PM daemon.py[line:1025]INFO - b'li\xc8\xb3'
08/16/2022 06:01:29 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 06:01:29 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 06:01:29 PM rcomm.py[line:143]INFO - data -> b'li,143,15,6,0,196,255,\x7f\xdf'
08/16/2022 06:01:29 PM daemon.py[line:1030]INFO - sensors state-->['143', '15', '6', '0', '196', '255']
08/16/2022 06:01:29 PM daemon.py[line:1033]INFO - [41]
08/16/2022 06:01:29 PM daemon.py[line:111]DEBUG - send_json -> {'rep': {'device': 'm3', 'result': 'error', 'meta': {'41': 'CLOSE'}}}
08/16/2022 06:01:30 PM daemon.py[line:93]INFO - gui msg: {'req': {'device': 'm3', 'command': 'lock', 'lock_id': '413'}}
08/16/2022 06:01:30 PM daemon.py[line:775]INFO - para_str-->42,
08/16/2022 06:01:30 PM daemon.py[line:1008]INFO - b'ld\x01*R\xe7'
08/16/2022 06:01:30 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 06:01:30 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 06:01:30 PM rcomm.py[line:143]INFO - data -> b'ldok\x92\x97'
08/16/2022 06:01:30 PM daemon.py[line:1025]INFO - b'li\xc8\xb3'
08/16/2022 06:01:30 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 06:01:30 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 06:01:30 PM rcomm.py[line:143]INFO - data -> b'li,143,15,6,0,196,253,\xd9u'
08/16/2022 06:01:30 PM daemon.py[line:1030]INFO - sensors state-->['143', '15', '6', '0', '196', '253']
08/16/2022 06:01:30 PM daemon.py[line:1033]INFO - [42]
08/16/2022 06:01:30 PM daemon.py[line:111]DEBUG - send_json -> {'rep': {'device': 'm3', 'result': 'success'}}
08/16/2022 06:01:31 PM daemon.py[line:93]INFO - gui msg: {'req': {'device': 'm3', 'command': 'lock', 'lock_id': '414'}}
08/16/2022 06:01:31 PM daemon.py[line:775]INFO - para_str-->43,
08/16/2022 06:01:31 PM daemon.py[line:1008]INFO - b'ld\x01+s\xf7'
08/16/2022 06:01:31 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 06:01:31 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 06:01:31 PM rcomm.py[line:143]INFO - data -> b'ldok\x92\x97'
08/16/2022 06:01:31 PM daemon.py[line:1025]INFO - b'li\xc8\xb3'
08/16/2022 06:01:31 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 06:01:31 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 06:01:31 PM rcomm.py[line:143]INFO - data -> b'li,143,15,6,0,196,249,"\xad'
08/16/2022 06:01:31 PM daemon.py[line:1030]INFO - sensors state-->['143', '15', '6', '0', '196', '249']
08/16/2022 06:01:31 PM daemon.py[line:1033]INFO - [43]
08/16/2022 06:01:31 PM daemon.py[line:111]DEBUG - send_json -> {'rep': {'device': 'm3', 'result': 'success'}}
08/16/2022 06:01:32 PM daemon.py[line:93]INFO - gui msg: {'req': {'device': 'm3', 'command': 'lock', 'lock_id': '415'}}
08/16/2022 06:01:32 PM daemon.py[line:775]INFO - para_str-->44,
08/16/2022 06:01:32 PM daemon.py[line:1008]INFO - b'ld\x01,\x94\x87'
08/16/2022 06:01:32 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 06:01:32 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 06:01:32 PM rcomm.py[line:143]INFO - data -> b'ldok\x92\x97'
08/16/2022 06:01:32 PM daemon.py[line:1025]INFO - b'li\xc8\xb3'
08/16/2022 06:01:32 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 06:01:32 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 06:01:32 PM rcomm.py[line:143]INFO - data -> b'li,143,15,6,0,196,249,"\xad'
08/16/2022 06:01:32 PM daemon.py[line:1030]INFO - sensors state-->['143', '15', '6', '0', '196', '249']
08/16/2022 06:01:32 PM daemon.py[line:1033]INFO - [44]
08/16/2022 06:01:33 PM daemon.py[line:1025]INFO - b'li\xc8\xb3'
08/16/2022 06:01:33 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 06:01:33 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 06:01:33 PM rcomm.py[line:143]INFO - data -> b'li,143,15,6,0,196,249,"\xad'
08/16/2022 06:01:33 PM daemon.py[line:1030]INFO - sensors state-->['143', '15', '6', '0', '196', '249']
08/16/2022 06:01:33 PM daemon.py[line:1033]INFO - [44]
08/16/2022 06:01:33 PM daemon.py[line:1025]INFO - b'li\xc8\xb3'
08/16/2022 06:01:33 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 06:01:33 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 06:01:33 PM rcomm.py[line:143]INFO - data -> b'li,143,15,6,0,196,249,"\xad'
08/16/2022 06:01:33 PM daemon.py[line:1030]INFO - sensors state-->['143', '15', '6', '0', '196', '249']
08/16/2022 06:01:33 PM daemon.py[line:1033]INFO - [44]
08/16/2022 06:01:33 PM daemon.py[line:111]DEBUG - send_json -> {'rep': {'device': 'm3', 'result': 'error', 'meta': {'44': 'CLOSE'}}}
08/16/2022 06:02:27 PM daemon.py[line:93]INFO - gui msg: {'req': {'device': 'm3', 'command': 'lock', 'lock_id': '201'}}
08/16/2022 06:02:27 PM daemon.py[line:775]INFO - para_str-->8,
08/16/2022 06:02:27 PM daemon.py[line:1008]INFO - b'ld\x01\x08r\xe3'
08/16/2022 06:02:27 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 06:02:28 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 06:02:28 PM rcomm.py[line:143]INFO - data -> b'ldok\x92\x97'
08/16/2022 06:02:28 PM daemon.py[line:1025]INFO - b'li\xc8\xb3'
08/16/2022 06:02:28 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 06:02:28 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 06:02:28 PM rcomm.py[line:143]INFO - data -> b'li,143,15,254,255,255,255,S\x85'
08/16/2022 06:02:28 PM daemon.py[line:1030]INFO - sensors state-->['143', '15', '254', '255', '255', '255']
08/16/2022 06:02:28 PM daemon.py[line:1033]INFO - [8]
08/16/2022 06:02:28 PM daemon.py[line:1025]INFO - b'li\xc8\xb3'
08/16/2022 06:02:28 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 06:02:28 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 06:02:28 PM rcomm.py[line:143]INFO - data -> b'li,143,15,254,255,255,255,S\x85'
08/16/2022 06:02:28 PM daemon.py[line:1030]INFO - sensors state-->['143', '15', '254', '255', '255', '255']
08/16/2022 06:02:28 PM daemon.py[line:1033]INFO - [8]
08/16/2022 06:02:28 PM daemon.py[line:1025]INFO - b'li\xc8\xb3'
08/16/2022 06:02:28 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 06:02:28 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 06:02:28 PM rcomm.py[line:143]INFO - data -> b'li,143,15,254,255,255,255,S\x85'
08/16/2022 06:02:28 PM daemon.py[line:1030]INFO - sensors state-->['143', '15', '254', '255', '255', '255']
08/16/2022 06:02:28 PM daemon.py[line:1033]INFO - [8]
08/16/2022 06:02:28 PM daemon.py[line:111]DEBUG - send_json -> {'rep': {'device': 'm3', 'result': 'error', 'meta': {'8': 'CLOSE'}}}
08/16/2022 06:03:01 PM daemon.py[line:93]INFO - gui msg: {'req': {'device': 'm3', 'command': 'lock', 'lock_id': '201'}}
08/16/2022 06:03:01 PM daemon.py[line:775]INFO - para_str-->8,
08/16/2022 06:03:01 PM daemon.py[line:1008]INFO - b'ld\x01\x08r\xe3'
08/16/2022 06:03:01 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 06:03:01 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 06:03:01 PM rcomm.py[line:143]INFO - data -> b'ldok\x92\x97'
08/16/2022 06:03:01 PM daemon.py[line:1025]INFO - b'li\xc8\xb3'
08/16/2022 06:03:01 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 06:03:01 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 06:03:01 PM rcomm.py[line:143]INFO - data -> b'li,143,15,254,255,255,255,S\x85'
08/16/2022 06:03:01 PM daemon.py[line:1030]INFO - sensors state-->['143', '15', '254', '255', '255', '255']
08/16/2022 06:03:01 PM daemon.py[line:1033]INFO - [8]
08/16/2022 06:03:01 PM daemon.py[line:1025]INFO - b'li\xc8\xb3'
08/16/2022 06:03:01 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 06:03:01 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 06:03:01 PM rcomm.py[line:143]INFO - data -> b'li,143,15,254,255,255,255,S\x85'
08/16/2022 06:03:01 PM daemon.py[line:1030]INFO - sensors state-->['143', '15', '254', '255', '255', '255']
08/16/2022 06:03:01 PM daemon.py[line:1033]INFO - [8]
08/16/2022 06:03:01 PM daemon.py[line:1025]INFO - b'li\xc8\xb3'
08/16/2022 06:03:01 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 06:03:01 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 06:03:01 PM rcomm.py[line:143]INFO - data -> b'li,143,15,254,255,255,255,S\x85'
08/16/2022 06:03:01 PM daemon.py[line:1030]INFO - sensors state-->['143', '15', '254', '255', '255', '255']
08/16/2022 06:03:01 PM daemon.py[line:1033]INFO - [8]
08/16/2022 06:03:01 PM daemon.py[line:111]DEBUG - send_json -> {'rep': {'device': 'm3', 'result': 'error', 'meta': {'8': 'CLOSE'}}}
08/16/2022 06:03:02 PM daemon.py[line:93]INFO - gui msg: {'req': {'device': 'm3', 'command': 'lock', 'lock_id': '201'}}
08/16/2022 06:03:02 PM daemon.py[line:775]INFO - para_str-->8,
08/16/2022 06:03:02 PM daemon.py[line:1008]INFO - b'ld\x01\x08r\xe3'
08/16/2022 06:03:02 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 06:03:02 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 06:03:02 PM rcomm.py[line:143]INFO - data -> b'ldok\x92\x97'
08/16/2022 06:03:02 PM daemon.py[line:1025]INFO - b'li\xc8\xb3'
08/16/2022 06:03:02 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 06:03:02 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 06:03:02 PM rcomm.py[line:143]INFO - data -> b'li,143,15,254,255,255,255,S\x85'
08/16/2022 06:03:02 PM daemon.py[line:1030]INFO - sensors state-->['143', '15', '254', '255', '255', '255']
08/16/2022 06:03:02 PM daemon.py[line:1033]INFO - [8]
08/16/2022 06:03:02 PM daemon.py[line:1025]INFO - b'li\xc8\xb3'
08/16/2022 06:03:02 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 06:03:02 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 06:03:02 PM rcomm.py[line:143]INFO - data -> b'li,143,15,254,255,255,255,S\x85'
08/16/2022 06:03:02 PM daemon.py[line:1030]INFO - sensors state-->['143', '15', '254', '255', '255', '255']
08/16/2022 06:03:02 PM daemon.py[line:1033]INFO - [8]
08/16/2022 06:03:02 PM daemon.py[line:1025]INFO - b'li\xc8\xb3'
08/16/2022 06:03:02 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 06:03:02 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 06:03:02 PM rcomm.py[line:143]INFO - data -> b'li,143,15,254,255,255,255,S\x85'
08/16/2022 06:03:02 PM daemon.py[line:1030]INFO - sensors state-->['143', '15', '254', '255', '255', '255']
08/16/2022 06:03:02 PM daemon.py[line:1033]INFO - [8]
08/16/2022 06:03:03 PM daemon.py[line:111]DEBUG - send_json -> {'rep': {'device': 'm3', 'result': 'error', 'meta': {'8': 'CLOSE'}}}
08/16/2022 06:03:03 PM daemon.py[line:93]INFO - gui msg: {'req': {'device': 'm3', 'command': 'lock', 'lock_id': '201'}}
08/16/2022 06:03:03 PM daemon.py[line:775]INFO - para_str-->8,
08/16/2022 06:03:03 PM daemon.py[line:1008]INFO - b'ld\x01\x08r\xe3'
08/16/2022 06:03:03 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 06:03:03 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 06:03:03 PM rcomm.py[line:143]INFO - data -> b'ldok\x92\x97'
08/16/2022 06:03:03 PM daemon.py[line:1025]INFO - b'li\xc8\xb3'
08/16/2022 06:03:03 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 06:03:03 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 06:03:03 PM rcomm.py[line:143]INFO - data -> b'li,143,15,254,255,255,255,S\x85'
08/16/2022 06:03:03 PM daemon.py[line:1030]INFO - sensors state-->['143', '15', '254', '255', '255', '255']
08/16/2022 06:03:03 PM daemon.py[line:1033]INFO - [8]
08/16/2022 06:03:03 PM daemon.py[line:1025]INFO - b'li\xc8\xb3'
08/16/2022 06:03:03 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 06:03:03 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 06:03:03 PM rcomm.py[line:143]INFO - data -> b'li,143,15,254,255,255,255,S\x85'
08/16/2022 06:03:03 PM daemon.py[line:1030]INFO - sensors state-->['143', '15', '254', '255', '255', '255']
08/16/2022 06:03:03 PM daemon.py[line:1033]INFO - [8]
08/16/2022 06:03:03 PM daemon.py[line:1025]INFO - b'li\xc8\xb3'
08/16/2022 06:03:03 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 06:03:03 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 06:03:04 PM rcomm.py[line:143]INFO - data -> b'li,143,15,254,255,255,255,S\x85'
08/16/2022 06:03:04 PM daemon.py[line:1030]INFO - sensors state-->['143', '15', '254', '255', '255', '255']
08/16/2022 06:03:04 PM daemon.py[line:1033]INFO - [8]
08/16/2022 06:03:04 PM daemon.py[line:111]DEBUG - send_json -> {'rep': {'device': 'm3', 'result': 'error', 'meta': {'8': 'CLOSE'}}}
08/16/2022 06:03:46 PM daemon.py[line:93]INFO - gui msg: {'req': {'device': 'm3', 'command': 'lock', 'lock_id': '201'}}
08/16/2022 06:03:46 PM daemon.py[line:775]INFO - para_str-->8,
08/16/2022 06:03:46 PM daemon.py[line:1008]INFO - b'ld\x01\x08r\xe3'
08/16/2022 06:03:46 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 06:03:46 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 06:03:46 PM rcomm.py[line:143]INFO - data -> b'ldok\x92\x97'
08/16/2022 06:03:46 PM daemon.py[line:1025]INFO - b'li\xc8\xb3'
08/16/2022 06:03:46 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 06:03:46 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 06:03:46 PM rcomm.py[line:143]INFO - data -> b'li,143,14,254,255,255,255,bu'
08/16/2022 06:03:46 PM daemon.py[line:1030]INFO - sensors state-->['143', '14', '254', '255', '255', '255']
08/16/2022 06:03:46 PM daemon.py[line:1033]INFO - [8]
08/16/2022 06:03:46 PM daemon.py[line:1025]INFO - b'li\xc8\xb3'
08/16/2022 06:03:46 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 06:03:46 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 06:03:46 PM rcomm.py[line:143]INFO - data -> b'li,143,14,254,255,255,255,bu'
08/16/2022 06:03:46 PM daemon.py[line:1030]INFO - sensors state-->['143', '14', '254', '255', '255', '255']
08/16/2022 06:03:46 PM daemon.py[line:1033]INFO - [8]
08/16/2022 06:03:46 PM daemon.py[line:1025]INFO - b'li\xc8\xb3'
08/16/2022 06:03:46 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 06:03:46 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 06:03:46 PM rcomm.py[line:143]INFO - data -> b'li,143,14,254,255,255,255,bu'
08/16/2022 06:03:46 PM daemon.py[line:1030]INFO - sensors state-->['143', '14', '254', '255', '255', '255']
08/16/2022 06:03:46 PM daemon.py[line:1033]INFO - [8]
08/16/2022 06:03:46 PM daemon.py[line:111]DEBUG - send_json -> {'rep': {'device': 'm3', 'result': 'error', 'meta': {'8': 'CLOSE'}}}
08/16/2022 06:03:48 PM daemon.py[line:93]INFO - gui msg: {'req': {'device': 'm3', 'command': 'lock', 'lock_id': '201'}}
08/16/2022 06:03:48 PM daemon.py[line:775]INFO - para_str-->8,
08/16/2022 06:03:48 PM daemon.py[line:1008]INFO - b'ld\x01\x08r\xe3'
08/16/2022 06:03:48 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 06:03:48 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 06:03:48 PM rcomm.py[line:143]INFO - data -> b'ldok\x92\x97'
08/16/2022 06:03:48 PM daemon.py[line:1025]INFO - b'li\xc8\xb3'
08/16/2022 06:03:48 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 06:03:48 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 06:03:48 PM rcomm.py[line:143]INFO - data -> b'li,143,14,254,255,255,255,bu'
08/16/2022 06:03:48 PM daemon.py[line:1030]INFO - sensors state-->['143', '14', '254', '255', '255', '255']
08/16/2022 06:03:48 PM daemon.py[line:1033]INFO - [8]
08/16/2022 06:03:48 PM daemon.py[line:1025]INFO - b'li\xc8\xb3'
08/16/2022 06:03:48 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 06:03:48 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 06:03:48 PM rcomm.py[line:143]INFO - data -> b'li,143,14,254,255,255,255,bu'
08/16/2022 06:03:48 PM daemon.py[line:1030]INFO - sensors state-->['143', '14', '254', '255', '255', '255']
08/16/2022 06:03:48 PM daemon.py[line:1033]INFO - [8]
08/16/2022 06:03:48 PM daemon.py[line:1025]INFO - b'li\xc8\xb3'
08/16/2022 06:03:48 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 06:03:49 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 06:03:49 PM rcomm.py[line:143]INFO - data -> b'li,143,14,254,255,255,255,bu'
08/16/2022 06:03:49 PM daemon.py[line:1030]INFO - sensors state-->['143', '14', '254', '255', '255', '255']
08/16/2022 06:03:49 PM daemon.py[line:1033]INFO - [8]
08/16/2022 06:03:49 PM daemon.py[line:111]DEBUG - send_json -> {'rep': {'device': 'm3', 'result': 'error', 'meta': {'8': 'CLOSE'}}}
08/16/2022 06:03:55 PM daemon.py[line:93]INFO - gui msg: {'req': {'device': 'm3', 'command': 'lock', 'lock_id': '202'}}
08/16/2022 06:03:55 PM daemon.py[line:775]INFO - para_str-->9,
08/16/2022 06:03:55 PM daemon.py[line:1008]INFO - b'ld\x01\tS\xf3'
08/16/2022 06:03:55 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 06:03:55 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 06:03:55 PM rcomm.py[line:143]INFO - data -> b'ldok\x92\x97'
08/16/2022 06:03:55 PM daemon.py[line:1025]INFO - b'li\xc8\xb3'
08/16/2022 06:03:55 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 06:03:55 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 06:03:55 PM rcomm.py[line:143]INFO - data -> b'li,143,14,254,255,255,255,bu'
08/16/2022 06:03:55 PM daemon.py[line:1030]INFO - sensors state-->['143', '14', '254', '255', '255', '255']
08/16/2022 06:03:55 PM daemon.py[line:1033]INFO - [9]
08/16/2022 06:03:55 PM daemon.py[line:111]DEBUG - send_json -> {'rep': {'device': 'm3', 'result': 'success'}}
08/16/2022 06:03:59 PM serv.py[line:49]INFO - serv heatbeat
08/16/2022 06:05:56 PM daemon.py[line:93]INFO - gui msg: {'req': {'device': 'm3', 'command': 'lock', 'lock_id': '107'}}
08/16/2022 06:05:56 PM daemon.py[line:775]INFO - para_str-->7,
08/16/2022 06:05:56 PM daemon.py[line:1008]INFO - b'ld\x01\x07\x9d\x12'
08/16/2022 06:05:56 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 06:05:56 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 06:05:56 PM rcomm.py[line:143]INFO - data -> b'ldok\x92\x97'
08/16/2022 06:05:56 PM daemon.py[line:1025]INFO - b'li\xc8\xb3'
08/16/2022 06:05:56 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 06:05:56 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 06:05:56 PM rcomm.py[line:143]INFO - data -> b'li,143,14,254,255,255,255,bu'
08/16/2022 06:05:56 PM daemon.py[line:1030]INFO - sensors state-->['143', '14', '254', '255', '255', '255']
08/16/2022 06:05:56 PM daemon.py[line:1033]INFO - [7]
08/16/2022 06:05:56 PM daemon.py[line:111]DEBUG - send_json -> {'rep': {'device': 'm3', 'result': 'success'}}
08/16/2022 06:08:25 PM daemon.py[line:93]INFO - gui msg: {'req': {'device': 'm3', 'command': 'lock', 'lock_id': '201'}}
08/16/2022 06:08:25 PM daemon.py[line:775]INFO - para_str-->8,
08/16/2022 06:08:25 PM daemon.py[line:1008]INFO - b'ld\x01\x08r\xe3'
08/16/2022 06:08:25 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 06:08:25 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 06:08:25 PM rcomm.py[line:143]INFO - data -> b'ldok\x92\x97'
08/16/2022 06:08:25 PM daemon.py[line:1025]INFO - b'li\xc8\xb3'
08/16/2022 06:08:25 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 06:08:25 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 06:08:25 PM rcomm.py[line:143]INFO - data -> b'li,79,14,254,255,255,255,K&'
08/16/2022 06:08:25 PM daemon.py[line:1030]INFO - sensors state-->['79', '14', '254', '255', '255', '255']
08/16/2022 06:08:25 PM daemon.py[line:1033]INFO - [8]
08/16/2022 06:08:25 PM daemon.py[line:111]DEBUG - send_json -> {'rep': {'device': 'm3', 'result': 'success'}}
08/16/2022 06:08:26 PM daemon.py[line:93]INFO - gui msg: {'req': {'device': 'm3', 'command': 'lock', 'lock_id': '201'}}
08/16/2022 06:08:26 PM daemon.py[line:775]INFO - para_str-->8,
08/16/2022 06:08:26 PM daemon.py[line:1008]INFO - b'ld\x01\x08r\xe3'
08/16/2022 06:08:26 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 06:08:26 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 06:08:26 PM rcomm.py[line:143]INFO - data -> b'ldok\x92\x97'
08/16/2022 06:08:26 PM daemon.py[line:1025]INFO - b'li\xc8\xb3'
08/16/2022 06:08:26 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 06:08:26 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 06:08:26 PM rcomm.py[line:143]INFO - data -> b'li,79,14,254,255,255,255,K&'
08/16/2022 06:08:26 PM daemon.py[line:1030]INFO - sensors state-->['79', '14', '254', '255', '255', '255']
08/16/2022 06:08:26 PM daemon.py[line:1033]INFO - [8]
08/16/2022 06:08:26 PM daemon.py[line:111]DEBUG - send_json -> {'rep': {'device': 'm3', 'result': 'success'}}
08/16/2022 06:08:27 PM daemon.py[line:93]INFO - gui msg: {'req': {'device': 'm3', 'command': 'lock', 'lock_id': '201'}}
08/16/2022 06:08:27 PM daemon.py[line:775]INFO - para_str-->8,
08/16/2022 06:08:27 PM daemon.py[line:1008]INFO - b'ld\x01\x08r\xe3'
08/16/2022 06:08:27 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 06:08:27 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 06:08:27 PM rcomm.py[line:143]INFO - data -> b'ldok\x92\x97'
08/16/2022 06:08:27 PM daemon.py[line:1025]INFO - b'li\xc8\xb3'
08/16/2022 06:08:27 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 06:08:27 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 06:08:27 PM rcomm.py[line:143]INFO - data -> b'li,79,14,254,255,255,255,K&'
08/16/2022 06:08:27 PM daemon.py[line:1030]INFO - sensors state-->['79', '14', '254', '255', '255', '255']
08/16/2022 06:08:27 PM daemon.py[line:1033]INFO - [8]
08/16/2022 06:08:27 PM daemon.py[line:111]DEBUG - send_json -> {'rep': {'device': 'm3', 'result': 'success'}}
08/16/2022 06:12:15 PM daemon.py[line:93]INFO - gui msg: {'req': {'device': 'm3', 'command': 'lock', 'lock_id': '401'}}
08/16/2022 06:12:15 PM daemon.py[line:775]INFO - para_str-->30,
08/16/2022 06:12:15 PM daemon.py[line:1008]INFO - b'ld\x01\x1e\x85\x91'
08/16/2022 06:12:15 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 06:12:15 PM daemon.py[line:1018]ERROR - no ack
08/16/2022 06:12:15 PM daemon.py[line:1025]INFO - b'li\xc8\xb3'
08/16/2022 06:12:15 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 06:12:16 PM daemon.py[line:1042]INFO - no ack
08/16/2022 06:12:16 PM daemon.py[line:97]ERROR - failed to process json: 'bool' object has no attribute 'values'
08/16/2022 06:12:17 PM daemon.py[line:93]INFO - gui msg: {'req': {'device': 'm3', 'command': 'lock', 'lock_id': '402'}}
08/16/2022 06:12:17 PM daemon.py[line:775]INFO - para_str-->31,
08/16/2022 06:12:17 PM daemon.py[line:1008]INFO - b'ld\x01\x1f\xa4\x81'
08/16/2022 06:12:17 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 06:12:17 PM daemon.py[line:1018]ERROR - no ack
08/16/2022 06:12:17 PM daemon.py[line:1025]INFO - b'li\xc8\xb3'
08/16/2022 06:12:17 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 06:12:18 PM daemon.py[line:1042]INFO - no ack
08/16/2022 06:12:18 PM daemon.py[line:97]ERROR - failed to process json: 'bool' object has no attribute 'values'
08/16/2022 06:12:33 PM daemon.py[line:93]INFO - gui msg: {'req': {'device': 'm3', 'command': 'lock', 'lock_id': '401'}}
08/16/2022 06:12:33 PM daemon.py[line:775]INFO - para_str-->30,
08/16/2022 06:12:33 PM daemon.py[line:1008]INFO - b'ld\x01\x1e\x85\x91'
08/16/2022 06:12:33 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 06:12:33 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 06:12:33 PM rcomm.py[line:143]INFO - data -> b'ldok\x92\x97'
08/16/2022 06:12:33 PM daemon.py[line:1025]INFO - b'li\xc8\xb3'
08/16/2022 06:12:33 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 06:12:33 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 06:12:33 PM rcomm.py[line:143]INFO - data -> b'li,79,14,254,223,255,255,I|'
08/16/2022 06:12:33 PM daemon.py[line:1030]INFO - sensors state-->['79', '14', '254', '223', '255', '255']
08/16/2022 06:12:33 PM daemon.py[line:1033]INFO - [30]
08/16/2022 06:12:33 PM daemon.py[line:111]DEBUG - send_json -> {'rep': {'device': 'm3', 'result': 'success'}}
08/16/2022 06:12:34 PM daemon.py[line:93]INFO - gui msg: {'req': {'device': 'm3', 'command': 'lock', 'lock_id': '402'}}
08/16/2022 06:12:34 PM daemon.py[line:775]INFO - para_str-->31,
08/16/2022 06:12:34 PM daemon.py[line:1008]INFO - b'ld\x01\x1f\xa4\x81'
08/16/2022 06:12:34 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 06:12:34 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 06:12:34 PM rcomm.py[line:143]INFO - data -> b'ldok\x92\x97'
08/16/2022 06:12:34 PM daemon.py[line:1025]INFO - b'li\xc8\xb3'
08/16/2022 06:12:34 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 06:12:34 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 06:12:34 PM rcomm.py[line:143]INFO - data -> b'li,79,14,254,159,255,255,\xaa\xc4'
08/16/2022 06:12:34 PM daemon.py[line:1030]INFO - sensors state-->['79', '14', '254', '159', '255', '255']
08/16/2022 06:12:34 PM daemon.py[line:1033]INFO - [31]
08/16/2022 06:12:34 PM daemon.py[line:111]DEBUG - send_json -> {'rep': {'device': 'm3', 'result': 'success'}}
08/16/2022 06:12:35 PM daemon.py[line:93]INFO - gui msg: {'req': {'device': 'm3', 'command': 'lock', 'lock_id': '403'}}
08/16/2022 06:12:35 PM daemon.py[line:775]INFO - para_str-->32,
08/16/2022 06:12:35 PM daemon.py[line:1008]INFO - b'ld\x01 \x18F'
08/16/2022 06:12:35 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 06:12:35 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 06:12:35 PM rcomm.py[line:143]INFO - data -> b'ldok\x92\x97'
08/16/2022 06:12:36 PM daemon.py[line:1025]INFO - b'li\xc8\xb3'
08/16/2022 06:12:36 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 06:12:36 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 06:12:36 PM rcomm.py[line:143]INFO - data -> b'li,79,14,254,31,255,255,\x7fH'
08/16/2022 06:12:36 PM daemon.py[line:1030]INFO - sensors state-->['79', '14', '254', '31', '255', '255']
08/16/2022 06:12:36 PM daemon.py[line:1033]INFO - [32]
08/16/2022 06:12:36 PM daemon.py[line:111]DEBUG - send_json -> {'rep': {'device': 'm3', 'result': 'success'}}
08/16/2022 06:12:37 PM daemon.py[line:93]INFO - gui msg: {'req': {'device': 'm3', 'command': 'lock', 'lock_id': '404'}}
08/16/2022 06:12:37 PM daemon.py[line:775]INFO - para_str-->33,
08/16/2022 06:12:37 PM daemon.py[line:1008]INFO - b'ld\x01!9V'
08/16/2022 06:12:37 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 06:12:37 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 06:12:37 PM rcomm.py[line:143]INFO - data -> b'ldok\x92\x97'
08/16/2022 06:12:37 PM daemon.py[line:1025]INFO - b'li\xc8\xb3'
08/16/2022 06:12:37 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 06:12:37 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 06:12:37 PM rcomm.py[line:143]INFO - data -> b'li,79,14,254,31,254,255,\xdf\r'
08/16/2022 06:12:37 PM daemon.py[line:1030]INFO - sensors state-->['79', '14', '254', '31', '254', '255']
08/16/2022 06:12:37 PM daemon.py[line:1033]INFO - [33]
08/16/2022 06:12:37 PM daemon.py[line:111]DEBUG - send_json -> {'rep': {'device': 'm3', 'result': 'success'}}
08/16/2022 06:12:38 PM daemon.py[line:93]INFO - gui msg: {'req': {'device': 'm3', 'command': 'lock', 'lock_id': '405'}}
08/16/2022 06:12:38 PM daemon.py[line:775]INFO - para_str-->34,
08/16/2022 06:12:38 PM daemon.py[line:1008]INFO - b'ld\x01"Zf'
08/16/2022 06:12:38 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 06:12:38 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 06:12:38 PM rcomm.py[line:143]INFO - data -> b'ldok\x92\x97'
08/16/2022 06:12:38 PM daemon.py[line:1025]INFO - b'li\xc8\xb3'
08/16/2022 06:12:38 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 06:12:38 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 06:12:38 PM rcomm.py[line:143]INFO - data -> b'li,79,14,254,31,252,255,>\x80'
08/16/2022 06:12:38 PM daemon.py[line:1030]INFO - sensors state-->['79', '14', '254', '31', '252', '255']
08/16/2022 06:12:38 PM daemon.py[line:1033]INFO - [34]
08/16/2022 06:12:38 PM daemon.py[line:111]DEBUG - send_json -> {'rep': {'device': 'm3', 'result': 'success'}}
08/16/2022 06:12:39 PM daemon.py[line:93]INFO - gui msg: {'req': {'device': 'm3', 'command': 'lock', 'lock_id': '406'}}
08/16/2022 06:12:39 PM daemon.py[line:775]INFO - para_str-->35,
08/16/2022 06:12:39 PM daemon.py[line:1008]INFO - b'ld\x01#{v'
08/16/2022 06:12:39 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 06:12:39 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 06:12:39 PM rcomm.py[line:143]INFO - data -> b'ldok\x92\x97'
08/16/2022 06:12:39 PM daemon.py[line:1025]INFO - b'li\xc8\xb3'
08/16/2022 06:12:39 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 06:12:39 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 06:12:39 PM rcomm.py[line:143]INFO - data -> b'li,79,14,254,31,252,255,>\x80'
08/16/2022 06:12:39 PM daemon.py[line:1030]INFO - sensors state-->['79', '14', '254', '31', '252', '255']
08/16/2022 06:12:39 PM daemon.py[line:1033]INFO - [35]
08/16/2022 06:12:40 PM daemon.py[line:1025]INFO - b'li\xc8\xb3'
08/16/2022 06:12:40 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 06:12:40 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 06:12:40 PM rcomm.py[line:143]INFO - data -> b'li,79,14,254,31,252,255,>\x80'
08/16/2022 06:12:40 PM daemon.py[line:1030]INFO - sensors state-->['79', '14', '254', '31', '252', '255']
08/16/2022 06:12:40 PM daemon.py[line:1033]INFO - [35]
08/16/2022 06:12:40 PM daemon.py[line:1025]INFO - b'li\xc8\xb3'
08/16/2022 06:12:40 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 06:12:40 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 06:12:40 PM rcomm.py[line:143]INFO - data -> b'li,79,14,254,31,252,255,>\x80'
08/16/2022 06:12:40 PM daemon.py[line:1030]INFO - sensors state-->['79', '14', '254', '31', '252', '255']
08/16/2022 06:12:40 PM daemon.py[line:1033]INFO - [35]
08/16/2022 06:12:40 PM daemon.py[line:111]DEBUG - send_json -> {'rep': {'device': 'm3', 'result': 'error', 'meta': {'35': 'CLOSE'}}}
08/16/2022 06:12:41 PM daemon.py[line:93]INFO - gui msg: {'req': {'device': 'm3', 'command': 'lock', 'lock_id': '407'}}
08/16/2022 06:12:41 PM daemon.py[line:775]INFO - para_str-->36,
08/16/2022 06:12:41 PM daemon.py[line:1008]INFO - b'ld\x01$\x9c\x06'
08/16/2022 06:12:41 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 06:12:41 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 06:12:41 PM rcomm.py[line:143]INFO - data -> b'ldok\x92\x97'
08/16/2022 06:12:41 PM daemon.py[line:1025]INFO - b'li\xc8\xb3'
08/16/2022 06:12:41 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 06:12:41 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 06:12:41 PM rcomm.py[line:143]INFO - data -> b'li,79,14,254,31,244,255,\xbe\xb5'
08/16/2022 06:12:41 PM daemon.py[line:1030]INFO - sensors state-->['79', '14', '254', '31', '244', '255']
08/16/2022 06:12:41 PM daemon.py[line:1033]INFO - [36]
08/16/2022 06:12:41 PM daemon.py[line:111]DEBUG - send_json -> {'rep': {'device': 'm3', 'result': 'success'}}
08/16/2022 06:12:42 PM daemon.py[line:93]INFO - gui msg: {'req': {'device': 'm3', 'command': 'lock', 'lock_id': '408'}}
08/16/2022 06:12:42 PM daemon.py[line:775]INFO - para_str-->37,
08/16/2022 06:12:42 PM daemon.py[line:1008]INFO - b'ld\x01%\xbd\x16'
08/16/2022 06:12:42 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 06:12:42 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 06:12:42 PM rcomm.py[line:143]INFO - data -> b'ldok\x92\x97'
08/16/2022 06:12:42 PM daemon.py[line:1025]INFO - b'li\xc8\xb3'
08/16/2022 06:12:42 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 06:12:42 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 06:12:42 PM rcomm.py[line:143]INFO - data -> b'li,79,14,254,31,228,255,x\x1f'
08/16/2022 06:12:42 PM daemon.py[line:1030]INFO - sensors state-->['79', '14', '254', '31', '228', '255']
08/16/2022 06:12:42 PM daemon.py[line:1033]INFO - [37]
08/16/2022 06:12:42 PM daemon.py[line:111]DEBUG - send_json -> {'rep': {'device': 'm3', 'result': 'success'}}
08/16/2022 06:12:43 PM daemon.py[line:93]INFO - gui msg: {'req': {'device': 'm3', 'command': 'lock', 'lock_id': '409'}}
08/16/2022 06:12:43 PM daemon.py[line:775]INFO - para_str-->38,
08/16/2022 06:12:43 PM daemon.py[line:1008]INFO - b'ld\x01&\xde&'
08/16/2022 06:12:43 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 06:12:43 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 06:12:43 PM rcomm.py[line:143]INFO - data -> b'ldok\x92\x97'
08/16/2022 06:12:44 PM daemon.py[line:1025]INFO - b'li\xc8\xb3'
08/16/2022 06:12:44 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 06:12:44 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 06:12:44 PM rcomm.py[line:143]INFO - data -> b'li,79,14,254,31,196,255,\x81\x1c'
08/16/2022 06:12:44 PM daemon.py[line:1030]INFO - sensors state-->['79', '14', '254', '31', '196', '255']
08/16/2022 06:12:44 PM daemon.py[line:1033]INFO - [38]
08/16/2022 06:12:44 PM daemon.py[line:111]DEBUG - send_json -> {'rep': {'device': 'm3', 'result': 'success'}}
08/16/2022 06:12:45 PM daemon.py[line:93]INFO - gui msg: {'req': {'device': 'm3', 'command': 'lock', 'lock_id': '410'}}
08/16/2022 06:12:45 PM daemon.py[line:775]INFO - para_str-->39,
08/16/2022 06:12:45 PM daemon.py[line:1008]INFO - b"ld\x01'\xff6"
08/16/2022 06:12:45 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 06:12:45 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 06:12:45 PM rcomm.py[line:143]INFO - data -> b'ldok\x92\x97'
08/16/2022 06:12:45 PM daemon.py[line:1025]INFO - b'li\xc8\xb3'
08/16/2022 06:12:45 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 06:12:45 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 06:12:45 PM rcomm.py[line:143]INFO - data -> b'li,79,14,254,31,196,255,\x81\x1c'
08/16/2022 06:12:45 PM daemon.py[line:1030]INFO - sensors state-->['79', '14', '254', '31', '196', '255']
08/16/2022 06:12:45 PM daemon.py[line:1033]INFO - [39]
08/16/2022 06:12:45 PM daemon.py[line:1025]INFO - b'li\xc8\xb3'
08/16/2022 06:12:45 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 06:12:45 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 06:12:45 PM rcomm.py[line:143]INFO - data -> b'li,79,14,254,31,196,255,\x81\x1c'
08/16/2022 06:12:45 PM daemon.py[line:1030]INFO - sensors state-->['79', '14', '254', '31', '196', '255']
08/16/2022 06:12:45 PM daemon.py[line:1033]INFO - [39]
08/16/2022 06:12:45 PM daemon.py[line:1025]INFO - b'li\xc8\xb3'
08/16/2022 06:12:45 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 06:12:45 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 06:12:45 PM rcomm.py[line:143]INFO - data -> b'li,79,14,254,31,196,255,\x81\x1c'
08/16/2022 06:12:45 PM daemon.py[line:1030]INFO - sensors state-->['79', '14', '254', '31', '196', '255']
08/16/2022 06:12:45 PM daemon.py[line:1033]INFO - [39]
08/16/2022 06:12:45 PM daemon.py[line:111]DEBUG - send_json -> {'rep': {'device': 'm3', 'result': 'error', 'meta': {'39': 'CLOSE'}}}
08/16/2022 06:12:46 PM daemon.py[line:93]INFO - gui msg: {'req': {'device': 'm3', 'command': 'lock', 'lock_id': '411'}}
08/16/2022 06:12:46 PM daemon.py[line:775]INFO - para_str-->40,
08/16/2022 06:12:46 PM daemon.py[line:1008]INFO - b'ld\x01(\x10\xc7'
08/16/2022 06:12:46 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 06:12:46 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 06:12:46 PM rcomm.py[line:143]INFO - data -> b'ldok\x92\x97'
08/16/2022 06:12:47 PM daemon.py[line:1025]INFO - b'li\xc8\xb3'
08/16/2022 06:12:47 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 06:12:47 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 06:12:47 PM rcomm.py[line:143]INFO - data -> b'li,79,14,254,31,196,255,\x81\x1c'
08/16/2022 06:12:47 PM daemon.py[line:1030]INFO - sensors state-->['79', '14', '254', '31', '196', '255']
08/16/2022 06:12:47 PM daemon.py[line:1033]INFO - [40]
08/16/2022 06:12:47 PM daemon.py[line:1025]INFO - b'li\xc8\xb3'
08/16/2022 06:12:47 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 06:12:47 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 06:12:47 PM rcomm.py[line:143]INFO - data -> b'li,79,14,254,31,196,255,\x81\x1c'
08/16/2022 06:12:47 PM daemon.py[line:1030]INFO - sensors state-->['79', '14', '254', '31', '196', '255']
08/16/2022 06:12:47 PM daemon.py[line:1033]INFO - [40]
08/16/2022 06:12:47 PM daemon.py[line:1025]INFO - b'li\xc8\xb3'
08/16/2022 06:12:47 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 06:12:47 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 06:12:47 PM rcomm.py[line:143]INFO - data -> b'li,79,14,254,31,196,255,\x81\x1c'
08/16/2022 06:12:47 PM daemon.py[line:1030]INFO - sensors state-->['79', '14', '254', '31', '196', '255']
08/16/2022 06:12:47 PM daemon.py[line:1033]INFO - [40]
08/16/2022 06:12:47 PM daemon.py[line:111]DEBUG - send_json -> {'rep': {'device': 'm3', 'result': 'error', 'meta': {'40': 'CLOSE'}}}
08/16/2022 06:12:48 PM daemon.py[line:93]INFO - gui msg: {'req': {'device': 'm3', 'command': 'lock', 'lock_id': '412'}}
08/16/2022 06:12:48 PM daemon.py[line:775]INFO - para_str-->41,
08/16/2022 06:12:48 PM daemon.py[line:1008]INFO - b'ld\x01)1\xd7'
08/16/2022 06:12:48 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 06:12:48 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 06:12:48 PM rcomm.py[line:143]INFO - data -> b'ldok\x92\x97'
08/16/2022 06:12:48 PM daemon.py[line:1025]INFO - b'li\xc8\xb3'
08/16/2022 06:12:48 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 06:12:48 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 06:12:48 PM rcomm.py[line:143]INFO - data -> b'li,79,14,254,31,196,255,\x81\x1c'
08/16/2022 06:12:48 PM daemon.py[line:1030]INFO - sensors state-->['79', '14', '254', '31', '196', '255']
08/16/2022 06:12:48 PM daemon.py[line:1033]INFO - [41]
08/16/2022 06:12:48 PM daemon.py[line:1025]INFO - b'li\xc8\xb3'
08/16/2022 06:12:48 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 06:12:48 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 06:12:49 PM rcomm.py[line:143]INFO - data -> b'li,79,14,254,31,196,255,\x81\x1c'
08/16/2022 06:12:49 PM daemon.py[line:1030]INFO - sensors state-->['79', '14', '254', '31', '196', '255']
08/16/2022 06:12:49 PM daemon.py[line:1033]INFO - [41]
08/16/2022 06:12:49 PM daemon.py[line:1025]INFO - b'li\xc8\xb3'
08/16/2022 06:12:49 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 06:12:49 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 06:12:49 PM rcomm.py[line:143]INFO - data -> b'li,79,14,254,31,196,255,\x81\x1c'
08/16/2022 06:12:49 PM daemon.py[line:1030]INFO - sensors state-->['79', '14', '254', '31', '196', '255']
08/16/2022 06:12:49 PM daemon.py[line:1033]INFO - [41]
08/16/2022 06:12:49 PM daemon.py[line:111]DEBUG - send_json -> {'rep': {'device': 'm3', 'result': 'error', 'meta': {'41': 'CLOSE'}}}
08/16/2022 06:12:50 PM daemon.py[line:93]INFO - gui msg: {'req': {'device': 'm3', 'command': 'lock', 'lock_id': '413'}}
08/16/2022 06:12:50 PM daemon.py[line:775]INFO - para_str-->42,
08/16/2022 06:12:50 PM daemon.py[line:1008]INFO - b'ld\x01*R\xe7'
08/16/2022 06:12:50 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 06:12:50 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 06:12:50 PM rcomm.py[line:143]INFO - data -> b'ldok\x92\x97'
08/16/2022 06:12:50 PM daemon.py[line:1025]INFO - b'li\xc8\xb3'
08/16/2022 06:12:50 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 06:12:50 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 06:12:50 PM rcomm.py[line:143]INFO - data -> b"li,79,14,254,31,196,253,'\xb6"
08/16/2022 06:12:50 PM daemon.py[line:1030]INFO - sensors state-->['79', '14', '254', '31', '196', '253']
08/16/2022 06:12:50 PM daemon.py[line:1033]INFO - [42]
08/16/2022 06:12:50 PM daemon.py[line:111]DEBUG - send_json -> {'rep': {'device': 'm3', 'result': 'success'}}
08/16/2022 06:12:51 PM daemon.py[line:93]INFO - gui msg: {'req': {'device': 'm3', 'command': 'lock', 'lock_id': '414'}}
08/16/2022 06:12:51 PM daemon.py[line:775]INFO - para_str-->43,
08/16/2022 06:12:51 PM daemon.py[line:1008]INFO - b'ld\x01+s\xf7'
08/16/2022 06:12:51 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 06:12:51 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 06:12:51 PM rcomm.py[line:143]INFO - data -> b'ldok\x92\x97'
08/16/2022 06:12:51 PM daemon.py[line:1025]INFO - b'li\xc8\xb3'
08/16/2022 06:12:51 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 06:12:51 PM rcomm.py[line:226]ERROR - failed to flush Y -> (4, 'Interrupted system call')
08/16/2022 06:12:51 PM rcomm.py[line:111]DEBUG - dev: Y opened
08/16/2022 06:12:51 PM rcomm.py[line:115]ERROR - failed to open device: AC as [Errno 2] could not open port /dev/serial/by-id/usb-1a86_USB2.0-Serial-if00-port0: [Errno 2] No such file or directory: '/dev/serial/by-id/usb-1a86_USB2.0-Serial-if00-port0'
08/16/2022 06:12:51 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 06:12:51 PM rcomm.py[line:143]INFO - data -> b'li,79,14,254,31,196,249,\xdcn'
08/16/2022 06:12:51 PM daemon.py[line:1030]INFO - sensors state-->['79', '14', '254', '31', '196', '249']
08/16/2022 06:12:51 PM daemon.py[line:1033]INFO - [43]
08/16/2022 06:12:51 PM daemon.py[line:111]DEBUG - send_json -> {'rep': {'device': 'm3', 'result': 'success'}}
08/16/2022 06:12:52 PM daemon.py[line:93]INFO - gui msg: {'req': {'device': 'm3', 'command': 'lock', 'lock_id': '415'}}
08/16/2022 06:12:52 PM daemon.py[line:775]INFO - para_str-->44,
08/16/2022 06:12:52 PM daemon.py[line:1008]INFO - b'ld\x01,\x94\x87'
08/16/2022 06:12:52 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 06:12:52 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 06:12:52 PM rcomm.py[line:143]INFO - data -> b'ldok\x92\x97'
08/16/2022 06:12:52 PM daemon.py[line:1025]INFO - b'li\xc8\xb3'
08/16/2022 06:12:52 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 06:12:52 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 06:12:53 PM rcomm.py[line:143]INFO - data -> b'li,79,14,254,31,196,241,u\xe7'
08/16/2022 06:12:53 PM daemon.py[line:1030]INFO - sensors state-->['79', '14', '254', '31', '196', '241']
08/16/2022 06:12:53 PM daemon.py[line:1033]INFO - [44]
08/16/2022 06:12:53 PM daemon.py[line:111]DEBUG - send_json -> {'rep': {'device': 'm3', 'result': 'success'}}
08/16/2022 06:13:59 PM serv.py[line:49]INFO - serv heatbeat
08/16/2022 06:18:10 PM daemon.py[line:93]INFO - gui msg: {'req': {'device': 'm3', 'command': 'lock', 'lock_id': '401'}}
08/16/2022 06:18:10 PM daemon.py[line:775]INFO - para_str-->30,
08/16/2022 06:18:10 PM daemon.py[line:1008]INFO - b'ld\x01\x1e\x85\x91'
08/16/2022 06:18:10 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 06:18:10 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 06:18:10 PM rcomm.py[line:143]INFO - data -> b'ldok\x92\x97'
08/16/2022 06:18:10 PM daemon.py[line:1025]INFO - b'li\xc8\xb3'
08/16/2022 06:18:10 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 06:18:10 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 06:18:10 PM rcomm.py[line:143]INFO - data -> b'li,79,14,254,223,255,255,I|'
08/16/2022 06:18:10 PM daemon.py[line:1030]INFO - sensors state-->['79', '14', '254', '223', '255', '255']
08/16/2022 06:18:10 PM daemon.py[line:1033]INFO - [30]
08/16/2022 06:18:10 PM daemon.py[line:111]DEBUG - send_json -> {'rep': {'device': 'm3', 'result': 'success'}}
08/16/2022 06:18:11 PM daemon.py[line:93]INFO - gui msg: {'req': {'device': 'm3', 'command': 'lock', 'lock_id': '402'}}
08/16/2022 06:18:11 PM daemon.py[line:775]INFO - para_str-->31,
08/16/2022 06:18:11 PM daemon.py[line:1008]INFO - b'ld\x01\x1f\xa4\x81'
08/16/2022 06:18:11 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 06:18:11 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 06:18:11 PM rcomm.py[line:143]INFO - data -> b'ldok\x92\x97'
08/16/2022 06:18:11 PM daemon.py[line:1025]INFO - b'li\xc8\xb3'
08/16/2022 06:18:11 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 06:18:11 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 06:18:11 PM rcomm.py[line:143]INFO - data -> b'li,79,14,254,159,255,255,\xaa\xc4'
08/16/2022 06:18:11 PM daemon.py[line:1030]INFO - sensors state-->['79', '14', '254', '159', '255', '255']
08/16/2022 06:18:11 PM daemon.py[line:1033]INFO - [31]
08/16/2022 06:18:11 PM daemon.py[line:111]DEBUG - send_json -> {'rep': {'device': 'm3', 'result': 'success'}}
08/16/2022 06:18:12 PM daemon.py[line:93]INFO - gui msg: {'req': {'device': 'm3', 'command': 'lock', 'lock_id': '403'}}
08/16/2022 06:18:12 PM daemon.py[line:775]INFO - para_str-->32,
08/16/2022 06:18:12 PM daemon.py[line:1008]INFO - b'ld\x01 \x18F'
08/16/2022 06:18:12 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 06:18:12 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 06:18:12 PM rcomm.py[line:143]INFO - data -> b'ldok\x92\x97'
08/16/2022 06:18:13 PM daemon.py[line:1025]INFO - b'li\xc8\xb3'
08/16/2022 06:18:13 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 06:18:13 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 06:18:13 PM rcomm.py[line:143]INFO - data -> b'li,79,14,254,31,255,255,\x7fH'
08/16/2022 06:18:13 PM daemon.py[line:1030]INFO - sensors state-->['79', '14', '254', '31', '255', '255']
08/16/2022 06:18:13 PM daemon.py[line:1033]INFO - [32]
08/16/2022 06:18:13 PM daemon.py[line:111]DEBUG - send_json -> {'rep': {'device': 'm3', 'result': 'success'}}
08/16/2022 06:18:14 PM daemon.py[line:93]INFO - gui msg: {'req': {'device': 'm3', 'command': 'lock', 'lock_id': '404'}}
08/16/2022 06:18:14 PM daemon.py[line:775]INFO - para_str-->33,
08/16/2022 06:18:14 PM daemon.py[line:1008]INFO - b'ld\x01!9V'
08/16/2022 06:18:14 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 06:18:14 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 06:18:14 PM rcomm.py[line:143]INFO - data -> b'ldok\x92\x97'
08/16/2022 06:18:14 PM daemon.py[line:1025]INFO - b'li\xc8\xb3'
08/16/2022 06:18:14 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 06:18:14 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 06:18:14 PM rcomm.py[line:143]INFO - data -> b'li,79,14,254,31,254,255,\xdf\r'
08/16/2022 06:18:14 PM daemon.py[line:1030]INFO - sensors state-->['79', '14', '254', '31', '254', '255']
08/16/2022 06:18:14 PM daemon.py[line:1033]INFO - [33]
08/16/2022 06:18:14 PM daemon.py[line:111]DEBUG - send_json -> {'rep': {'device': 'm3', 'result': 'success'}}
08/16/2022 06:18:15 PM daemon.py[line:93]INFO - gui msg: {'req': {'device': 'm3', 'command': 'lock', 'lock_id': '405'}}
08/16/2022 06:18:15 PM daemon.py[line:775]INFO - para_str-->34,
08/16/2022 06:18:15 PM daemon.py[line:1008]INFO - b'ld\x01"Zf'
08/16/2022 06:18:15 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 06:18:15 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 06:18:15 PM rcomm.py[line:143]INFO - data -> b'ldok\x92\x97'
08/16/2022 06:18:15 PM daemon.py[line:1025]INFO - b'li\xc8\xb3'
08/16/2022 06:18:15 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 06:18:15 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 06:18:15 PM rcomm.py[line:143]INFO - data -> b'li,79,14,254,31,252,255,>\x80'
08/16/2022 06:18:15 PM daemon.py[line:1030]INFO - sensors state-->['79', '14', '254', '31', '252', '255']
08/16/2022 06:18:15 PM daemon.py[line:1033]INFO - [34]
08/16/2022 06:18:15 PM daemon.py[line:111]DEBUG - send_json -> {'rep': {'device': 'm3', 'result': 'success'}}
08/16/2022 06:18:16 PM daemon.py[line:93]INFO - gui msg: {'req': {'device': 'm3', 'command': 'lock', 'lock_id': '406'}}
08/16/2022 06:18:16 PM daemon.py[line:775]INFO - para_str-->35,
08/16/2022 06:18:16 PM daemon.py[line:1008]INFO - b'ld\x01#{v'
08/16/2022 06:18:16 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 06:18:16 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 06:18:16 PM rcomm.py[line:143]INFO - data -> b'ldok\x92\x97'
08/16/2022 06:18:16 PM daemon.py[line:1025]INFO - b'li\xc8\xb3'
08/16/2022 06:18:16 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 06:18:16 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 06:18:16 PM rcomm.py[line:143]INFO - data -> b'li,79,14,254,31,252,255,>\x80'
08/16/2022 06:18:16 PM daemon.py[line:1030]INFO - sensors state-->['79', '14', '254', '31', '252', '255']
08/16/2022 06:18:16 PM daemon.py[line:1033]INFO - [35]
08/16/2022 06:18:16 PM daemon.py[line:1025]INFO - b'li\xc8\xb3'
08/16/2022 06:18:16 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 06:18:16 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 06:18:17 PM rcomm.py[line:143]INFO - data -> b'li,79,14,254,31,252,255,>\x80'
08/16/2022 06:18:17 PM daemon.py[line:1030]INFO - sensors state-->['79', '14', '254', '31', '252', '255']
08/16/2022 06:18:17 PM daemon.py[line:1033]INFO - [35]
08/16/2022 06:18:17 PM daemon.py[line:1025]INFO - b'li\xc8\xb3'
08/16/2022 06:18:17 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 06:18:17 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 06:18:17 PM rcomm.py[line:143]INFO - data -> b'li,79,14,254,31,252,255,>\x80'
08/16/2022 06:18:17 PM daemon.py[line:1030]INFO - sensors state-->['79', '14', '254', '31', '252', '255']
08/16/2022 06:18:17 PM daemon.py[line:1033]INFO - [35]
08/16/2022 06:18:17 PM daemon.py[line:111]DEBUG - send_json -> {'rep': {'device': 'm3', 'result': 'error', 'meta': {'35': 'CLOSE'}}}
08/16/2022 06:18:18 PM daemon.py[line:93]INFO - gui msg: {'req': {'device': 'm3', 'command': 'lock', 'lock_id': '407'}}
08/16/2022 06:18:18 PM daemon.py[line:775]INFO - para_str-->36,
08/16/2022 06:18:18 PM daemon.py[line:1008]INFO - b'ld\x01$\x9c\x06'
08/16/2022 06:18:18 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 06:18:18 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 06:18:18 PM rcomm.py[line:143]INFO - data -> b'ldok\x92\x97'
08/16/2022 06:18:18 PM daemon.py[line:1025]INFO - b'li\xc8\xb3'
08/16/2022 06:18:18 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 06:18:18 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 06:18:18 PM rcomm.py[line:143]INFO - data -> b'li,79,14,254,31,244,255,\xbe\xb5'
08/16/2022 06:18:18 PM daemon.py[line:1030]INFO - sensors state-->['79', '14', '254', '31', '244', '255']
08/16/2022 06:18:18 PM daemon.py[line:1033]INFO - [36]
08/16/2022 06:18:18 PM daemon.py[line:111]DEBUG - send_json -> {'rep': {'device': 'm3', 'result': 'success'}}
08/16/2022 06:18:19 PM daemon.py[line:93]INFO - gui msg: {'req': {'device': 'm3', 'command': 'lock', 'lock_id': '408'}}
08/16/2022 06:18:19 PM daemon.py[line:775]INFO - para_str-->37,
08/16/2022 06:18:19 PM daemon.py[line:1008]INFO - b'ld\x01%\xbd\x16'
08/16/2022 06:18:19 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 06:18:19 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 06:18:19 PM rcomm.py[line:143]INFO - data -> b'ldok\x92\x97'
08/16/2022 06:18:19 PM daemon.py[line:1025]INFO - b'li\xc8\xb3'
08/16/2022 06:18:19 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 06:18:19 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 06:18:19 PM rcomm.py[line:143]INFO - data -> b'li,79,14,254,31,228,255,x\x1f'
08/16/2022 06:18:19 PM daemon.py[line:1030]INFO - sensors state-->['79', '14', '254', '31', '228', '255']
08/16/2022 06:18:19 PM daemon.py[line:1033]INFO - [37]
08/16/2022 06:18:19 PM daemon.py[line:111]DEBUG - send_json -> {'rep': {'device': 'm3', 'result': 'success'}}
08/16/2022 06:18:20 PM daemon.py[line:93]INFO - gui msg: {'req': {'device': 'm3', 'command': 'lock', 'lock_id': '409'}}
08/16/2022 06:18:20 PM daemon.py[line:775]INFO - para_str-->38,
08/16/2022 06:18:20 PM daemon.py[line:1008]INFO - b'ld\x01&\xde&'
08/16/2022 06:18:20 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 06:18:20 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 06:18:20 PM rcomm.py[line:143]INFO - data -> b'ldok\x92\x97'
08/16/2022 06:18:20 PM daemon.py[line:1025]INFO - b'li\xc8\xb3'
08/16/2022 06:18:20 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 06:18:20 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 06:18:21 PM rcomm.py[line:143]INFO - data -> b'li,79,14,254,31,196,255,\x81\x1c'
08/16/2022 06:18:21 PM daemon.py[line:1030]INFO - sensors state-->['79', '14', '254', '31', '196', '255']
08/16/2022 06:18:21 PM daemon.py[line:1033]INFO - [38]
08/16/2022 06:18:21 PM daemon.py[line:111]DEBUG - send_json -> {'rep': {'device': 'm3', 'result': 'success'}}
08/16/2022 06:18:22 PM daemon.py[line:93]INFO - gui msg: {'req': {'device': 'm3', 'command': 'lock', 'lock_id': '410'}}
08/16/2022 06:18:22 PM daemon.py[line:775]INFO - para_str-->39,
08/16/2022 06:18:22 PM daemon.py[line:1008]INFO - b"ld\x01'\xff6"
08/16/2022 06:18:22 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 06:18:22 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 06:18:22 PM rcomm.py[line:143]INFO - data -> b'ldok\x92\x97'
08/16/2022 06:18:22 PM daemon.py[line:1025]INFO - b'li\xc8\xb3'
08/16/2022 06:18:22 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 06:18:22 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 06:18:22 PM rcomm.py[line:143]INFO - data -> b'li,79,14,254,31,196,255,\x81\x1c'
08/16/2022 06:18:22 PM daemon.py[line:1030]INFO - sensors state-->['79', '14', '254', '31', '196', '255']
08/16/2022 06:18:22 PM daemon.py[line:1033]INFO - [39]
08/16/2022 06:18:22 PM daemon.py[line:1025]INFO - b'li\xc8\xb3'
08/16/2022 06:18:22 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 06:18:22 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 06:18:22 PM rcomm.py[line:143]INFO - data -> b'li,79,14,254,31,196,255,\x81\x1c'
08/16/2022 06:18:22 PM daemon.py[line:1030]INFO - sensors state-->['79', '14', '254', '31', '196', '255']
08/16/2022 06:18:22 PM daemon.py[line:1033]INFO - [39]
08/16/2022 06:18:22 PM daemon.py[line:1025]INFO - b'li\xc8\xb3'
08/16/2022 06:18:22 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 06:18:22 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 06:18:22 PM rcomm.py[line:143]INFO - data -> b'li,79,14,254,31,196,255,\x81\x1c'
08/16/2022 06:18:22 PM daemon.py[line:1030]INFO - sensors state-->['79', '14', '254', '31', '196', '255']
08/16/2022 06:18:22 PM daemon.py[line:1033]INFO - [39]
08/16/2022 06:18:22 PM daemon.py[line:111]DEBUG - send_json -> {'rep': {'device': 'm3', 'result': 'error', 'meta': {'39': 'CLOSE'}}}
08/16/2022 06:18:23 PM daemon.py[line:93]INFO - gui msg: {'req': {'device': 'm3', 'command': 'lock', 'lock_id': '411'}}
08/16/2022 06:18:23 PM daemon.py[line:775]INFO - para_str-->40,
08/16/2022 06:18:23 PM daemon.py[line:1008]INFO - b'ld\x01(\x10\xc7'
08/16/2022 06:18:23 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 06:18:23 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 06:18:23 PM rcomm.py[line:143]INFO - data -> b'ldok\x92\x97'
08/16/2022 06:18:23 PM daemon.py[line:1025]INFO - b'li\xc8\xb3'
08/16/2022 06:18:23 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 06:18:23 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 06:18:23 PM rcomm.py[line:143]INFO - data -> b'li,79,14,254,31,196,255,\x81\x1c'
08/16/2022 06:18:23 PM daemon.py[line:1030]INFO - sensors state-->['79', '14', '254', '31', '196', '255']
08/16/2022 06:18:23 PM daemon.py[line:1033]INFO - [40]
08/16/2022 06:18:24 PM daemon.py[line:1025]INFO - b'li\xc8\xb3'
08/16/2022 06:18:24 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 06:18:24 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 06:18:24 PM rcomm.py[line:143]INFO - data -> b'li,79,14,254,31,196,255,\x81\x1c'
08/16/2022 06:18:24 PM daemon.py[line:1030]INFO - sensors state-->['79', '14', '254', '31', '196', '255']
08/16/2022 06:18:24 PM daemon.py[line:1033]INFO - [40]
08/16/2022 06:18:24 PM daemon.py[line:1025]INFO - b'li\xc8\xb3'
08/16/2022 06:18:24 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 06:18:24 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 06:18:24 PM rcomm.py[line:143]INFO - data -> b'li,79,14,254,31,196,255,\x81\x1c'
08/16/2022 06:18:24 PM daemon.py[line:1030]INFO - sensors state-->['79', '14', '254', '31', '196', '255']
08/16/2022 06:18:24 PM daemon.py[line:1033]INFO - [40]
08/16/2022 06:18:24 PM daemon.py[line:111]DEBUG - send_json -> {'rep': {'device': 'm3', 'result': 'error', 'meta': {'40': 'CLOSE'}}}
08/16/2022 06:18:25 PM daemon.py[line:93]INFO - gui msg: {'req': {'device': 'm3', 'command': 'lock', 'lock_id': '412'}}
08/16/2022 06:18:25 PM daemon.py[line:775]INFO - para_str-->41,
08/16/2022 06:18:25 PM daemon.py[line:1008]INFO - b'ld\x01)1\xd7'
08/16/2022 06:18:25 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 06:18:25 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 06:18:25 PM rcomm.py[line:143]INFO - data -> b'ldok\x92\x97'
08/16/2022 06:18:25 PM daemon.py[line:1025]INFO - b'li\xc8\xb3'
08/16/2022 06:18:25 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 06:18:25 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 06:18:25 PM rcomm.py[line:143]INFO - data -> b'li,79,14,254,31,196,255,\x81\x1c'
08/16/2022 06:18:25 PM daemon.py[line:1030]INFO - sensors state-->['79', '14', '254', '31', '196', '255']
08/16/2022 06:18:25 PM daemon.py[line:1033]INFO - [41]
08/16/2022 06:18:25 PM daemon.py[line:1025]INFO - b'li\xc8\xb3'
08/16/2022 06:18:25 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 06:18:25 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 06:18:25 PM rcomm.py[line:143]INFO - data -> b'li,79,14,254,31,196,255,\x81\x1c'
08/16/2022 06:18:25 PM daemon.py[line:1030]INFO - sensors state-->['79', '14', '254', '31', '196', '255']
08/16/2022 06:18:25 PM daemon.py[line:1033]INFO - [41]
08/16/2022 06:18:25 PM daemon.py[line:1025]INFO - b'li\xc8\xb3'
08/16/2022 06:18:25 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 06:18:25 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 06:18:26 PM rcomm.py[line:143]INFO - data -> b'li,79,14,254,31,196,255,\x81\x1c'
08/16/2022 06:18:26 PM daemon.py[line:1030]INFO - sensors state-->['79', '14', '254', '31', '196', '255']
08/16/2022 06:18:26 PM daemon.py[line:1033]INFO - [41]
08/16/2022 06:18:26 PM daemon.py[line:111]DEBUG - send_json -> {'rep': {'device': 'm3', 'result': 'error', 'meta': {'41': 'CLOSE'}}}
08/16/2022 06:18:27 PM daemon.py[line:93]INFO - gui msg: {'req': {'device': 'm3', 'command': 'lock', 'lock_id': '413'}}
08/16/2022 06:18:27 PM daemon.py[line:775]INFO - para_str-->42,
08/16/2022 06:18:27 PM daemon.py[line:1008]INFO - b'ld\x01*R\xe7'
08/16/2022 06:18:27 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 06:18:27 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 06:18:27 PM rcomm.py[line:143]INFO - data -> b'ldok\x92\x97'
08/16/2022 06:18:27 PM daemon.py[line:1025]INFO - b'li\xc8\xb3'
08/16/2022 06:18:27 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 06:18:27 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 06:18:27 PM rcomm.py[line:143]INFO - data -> b"li,79,14,254,31,196,253,'\xb6"
08/16/2022 06:18:27 PM daemon.py[line:1030]INFO - sensors state-->['79', '14', '254', '31', '196', '253']
08/16/2022 06:18:27 PM daemon.py[line:1033]INFO - [42]
08/16/2022 06:18:27 PM daemon.py[line:111]DEBUG - send_json -> {'rep': {'device': 'm3', 'result': 'success'}}
08/16/2022 06:18:28 PM daemon.py[line:93]INFO - gui msg: {'req': {'device': 'm3', 'command': 'lock', 'lock_id': '414'}}
08/16/2022 06:18:28 PM daemon.py[line:775]INFO - para_str-->43,
08/16/2022 06:18:28 PM daemon.py[line:1008]INFO - b'ld\x01+s\xf7'
08/16/2022 06:18:28 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 06:18:28 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 06:18:28 PM rcomm.py[line:143]INFO - data -> b'ldok\x92\x97'
08/16/2022 06:18:28 PM daemon.py[line:1025]INFO - b'li\xc8\xb3'
08/16/2022 06:18:28 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 06:18:28 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 06:18:28 PM rcomm.py[line:143]INFO - data -> b'li,79,14,254,31,196,249,\xdcn'
08/16/2022 06:18:28 PM daemon.py[line:1030]INFO - sensors state-->['79', '14', '254', '31', '196', '249']
08/16/2022 06:18:28 PM daemon.py[line:1033]INFO - [43]
08/16/2022 06:18:28 PM daemon.py[line:111]DEBUG - send_json -> {'rep': {'device': 'm3', 'result': 'success'}}
08/16/2022 06:18:29 PM daemon.py[line:93]INFO - gui msg: {'req': {'device': 'm3', 'command': 'lock', 'lock_id': '415'}}
08/16/2022 06:18:29 PM daemon.py[line:775]INFO - para_str-->44,
08/16/2022 06:18:29 PM daemon.py[line:1008]INFO - b'ld\x01,\x94\x87'
08/16/2022 06:18:29 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 06:18:29 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 06:18:29 PM rcomm.py[line:143]INFO - data -> b'ldok\x92\x97'
08/16/2022 06:18:29 PM daemon.py[line:1025]INFO - b'li\xc8\xb3'
08/16/2022 06:18:29 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 06:18:29 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 06:18:29 PM rcomm.py[line:143]INFO - data -> b'li,79,14,254,31,196,241,u\xe7'
08/16/2022 06:18:29 PM daemon.py[line:1030]INFO - sensors state-->['79', '14', '254', '31', '196', '241']
08/16/2022 06:18:29 PM daemon.py[line:1033]INFO - [44]
08/16/2022 06:18:29 PM daemon.py[line:111]DEBUG - send_json -> {'rep': {'device': 'm3', 'result': 'success'}}
08/16/2022 06:18:40 PM daemon.py[line:93]INFO - gui msg: {'req': {'device': 'm3', 'command': 'lock', 'lock_id': '406'}}
08/16/2022 06:18:40 PM daemon.py[line:775]INFO - para_str-->35,
08/16/2022 06:18:40 PM daemon.py[line:1008]INFO - b'ld\x01#{v'
08/16/2022 06:18:40 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 06:18:40 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 06:18:40 PM rcomm.py[line:143]INFO - data -> b'ldok\x92\x97'
08/16/2022 06:18:40 PM daemon.py[line:1025]INFO - b'li\xc8\xb3'
08/16/2022 06:18:40 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 06:18:40 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 06:18:40 PM rcomm.py[line:143]INFO - data -> b'li,79,14,254,255,255,241,\xbf\xdd'
08/16/2022 06:18:40 PM daemon.py[line:1030]INFO - sensors state-->['79', '14', '254', '255', '255', '241']
08/16/2022 06:18:40 PM daemon.py[line:1033]INFO - [35]
08/16/2022 06:18:40 PM daemon.py[line:1025]INFO - b'li\xc8\xb3'
08/16/2022 06:18:40 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 06:18:40 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 06:18:40 PM rcomm.py[line:143]INFO - data -> b'li,79,14,254,255,255,241,\xbf\xdd'
08/16/2022 06:18:40 PM daemon.py[line:1030]INFO - sensors state-->['79', '14', '254', '255', '255', '241']
08/16/2022 06:18:40 PM daemon.py[line:1033]INFO - [35]
08/16/2022 06:18:40 PM daemon.py[line:1025]INFO - b'li\xc8\xb3'
08/16/2022 06:18:40 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 06:18:40 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 06:18:40 PM rcomm.py[line:143]INFO - data -> b'li,79,14,254,255,255,241,\xbf\xdd'
08/16/2022 06:18:40 PM daemon.py[line:1030]INFO - sensors state-->['79', '14', '254', '255', '255', '241']
08/16/2022 06:18:40 PM daemon.py[line:1033]INFO - [35]
08/16/2022 06:18:41 PM daemon.py[line:111]DEBUG - send_json -> {'rep': {'device': 'm3', 'result': 'error', 'meta': {'35': 'CLOSE'}}}
08/16/2022 06:18:43 PM daemon.py[line:93]INFO - gui msg: {'req': {'device': 'm3', 'command': 'lock', 'lock_id': '406'}}
08/16/2022 06:18:43 PM daemon.py[line:775]INFO - para_str-->35,
08/16/2022 06:18:43 PM daemon.py[line:1008]INFO - b'ld\x01#{v'
08/16/2022 06:18:43 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 06:18:43 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 06:18:43 PM rcomm.py[line:143]INFO - data -> b'ldok\x92\x97'
08/16/2022 06:18:43 PM daemon.py[line:1025]INFO - b'li\xc8\xb3'
08/16/2022 06:18:43 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 06:18:43 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 06:18:43 PM rcomm.py[line:143]INFO - data -> b'li,79,14,254,255,255,241,\xbf\xdd'
08/16/2022 06:18:43 PM daemon.py[line:1030]INFO - sensors state-->['79', '14', '254', '255', '255', '241']
08/16/2022 06:18:43 PM daemon.py[line:1033]INFO - [35]
08/16/2022 06:18:43 PM daemon.py[line:1025]INFO - b'li\xc8\xb3'
08/16/2022 06:18:43 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 06:18:43 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 06:18:43 PM rcomm.py[line:143]INFO - data -> b'li,79,14,254,255,255,241,\xbf\xdd'
08/16/2022 06:18:43 PM daemon.py[line:1030]INFO - sensors state-->['79', '14', '254', '255', '255', '241']
08/16/2022 06:18:43 PM daemon.py[line:1033]INFO - [35]
08/16/2022 06:18:43 PM daemon.py[line:1025]INFO - b'li\xc8\xb3'
08/16/2022 06:18:43 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 06:18:43 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 06:18:43 PM rcomm.py[line:143]INFO - data -> b'li,79,14,254,255,255,241,\xbf\xdd'
08/16/2022 06:18:43 PM daemon.py[line:1030]INFO - sensors state-->['79', '14', '254', '255', '255', '241']
08/16/2022 06:18:43 PM daemon.py[line:1033]INFO - [35]
08/16/2022 06:18:43 PM daemon.py[line:111]DEBUG - send_json -> {'rep': {'device': 'm3', 'result': 'error', 'meta': {'35': 'CLOSE'}}}
08/16/2022 06:18:51 PM daemon.py[line:93]INFO - gui msg: {'req': {'device': 'm3', 'command': 'lock', 'lock_id': '410'}}
08/16/2022 06:18:51 PM daemon.py[line:775]INFO - para_str-->39,
08/16/2022 06:18:51 PM daemon.py[line:1008]INFO - b"ld\x01'\xff6"
08/16/2022 06:18:51 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 06:18:51 PM rcomm.py[line:226]ERROR - failed to flush Y -> (4, 'Interrupted system call')
08/16/2022 06:18:51 PM rcomm.py[line:111]DEBUG - dev: Y opened
08/16/2022 06:18:51 PM rcomm.py[line:115]ERROR - failed to open device: AC as [Errno 2] could not open port /dev/serial/by-id/usb-1a86_USB2.0-Serial-if00-port0: [Errno 2] No such file or directory: '/dev/serial/by-id/usb-1a86_USB2.0-Serial-if00-port0'
08/16/2022 06:18:51 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 06:18:52 PM rcomm.py[line:143]INFO - data -> b'ldok\x92\x97'
08/16/2022 06:18:52 PM daemon.py[line:1025]INFO - b'li\xc8\xb3'
08/16/2022 06:18:52 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 06:18:52 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 06:18:52 PM rcomm.py[line:143]INFO - data -> b'li,79,14,254,255,255,241,\xbf\xdd'
08/16/2022 06:18:52 PM daemon.py[line:1030]INFO - sensors state-->['79', '14', '254', '255', '255', '241']
08/16/2022 06:18:52 PM daemon.py[line:1033]INFO - [39]
08/16/2022 06:18:52 PM daemon.py[line:1025]INFO - b'li\xc8\xb3'
08/16/2022 06:18:52 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 06:18:52 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 06:18:52 PM rcomm.py[line:143]INFO - data -> b'li,79,14,254,255,255,241,\xbf\xdd'
08/16/2022 06:18:52 PM daemon.py[line:1030]INFO - sensors state-->['79', '14', '254', '255', '255', '241']
08/16/2022 06:18:52 PM daemon.py[line:1033]INFO - [39]
08/16/2022 06:18:52 PM daemon.py[line:1025]INFO - b'li\xc8\xb3'
08/16/2022 06:18:52 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 06:18:52 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 06:18:52 PM rcomm.py[line:143]INFO - data -> b'li,79,14,254,255,255,241,\xbf\xdd'
08/16/2022 06:18:52 PM daemon.py[line:1030]INFO - sensors state-->['79', '14', '254', '255', '255', '241']
08/16/2022 06:18:52 PM daemon.py[line:1033]INFO - [39]
08/16/2022 06:18:52 PM daemon.py[line:111]DEBUG - send_json -> {'rep': {'device': 'm3', 'result': 'error', 'meta': {'39': 'CLOSE'}}}
08/16/2022 06:18:54 PM daemon.py[line:93]INFO - gui msg: {'req': {'device': 'm3', 'command': 'lock', 'lock_id': '410'}}
08/16/2022 06:18:54 PM daemon.py[line:775]INFO - para_str-->39,
08/16/2022 06:18:54 PM daemon.py[line:1008]INFO - b"ld\x01'\xff6"
08/16/2022 06:18:54 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 06:18:54 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 06:18:54 PM rcomm.py[line:143]INFO - data -> b'ldok\x92\x97'
08/16/2022 06:18:54 PM daemon.py[line:1025]INFO - b'li\xc8\xb3'
08/16/2022 06:18:54 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 06:18:54 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 06:18:54 PM rcomm.py[line:143]INFO - data -> b'li,79,14,254,255,255,241,\xbf\xdd'
08/16/2022 06:18:54 PM daemon.py[line:1030]INFO - sensors state-->['79', '14', '254', '255', '255', '241']
08/16/2022 06:18:54 PM daemon.py[line:1033]INFO - [39]
08/16/2022 06:18:54 PM daemon.py[line:1025]INFO - b'li\xc8\xb3'
08/16/2022 06:18:54 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 06:18:54 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 06:18:54 PM rcomm.py[line:143]INFO - data -> b'li,79,14,254,255,255,241,\xbf\xdd'
08/16/2022 06:18:54 PM daemon.py[line:1030]INFO - sensors state-->['79', '14', '254', '255', '255', '241']
08/16/2022 06:18:54 PM daemon.py[line:1033]INFO - [39]
08/16/2022 06:18:54 PM daemon.py[line:1025]INFO - b'li\xc8\xb3'
08/16/2022 06:18:54 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 06:18:54 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 06:18:54 PM rcomm.py[line:143]INFO - data -> b'li,79,14,254,255,255,241,\xbf\xdd'
08/16/2022 06:18:54 PM daemon.py[line:1030]INFO - sensors state-->['79', '14', '254', '255', '255', '241']
08/16/2022 06:18:54 PM daemon.py[line:1033]INFO - [39]
08/16/2022 06:18:54 PM daemon.py[line:111]DEBUG - send_json -> {'rep': {'device': 'm3', 'result': 'error', 'meta': {'39': 'CLOSE'}}}
08/16/2022 06:18:55 PM daemon.py[line:93]INFO - gui msg: {'req': {'device': 'm3', 'command': 'lock', 'lock_id': '410'}}
08/16/2022 06:18:55 PM daemon.py[line:775]INFO - para_str-->39,
08/16/2022 06:18:55 PM daemon.py[line:1008]INFO - b"ld\x01'\xff6"
08/16/2022 06:18:55 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 06:18:55 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 06:18:55 PM rcomm.py[line:143]INFO - data -> b'ldok\x92\x97'
08/16/2022 06:18:55 PM daemon.py[line:1025]INFO - b'li\xc8\xb3'
08/16/2022 06:18:55 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 06:18:55 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 06:18:55 PM rcomm.py[line:143]INFO - data -> b'li,79,14,254,255,255,241,\xbf\xdd'
08/16/2022 06:18:55 PM daemon.py[line:1030]INFO - sensors state-->['79', '14', '254', '255', '255', '241']
08/16/2022 06:18:55 PM daemon.py[line:1033]INFO - [39]
08/16/2022 06:18:56 PM daemon.py[line:1025]INFO - b'li\xc8\xb3'
08/16/2022 06:18:56 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 06:18:56 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 06:18:56 PM rcomm.py[line:143]INFO - data -> b'li,79,14,254,255,255,241,\xbf\xdd'
08/16/2022 06:18:56 PM daemon.py[line:1030]INFO - sensors state-->['79', '14', '254', '255', '255', '241']
08/16/2022 06:18:56 PM daemon.py[line:1033]INFO - [39]
08/16/2022 06:18:56 PM daemon.py[line:1025]INFO - b'li\xc8\xb3'
08/16/2022 06:18:56 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 06:18:56 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 06:18:56 PM rcomm.py[line:143]INFO - data -> b'li,79,14,254,255,255,241,\xbf\xdd'
08/16/2022 06:18:56 PM daemon.py[line:1030]INFO - sensors state-->['79', '14', '254', '255', '255', '241']
08/16/2022 06:18:56 PM daemon.py[line:1033]INFO - [39]
08/16/2022 06:18:56 PM daemon.py[line:111]DEBUG - send_json -> {'rep': {'device': 'm3', 'result': 'error', 'meta': {'39': 'CLOSE'}}}
08/16/2022 06:20:07 PM daemon.py[line:93]INFO - gui msg: {'req': {'device': 'm3', 'command': 'lock', 'lock_id': '406'}}
08/16/2022 06:20:07 PM daemon.py[line:775]INFO - para_str-->35,
08/16/2022 06:20:07 PM daemon.py[line:1008]INFO - b'ld\x01#{v'
08/16/2022 06:20:07 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 06:20:07 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 06:20:07 PM rcomm.py[line:143]INFO - data -> b'ldok\x92\x97'
08/16/2022 06:20:07 PM daemon.py[line:1025]INFO - b'li\xc8\xb3'
08/16/2022 06:20:07 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 06:20:07 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 06:20:07 PM rcomm.py[line:143]INFO - data -> b'li,79,14,254,255,255,255,K&'
08/16/2022 06:20:07 PM daemon.py[line:1030]INFO - sensors state-->['79', '14', '254', '255', '255', '255']
08/16/2022 06:20:07 PM daemon.py[line:1033]INFO - [35]
08/16/2022 06:20:07 PM daemon.py[line:1025]INFO - b'li\xc8\xb3'
08/16/2022 06:20:07 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 06:20:07 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 06:20:07 PM rcomm.py[line:143]INFO - data -> b'li,79,14,254,255,255,255,K&'
08/16/2022 06:20:07 PM daemon.py[line:1030]INFO - sensors state-->['79', '14', '254', '255', '255', '255']
08/16/2022 06:20:07 PM daemon.py[line:1033]INFO - [35]
08/16/2022 06:20:07 PM daemon.py[line:1025]INFO - b'li\xc8\xb3'
08/16/2022 06:20:07 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 06:20:07 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 06:20:07 PM rcomm.py[line:143]INFO - data -> b'li,79,14,254,255,255,255,K&'
08/16/2022 06:20:07 PM daemon.py[line:1030]INFO - sensors state-->['79', '14', '254', '255', '255', '255']
08/16/2022 06:20:07 PM daemon.py[line:1033]INFO - [35]
08/16/2022 06:20:08 PM daemon.py[line:111]DEBUG - send_json -> {'rep': {'device': 'm3', 'result': 'error', 'meta': {'35': 'CLOSE'}}}
08/16/2022 06:20:09 PM daemon.py[line:93]INFO - gui msg: {'req': {'device': 'm3', 'command': 'lock', 'lock_id': '406'}}
08/16/2022 06:20:09 PM daemon.py[line:775]INFO - para_str-->35,
08/16/2022 06:20:09 PM daemon.py[line:1008]INFO - b'ld\x01#{v'
08/16/2022 06:20:09 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 06:20:09 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 06:20:09 PM rcomm.py[line:143]INFO - data -> b'ldok\x92\x97'
08/16/2022 06:20:09 PM daemon.py[line:1025]INFO - b'li\xc8\xb3'
08/16/2022 06:20:09 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 06:20:09 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 06:20:09 PM rcomm.py[line:143]INFO - data -> b'li,79,14,254,255,255,255,K&'
08/16/2022 06:20:09 PM daemon.py[line:1030]INFO - sensors state-->['79', '14', '254', '255', '255', '255']
08/16/2022 06:20:09 PM daemon.py[line:1033]INFO - [35]
08/16/2022 06:20:09 PM daemon.py[line:1025]INFO - b'li\xc8\xb3'
08/16/2022 06:20:09 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 06:20:09 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 06:20:09 PM rcomm.py[line:143]INFO - data -> b'li,79,14,254,255,255,255,K&'
08/16/2022 06:20:09 PM daemon.py[line:1030]INFO - sensors state-->['79', '14', '254', '255', '255', '255']
08/16/2022 06:20:09 PM daemon.py[line:1033]INFO - [35]
08/16/2022 06:20:09 PM daemon.py[line:1025]INFO - b'li\xc8\xb3'
08/16/2022 06:20:09 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 06:20:09 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 06:20:09 PM rcomm.py[line:143]INFO - data -> b'li,79,14,254,255,255,255,K&'
08/16/2022 06:20:09 PM daemon.py[line:1030]INFO - sensors state-->['79', '14', '254', '255', '255', '255']
08/16/2022 06:20:09 PM daemon.py[line:1033]INFO - [35]
08/16/2022 06:20:09 PM daemon.py[line:111]DEBUG - send_json -> {'rep': {'device': 'm3', 'result': 'error', 'meta': {'35': 'CLOSE'}}}
08/16/2022 06:20:12 PM daemon.py[line:93]INFO - gui msg: {'req': {'device': 'm3', 'command': 'lock', 'lock_id': '406'}}
08/16/2022 06:20:12 PM daemon.py[line:775]INFO - para_str-->35,
08/16/2022 06:20:12 PM daemon.py[line:1008]INFO - b'ld\x01#{v'
08/16/2022 06:20:12 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 06:20:12 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 06:20:12 PM rcomm.py[line:143]INFO - data -> b'ldok\x92\x97'
08/16/2022 06:20:12 PM daemon.py[line:1025]INFO - b'li\xc8\xb3'
08/16/2022 06:20:12 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 06:20:12 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 06:20:12 PM rcomm.py[line:143]INFO - data -> b'li,79,14,254,255,255,255,K&'
08/16/2022 06:20:12 PM daemon.py[line:1030]INFO - sensors state-->['79', '14', '254', '255', '255', '255']
08/16/2022 06:20:12 PM daemon.py[line:1033]INFO - [35]
08/16/2022 06:20:12 PM daemon.py[line:1025]INFO - b'li\xc8\xb3'
08/16/2022 06:20:12 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 06:20:12 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 06:20:12 PM rcomm.py[line:143]INFO - data -> b'li,79,14,254,255,255,255,K&'
08/16/2022 06:20:12 PM daemon.py[line:1030]INFO - sensors state-->['79', '14', '254', '255', '255', '255']
08/16/2022 06:20:12 PM daemon.py[line:1033]INFO - [35]
08/16/2022 06:20:12 PM daemon.py[line:1025]INFO - b'li\xc8\xb3'
08/16/2022 06:20:12 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 06:20:12 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 06:20:12 PM rcomm.py[line:143]INFO - data -> b'li,79,14,254,255,255,255,K&'
08/16/2022 06:20:12 PM daemon.py[line:1030]INFO - sensors state-->['79', '14', '254', '255', '255', '255']
08/16/2022 06:20:12 PM daemon.py[line:1033]INFO - [35]
08/16/2022 06:20:12 PM daemon.py[line:111]DEBUG - send_json -> {'rep': {'device': 'm3', 'result': 'error', 'meta': {'35': 'CLOSE'}}}
08/16/2022 06:22:01 PM daemon.py[line:93]INFO - gui msg: {'req': {'device': 'm3', 'command': 'lock', 'lock_id': '406'}}
08/16/2022 06:22:01 PM daemon.py[line:775]INFO - para_str-->35,
08/16/2022 06:22:01 PM daemon.py[line:1008]INFO - b'ld\x01#{v'
08/16/2022 06:22:01 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 06:22:01 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 06:22:01 PM rcomm.py[line:143]INFO - data -> b'ldok\x92\x97'
08/16/2022 06:22:01 PM daemon.py[line:1025]INFO - b'li\xc8\xb3'
08/16/2022 06:22:01 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 06:22:01 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 06:22:01 PM rcomm.py[line:143]INFO - data -> b'li,79,14,254,255,255,255,K&'
08/16/2022 06:22:01 PM daemon.py[line:1030]INFO - sensors state-->['79', '14', '254', '255', '255', '255']
08/16/2022 06:22:01 PM daemon.py[line:1033]INFO - [35]
08/16/2022 06:22:01 PM daemon.py[line:1025]INFO - b'li\xc8\xb3'
08/16/2022 06:22:01 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 06:22:01 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 06:22:01 PM rcomm.py[line:143]INFO - data -> b'li,79,14,254,255,255,255,K&'
08/16/2022 06:22:01 PM daemon.py[line:1030]INFO - sensors state-->['79', '14', '254', '255', '255', '255']
08/16/2022 06:22:01 PM daemon.py[line:1033]INFO - [35]
08/16/2022 06:22:02 PM daemon.py[line:1025]INFO - b'li\xc8\xb3'
08/16/2022 06:22:02 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 06:22:02 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 06:22:02 PM rcomm.py[line:143]INFO - data -> b'li,79,14,254,255,255,255,K&'
08/16/2022 06:22:02 PM daemon.py[line:1030]INFO - sensors state-->['79', '14', '254', '255', '255', '255']
08/16/2022 06:22:02 PM daemon.py[line:1033]INFO - [35]
08/16/2022 06:22:02 PM daemon.py[line:111]DEBUG - send_json -> {'rep': {'device': 'm3', 'result': 'error', 'meta': {'35': 'CLOSE'}}}
08/16/2022 06:22:06 PM daemon.py[line:93]INFO - gui msg: {'req': {'device': 'm3', 'command': 'lock', 'lock_id': '401'}}
08/16/2022 06:22:06 PM daemon.py[line:775]INFO - para_str-->30,
08/16/2022 06:22:06 PM daemon.py[line:1008]INFO - b'ld\x01\x1e\x85\x91'
08/16/2022 06:22:06 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 06:22:06 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 06:22:06 PM rcomm.py[line:143]INFO - data -> b'ldok\x92\x97'
08/16/2022 06:22:06 PM daemon.py[line:1025]INFO - b'li\xc8\xb3'
08/16/2022 06:22:06 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 06:22:06 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 06:22:06 PM rcomm.py[line:143]INFO - data -> b'li,79,14,254,223,255,255,I|'
08/16/2022 06:22:06 PM daemon.py[line:1030]INFO - sensors state-->['79', '14', '254', '223', '255', '255']
08/16/2022 06:22:06 PM daemon.py[line:1033]INFO - [30]
08/16/2022 06:22:06 PM daemon.py[line:111]DEBUG - send_json -> {'rep': {'device': 'm3', 'result': 'success'}}
08/16/2022 06:22:07 PM daemon.py[line:93]INFO - gui msg: {'req': {'device': 'm3', 'command': 'lock', 'lock_id': '402'}}
08/16/2022 06:22:07 PM daemon.py[line:775]INFO - para_str-->31,
08/16/2022 06:22:07 PM daemon.py[line:1008]INFO - b'ld\x01\x1f\xa4\x81'
08/16/2022 06:22:07 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 06:22:07 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 06:22:07 PM rcomm.py[line:143]INFO - data -> b'ldok\x92\x97'
08/16/2022 06:22:07 PM daemon.py[line:1025]INFO - b'li\xc8\xb3'
08/16/2022 06:22:07 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 06:22:07 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 06:22:07 PM rcomm.py[line:143]INFO - data -> b'li,79,14,254,159,255,255,\xaa\xc4'
08/16/2022 06:22:07 PM daemon.py[line:1030]INFO - sensors state-->['79', '14', '254', '159', '255', '255']
08/16/2022 06:22:07 PM daemon.py[line:1033]INFO - [31]
08/16/2022 06:22:07 PM daemon.py[line:111]DEBUG - send_json -> {'rep': {'device': 'm3', 'result': 'success'}}
08/16/2022 06:22:08 PM daemon.py[line:93]INFO - gui msg: {'req': {'device': 'm3', 'command': 'lock', 'lock_id': '403'}}
08/16/2022 06:22:08 PM daemon.py[line:775]INFO - para_str-->32,
08/16/2022 06:22:08 PM daemon.py[line:1008]INFO - b'ld\x01 \x18F'
08/16/2022 06:22:08 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 06:22:08 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 06:22:09 PM rcomm.py[line:143]INFO - data -> b'ldok\x92\x97'
08/16/2022 06:22:09 PM daemon.py[line:1025]INFO - b'li\xc8\xb3'
08/16/2022 06:22:09 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 06:22:09 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 06:22:09 PM rcomm.py[line:143]INFO - data -> b'li,79,14,254,31,255,255,\x7fH'
08/16/2022 06:22:09 PM daemon.py[line:1030]INFO - sensors state-->['79', '14', '254', '31', '255', '255']
08/16/2022 06:22:09 PM daemon.py[line:1033]INFO - [32]
08/16/2022 06:22:09 PM daemon.py[line:111]DEBUG - send_json -> {'rep': {'device': 'm3', 'result': 'success'}}
08/16/2022 06:22:10 PM daemon.py[line:93]INFO - gui msg: {'req': {'device': 'm3', 'command': 'lock', 'lock_id': '404'}}
08/16/2022 06:22:10 PM daemon.py[line:775]INFO - para_str-->33,
08/16/2022 06:22:10 PM daemon.py[line:1008]INFO - b'ld\x01!9V'
08/16/2022 06:22:10 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 06:22:10 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 06:22:10 PM rcomm.py[line:143]INFO - data -> b'ldok\x92\x97'
08/16/2022 06:22:10 PM daemon.py[line:1025]INFO - b'li\xc8\xb3'
08/16/2022 06:22:10 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 06:22:10 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 06:22:10 PM rcomm.py[line:143]INFO - data -> b'li,79,14,254,31,255,255,\x7fH'
08/16/2022 06:22:10 PM daemon.py[line:1030]INFO - sensors state-->['79', '14', '254', '31', '255', '255']
08/16/2022 06:22:10 PM daemon.py[line:1033]INFO - [33]
08/16/2022 06:22:10 PM daemon.py[line:1025]INFO - b'li\xc8\xb3'
08/16/2022 06:22:10 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 06:22:10 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 06:22:10 PM rcomm.py[line:143]INFO - data -> b'li,79,14,254,31,255,255,\x7fH'
08/16/2022 06:22:10 PM daemon.py[line:1030]INFO - sensors state-->['79', '14', '254', '31', '255', '255']
08/16/2022 06:22:10 PM daemon.py[line:1033]INFO - [33]
08/16/2022 06:22:10 PM daemon.py[line:1025]INFO - b'li\xc8\xb3'
08/16/2022 06:22:10 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 06:22:10 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 06:22:10 PM rcomm.py[line:143]INFO - data -> b'li,79,14,254,31,255,255,\x7fH'
08/16/2022 06:22:10 PM daemon.py[line:1030]INFO - sensors state-->['79', '14', '254', '31', '255', '255']
08/16/2022 06:22:10 PM daemon.py[line:1033]INFO - [33]
08/16/2022 06:22:11 PM daemon.py[line:111]DEBUG - send_json -> {'rep': {'device': 'm3', 'result': 'error', 'meta': {'33': 'CLOSE'}}}
08/16/2022 06:22:12 PM daemon.py[line:93]INFO - gui msg: {'req': {'device': 'm3', 'command': 'lock', 'lock_id': '405'}}
08/16/2022 06:22:12 PM daemon.py[line:775]INFO - para_str-->34,
08/16/2022 06:22:12 PM daemon.py[line:1008]INFO - b'ld\x01"Zf'
08/16/2022 06:22:12 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 06:22:12 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 06:22:12 PM rcomm.py[line:143]INFO - data -> b'ldok\x92\x97'
08/16/2022 06:22:12 PM daemon.py[line:1025]INFO - b'li\xc8\xb3'
08/16/2022 06:22:12 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 06:22:12 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 06:22:12 PM rcomm.py[line:143]INFO - data -> b'li,79,14,254,31,253,255,\x9e\xc5'
08/16/2022 06:22:12 PM daemon.py[line:1030]INFO - sensors state-->['79', '14', '254', '31', '253', '255']
08/16/2022 06:22:12 PM daemon.py[line:1033]INFO - [34]
08/16/2022 06:22:12 PM daemon.py[line:111]DEBUG - send_json -> {'rep': {'device': 'm3', 'result': 'success'}}
08/16/2022 06:22:13 PM daemon.py[line:93]INFO - gui msg: {'req': {'device': 'm3', 'command': 'lock', 'lock_id': '406'}}
08/16/2022 06:22:13 PM daemon.py[line:775]INFO - para_str-->35,
08/16/2022 06:22:13 PM daemon.py[line:1008]INFO - b'ld\x01#{v'
08/16/2022 06:22:13 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 06:22:13 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 06:22:13 PM rcomm.py[line:143]INFO - data -> b'ldok\x92\x97'
08/16/2022 06:22:13 PM daemon.py[line:1025]INFO - b'li\xc8\xb3'
08/16/2022 06:22:13 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 06:22:13 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 06:22:13 PM rcomm.py[line:143]INFO - data -> b'li,79,14,254,31,253,255,\x9e\xc5'
08/16/2022 06:22:13 PM daemon.py[line:1030]INFO - sensors state-->['79', '14', '254', '31', '253', '255']
08/16/2022 06:22:13 PM daemon.py[line:1033]INFO - [35]
08/16/2022 06:22:13 PM daemon.py[line:1025]INFO - b'li\xc8\xb3'
08/16/2022 06:22:13 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 06:22:13 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 06:22:13 PM rcomm.py[line:143]INFO - data -> b'li,79,14,254,31,253,255,\x9e\xc5'
08/16/2022 06:22:13 PM daemon.py[line:1030]INFO - sensors state-->['79', '14', '254', '31', '253', '255']
08/16/2022 06:22:13 PM daemon.py[line:1033]INFO - [35]
08/16/2022 06:22:13 PM daemon.py[line:1025]INFO - b'li\xc8\xb3'
08/16/2022 06:22:13 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 06:22:13 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 06:22:13 PM rcomm.py[line:143]INFO - data -> b'li,79,14,254,31,253,255,\x9e\xc5'
08/16/2022 06:22:13 PM daemon.py[line:1030]INFO - sensors state-->['79', '14', '254', '31', '253', '255']
08/16/2022 06:22:13 PM daemon.py[line:1033]INFO - [35]
08/16/2022 06:22:13 PM daemon.py[line:111]DEBUG - send_json -> {'rep': {'device': 'm3', 'result': 'error', 'meta': {'35': 'CLOSE'}}}
08/16/2022 06:22:14 PM daemon.py[line:93]INFO - gui msg: {'req': {'device': 'm3', 'command': 'lock', 'lock_id': '407'}}
08/16/2022 06:22:14 PM daemon.py[line:775]INFO - para_str-->36,
08/16/2022 06:22:14 PM daemon.py[line:1008]INFO - b'ld\x01$\x9c\x06'
08/16/2022 06:22:14 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 06:22:15 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 06:22:15 PM rcomm.py[line:143]INFO - data -> b'ldok\x92\x97'
08/16/2022 06:22:15 PM daemon.py[line:1025]INFO - b'li\xc8\xb3'
08/16/2022 06:22:15 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 06:22:15 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 06:22:15 PM rcomm.py[line:143]INFO - data -> b'li,79,14,254,31,245,255,\x1e\xf0'
08/16/2022 06:22:15 PM daemon.py[line:1030]INFO - sensors state-->['79', '14', '254', '31', '245', '255']
08/16/2022 06:22:15 PM daemon.py[line:1033]INFO - [36]
08/16/2022 06:22:15 PM daemon.py[line:111]DEBUG - send_json -> {'rep': {'device': 'm3', 'result': 'success'}}
08/16/2022 06:22:16 PM daemon.py[line:93]INFO - gui msg: {'req': {'device': 'm3', 'command': 'lock', 'lock_id': '408'}}
08/16/2022 06:22:16 PM daemon.py[line:775]INFO - para_str-->37,
08/16/2022 06:22:16 PM daemon.py[line:1008]INFO - b'ld\x01%\xbd\x16'
08/16/2022 06:22:16 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 06:22:16 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 06:22:16 PM rcomm.py[line:143]INFO - data -> b'ldok\x92\x97'
08/16/2022 06:22:16 PM daemon.py[line:1025]INFO - b'li\xc8\xb3'
08/16/2022 06:22:16 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 06:22:16 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 06:22:16 PM rcomm.py[line:143]INFO - data -> b'li,79,14,254,31,229,255,\xd8Z'
08/16/2022 06:22:16 PM daemon.py[line:1030]INFO - sensors state-->['79', '14', '254', '31', '229', '255']
08/16/2022 06:22:16 PM daemon.py[line:1033]INFO - [37]
08/16/2022 06:22:16 PM daemon.py[line:111]DEBUG - send_json -> {'rep': {'device': 'm3', 'result': 'success'}}
08/16/2022 06:22:17 PM daemon.py[line:93]INFO - gui msg: {'req': {'device': 'm3', 'command': 'lock', 'lock_id': '409'}}
08/16/2022 06:22:17 PM daemon.py[line:775]INFO - para_str-->38,
08/16/2022 06:22:17 PM daemon.py[line:1008]INFO - b'ld\x01&\xde&'
08/16/2022 06:22:17 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 06:22:17 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 06:22:17 PM rcomm.py[line:143]INFO - data -> b'ldok\x92\x97'
08/16/2022 06:22:17 PM daemon.py[line:1025]INFO - b'li\xc8\xb3'
08/16/2022 06:22:17 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 06:22:17 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 06:22:17 PM rcomm.py[line:143]INFO - data -> b'li,79,14,254,31,197,255,!Y'
08/16/2022 06:22:17 PM daemon.py[line:1030]INFO - sensors state-->['79', '14', '254', '31', '197', '255']
08/16/2022 06:22:17 PM daemon.py[line:1033]INFO - [38]
08/16/2022 06:22:17 PM daemon.py[line:111]DEBUG - send_json -> {'rep': {'device': 'm3', 'result': 'success'}}
08/16/2022 06:22:18 PM daemon.py[line:93]INFO - gui msg: {'req': {'device': 'm3', 'command': 'lock', 'lock_id': '410'}}
08/16/2022 06:22:18 PM daemon.py[line:775]INFO - para_str-->39,
08/16/2022 06:22:18 PM daemon.py[line:1008]INFO - b"ld\x01'\xff6"
08/16/2022 06:22:18 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 06:22:18 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 06:22:18 PM rcomm.py[line:143]INFO - data -> b'ldok\x92\x97'
08/16/2022 06:22:18 PM daemon.py[line:1025]INFO - b'li\xc8\xb3'
08/16/2022 06:22:18 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 06:22:18 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 06:22:18 PM rcomm.py[line:143]INFO - data -> b'li,79,14,254,31,197,255,!Y'
08/16/2022 06:22:18 PM daemon.py[line:1030]INFO - sensors state-->['79', '14', '254', '31', '197', '255']
08/16/2022 06:22:18 PM daemon.py[line:1033]INFO - [39]
08/16/2022 06:22:19 PM daemon.py[line:1025]INFO - b'li\xc8\xb3'
08/16/2022 06:22:19 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 06:22:19 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 06:22:19 PM rcomm.py[line:143]INFO - data -> b'li,79,14,254,31,197,255,!Y'
08/16/2022 06:22:19 PM daemon.py[line:1030]INFO - sensors state-->['79', '14', '254', '31', '197', '255']
08/16/2022 06:22:19 PM daemon.py[line:1033]INFO - [39]
08/16/2022 06:22:19 PM daemon.py[line:1025]INFO - b'li\xc8\xb3'
08/16/2022 06:22:19 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 06:22:19 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 06:22:19 PM rcomm.py[line:143]INFO - data -> b'li,79,14,254,31,197,255,!Y'
08/16/2022 06:22:19 PM daemon.py[line:1030]INFO - sensors state-->['79', '14', '254', '31', '197', '255']
08/16/2022 06:22:19 PM daemon.py[line:1033]INFO - [39]
08/16/2022 06:22:19 PM daemon.py[line:111]DEBUG - send_json -> {'rep': {'device': 'm3', 'result': 'error', 'meta': {'39': 'CLOSE'}}}
08/16/2022 06:22:20 PM daemon.py[line:93]INFO - gui msg: {'req': {'device': 'm3', 'command': 'lock', 'lock_id': '411'}}
08/16/2022 06:22:20 PM daemon.py[line:775]INFO - para_str-->40,
08/16/2022 06:22:20 PM daemon.py[line:1008]INFO - b'ld\x01(\x10\xc7'
08/16/2022 06:22:20 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 06:22:20 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 06:22:20 PM rcomm.py[line:143]INFO - data -> b'ldok\x92\x97'
08/16/2022 06:22:20 PM daemon.py[line:1025]INFO - b'li\xc8\xb3'
08/16/2022 06:22:20 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 06:22:20 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 06:22:20 PM rcomm.py[line:143]INFO - data -> b'li,79,14,254,31,69,255,\xddc'
08/16/2022 06:22:20 PM daemon.py[line:1030]INFO - sensors state-->['79', '14', '254', '31', '69', '255']
08/16/2022 06:22:20 PM daemon.py[line:1033]INFO - [40]
08/16/2022 06:22:20 PM daemon.py[line:111]DEBUG - send_json -> {'rep': {'device': 'm3', 'result': 'success'}}
08/16/2022 06:22:21 PM daemon.py[line:93]INFO - gui msg: {'req': {'device': 'm3', 'command': 'lock', 'lock_id': '412'}}
08/16/2022 06:22:21 PM daemon.py[line:775]INFO - para_str-->41,
08/16/2022 06:22:21 PM daemon.py[line:1008]INFO - b'ld\x01)1\xd7'
08/16/2022 06:22:21 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 06:22:21 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 06:22:21 PM rcomm.py[line:143]INFO - data -> b'ldok\x92\x97'
08/16/2022 06:22:21 PM daemon.py[line:1025]INFO - b'li\xc8\xb3'
08/16/2022 06:22:21 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 06:22:21 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 06:22:21 PM rcomm.py[line:143]INFO - data -> b'li,79,14,254,31,69,254,\xecP'
08/16/2022 06:22:21 PM daemon.py[line:1030]INFO - sensors state-->['79', '14', '254', '31', '69', '254']
08/16/2022 06:22:21 PM daemon.py[line:1033]INFO - [41]
08/16/2022 06:22:21 PM daemon.py[line:111]DEBUG - send_json -> {'rep': {'device': 'm3', 'result': 'success'}}
08/16/2022 06:22:22 PM daemon.py[line:93]INFO - gui msg: {'req': {'device': 'm3', 'command': 'lock', 'lock_id': '413'}}
08/16/2022 06:22:22 PM daemon.py[line:775]INFO - para_str-->42,
08/16/2022 06:22:22 PM daemon.py[line:1008]INFO - b'ld\x01*R\xe7'
08/16/2022 06:22:22 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 06:22:22 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 06:22:23 PM rcomm.py[line:143]INFO - data -> b'ldok\x92\x97'
08/16/2022 06:22:23 PM daemon.py[line:1025]INFO - b'li\xc8\xb3'
08/16/2022 06:22:23 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 06:22:23 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 06:22:23 PM rcomm.py[line:143]INFO - data -> b'li,79,14,254,31,69,252,J\xfa'
08/16/2022 06:22:23 PM daemon.py[line:1030]INFO - sensors state-->['79', '14', '254', '31', '69', '252']
08/16/2022 06:22:23 PM daemon.py[line:1033]INFO - [42]
08/16/2022 06:22:23 PM daemon.py[line:111]DEBUG - send_json -> {'rep': {'device': 'm3', 'result': 'success'}}
08/16/2022 06:22:24 PM daemon.py[line:93]INFO - gui msg: {'req': {'device': 'm3', 'command': 'lock', 'lock_id': '414'}}
08/16/2022 06:22:24 PM daemon.py[line:775]INFO - para_str-->43,
08/16/2022 06:22:24 PM daemon.py[line:1008]INFO - b'ld\x01+s\xf7'
08/16/2022 06:22:24 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 06:22:24 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 06:22:24 PM rcomm.py[line:143]INFO - data -> b'ldok\x92\x97'
08/16/2022 06:22:24 PM daemon.py[line:1025]INFO - b'li\xc8\xb3'
08/16/2022 06:22:24 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 06:22:24 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 06:22:24 PM rcomm.py[line:143]INFO - data -> b'li,79,14,254,31,69,248,\xb1"'
08/16/2022 06:22:24 PM daemon.py[line:1030]INFO - sensors state-->['79', '14', '254', '31', '69', '248']
08/16/2022 06:22:24 PM daemon.py[line:1033]INFO - [43]
08/16/2022 06:22:24 PM daemon.py[line:111]DEBUG - send_json -> {'rep': {'device': 'm3', 'result': 'success'}}
08/16/2022 06:22:25 PM daemon.py[line:93]INFO - gui msg: {'req': {'device': 'm3', 'command': 'lock', 'lock_id': '415'}}
08/16/2022 06:22:25 PM daemon.py[line:775]INFO - para_str-->44,
08/16/2022 06:22:25 PM daemon.py[line:1008]INFO - b'ld\x01,\x94\x87'
08/16/2022 06:22:25 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 06:22:25 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 06:22:25 PM rcomm.py[line:143]INFO - data -> b'ldok\x92\x97'
08/16/2022 06:22:25 PM daemon.py[line:1025]INFO - b'li\xc8\xb3'
08/16/2022 06:22:25 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 06:22:25 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 06:22:25 PM rcomm.py[line:143]INFO - data -> b'li,79,14,254,31,69,240,\x18\xab'
08/16/2022 06:22:25 PM daemon.py[line:1030]INFO - sensors state-->['79', '14', '254', '31', '69', '240']
08/16/2022 06:22:25 PM daemon.py[line:1033]INFO - [44]
08/16/2022 06:22:25 PM daemon.py[line:111]DEBUG - send_json -> {'rep': {'device': 'm3', 'result': 'success'}}
08/16/2022 06:23:59 PM serv.py[line:49]INFO - serv heatbeat
08/16/2022 06:33:59 PM serv.py[line:49]INFO - serv heatbeat
08/16/2022 06:41:45 PM daemon.py[line:93]INFO - gui msg: {'req': {'device': 'm3', 'command': 'lock', 'lock_id': '404'}}
08/16/2022 06:41:45 PM daemon.py[line:775]INFO - para_str-->33,
08/16/2022 06:41:45 PM daemon.py[line:1008]INFO - b'ld\x01!9V'
08/16/2022 06:41:45 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 06:41:45 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 06:41:45 PM rcomm.py[line:143]INFO - data -> b'ldok\x92\x97'
08/16/2022 06:41:45 PM daemon.py[line:1025]INFO - b'li\xc8\xb3'
08/16/2022 06:41:45 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 06:41:45 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 06:41:45 PM rcomm.py[line:143]INFO - data -> b'li,79,14,254,31,68,240,\xb8\xee'
08/16/2022 06:41:45 PM daemon.py[line:1030]INFO - sensors state-->['79', '14', '254', '31', '68', '240']
08/16/2022 06:41:45 PM daemon.py[line:1033]INFO - [33]
08/16/2022 06:41:45 PM daemon.py[line:111]DEBUG - send_json -> {'rep': {'device': 'm3', 'result': 'success'}}
08/16/2022 06:41:49 PM daemon.py[line:93]INFO - gui msg: {'req': {'device': 'm3', 'command': 'lock', 'lock_id': '406'}}
08/16/2022 06:41:49 PM daemon.py[line:775]INFO - para_str-->35,
08/16/2022 06:41:49 PM daemon.py[line:1008]INFO - b'ld\x01#{v'
08/16/2022 06:41:49 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 06:41:49 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 06:41:49 PM rcomm.py[line:143]INFO - data -> b'ldok\x92\x97'
08/16/2022 06:41:49 PM daemon.py[line:1025]INFO - b'li\xc8\xb3'
08/16/2022 06:41:49 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 06:41:49 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 06:41:49 PM rcomm.py[line:143]INFO - data -> b'li,79,14,254,31,68,240,\xb8\xee'
08/16/2022 06:41:49 PM daemon.py[line:1030]INFO - sensors state-->['79', '14', '254', '31', '68', '240']
08/16/2022 06:41:49 PM daemon.py[line:1033]INFO - [35]
08/16/2022 06:41:49 PM daemon.py[line:1025]INFO - b'li\xc8\xb3'
08/16/2022 06:41:49 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 06:41:49 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 06:41:49 PM rcomm.py[line:143]INFO - data -> b'li,79,14,254,31,68,240,\xb8\xee'
08/16/2022 06:41:49 PM daemon.py[line:1030]INFO - sensors state-->['79', '14', '254', '31', '68', '240']
08/16/2022 06:41:49 PM daemon.py[line:1033]INFO - [35]
08/16/2022 06:41:50 PM daemon.py[line:1025]INFO - b'li\xc8\xb3'
08/16/2022 06:41:50 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 06:41:50 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 06:41:50 PM rcomm.py[line:143]INFO - data -> b'li,79,14,254,31,68,240,\xb8\xee'
08/16/2022 06:41:50 PM daemon.py[line:1030]INFO - sensors state-->['79', '14', '254', '31', '68', '240']
08/16/2022 06:41:50 PM daemon.py[line:1033]INFO - [35]
08/16/2022 06:41:50 PM daemon.py[line:111]DEBUG - send_json -> {'rep': {'device': 'm3', 'result': 'error', 'meta': {'35': 'CLOSE'}}}
08/16/2022 06:41:56 PM daemon.py[line:93]INFO - gui msg: {'req': {'device': 'm3', 'command': 'lock', 'lock_id': '410'}}
08/16/2022 06:41:56 PM daemon.py[line:775]INFO - para_str-->39,
08/16/2022 06:41:56 PM daemon.py[line:1008]INFO - b"ld\x01'\xff6"
08/16/2022 06:41:56 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 06:41:57 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 06:41:57 PM rcomm.py[line:143]INFO - data -> b'ldok\x92\x97'
08/16/2022 06:41:57 PM daemon.py[line:1025]INFO - b'li\xc8\xb3'
08/16/2022 06:41:57 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 06:41:57 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 06:41:57 PM rcomm.py[line:143]INFO - data -> b'li,79,14,254,31,68,240,\xb8\xee'
08/16/2022 06:41:57 PM daemon.py[line:1030]INFO - sensors state-->['79', '14', '254', '31', '68', '240']
08/16/2022 06:41:57 PM daemon.py[line:1033]INFO - [39]
08/16/2022 06:41:57 PM daemon.py[line:1025]INFO - b'li\xc8\xb3'
08/16/2022 06:41:57 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 06:41:57 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 06:41:57 PM rcomm.py[line:143]INFO - data -> b'li,79,14,254,31,68,240,\xb8\xee'
08/16/2022 06:41:57 PM daemon.py[line:1030]INFO - sensors state-->['79', '14', '254', '31', '68', '240']
08/16/2022 06:41:57 PM daemon.py[line:1033]INFO - [39]
08/16/2022 06:41:57 PM daemon.py[line:1025]INFO - b'li\xc8\xb3'
08/16/2022 06:41:57 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 06:41:57 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 06:41:57 PM rcomm.py[line:143]INFO - data -> b'li,79,14,254,31,68,240,\xb8\xee'
08/16/2022 06:41:57 PM daemon.py[line:1030]INFO - sensors state-->['79', '14', '254', '31', '68', '240']
08/16/2022 06:41:57 PM daemon.py[line:1033]INFO - [39]
08/16/2022 06:41:57 PM daemon.py[line:111]DEBUG - send_json -> {'rep': {'device': 'm3', 'result': 'error', 'meta': {'39': 'CLOSE'}}}
08/16/2022 06:41:58 PM daemon.py[line:93]INFO - gui msg: {'req': {'device': 'm3', 'command': 'lock', 'lock_id': '410'}}
08/16/2022 06:41:58 PM daemon.py[line:775]INFO - para_str-->39,
08/16/2022 06:41:58 PM daemon.py[line:1008]INFO - b"ld\x01'\xff6"
08/16/2022 06:41:58 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 06:41:58 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 06:41:58 PM rcomm.py[line:143]INFO - data -> b'ldok\x92\x97'
08/16/2022 06:41:58 PM daemon.py[line:1025]INFO - b'li\xc8\xb3'
08/16/2022 06:41:58 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 06:41:58 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 06:41:58 PM rcomm.py[line:143]INFO - data -> b'li,79,14,254,31,68,240,\xb8\xee'
08/16/2022 06:41:58 PM daemon.py[line:1030]INFO - sensors state-->['79', '14', '254', '31', '68', '240']
08/16/2022 06:41:58 PM daemon.py[line:1033]INFO - [39]
08/16/2022 06:41:58 PM daemon.py[line:1025]INFO - b'li\xc8\xb3'
08/16/2022 06:41:58 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 06:41:58 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 06:41:58 PM rcomm.py[line:143]INFO - data -> b'li,79,14,254,31,68,240,\xb8\xee'
08/16/2022 06:41:58 PM daemon.py[line:1030]INFO - sensors state-->['79', '14', '254', '31', '68', '240']
08/16/2022 06:41:58 PM daemon.py[line:1033]INFO - [39]
08/16/2022 06:41:59 PM daemon.py[line:1025]INFO - b'li\xc8\xb3'
08/16/2022 06:41:59 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 06:41:59 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 06:41:59 PM rcomm.py[line:143]INFO - data -> b'li,79,14,254,31,68,240,\xb8\xee'
08/16/2022 06:41:59 PM daemon.py[line:1030]INFO - sensors state-->['79', '14', '254', '31', '68', '240']
08/16/2022 06:41:59 PM daemon.py[line:1033]INFO - [39]
08/16/2022 06:41:59 PM daemon.py[line:111]DEBUG - send_json -> {'rep': {'device': 'm3', 'result': 'error', 'meta': {'39': 'CLOSE'}}}
08/16/2022 06:42:00 PM daemon.py[line:93]INFO - gui msg: {'req': {'device': 'm3', 'command': 'lock', 'lock_id': '410'}}
08/16/2022 06:42:00 PM daemon.py[line:775]INFO - para_str-->39,
08/16/2022 06:42:00 PM daemon.py[line:1008]INFO - b"ld\x01'\xff6"
08/16/2022 06:42:00 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 06:42:00 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 06:42:00 PM rcomm.py[line:143]INFO - data -> b'ldok\x92\x97'
08/16/2022 06:42:01 PM daemon.py[line:1025]INFO - b'li\xc8\xb3'
08/16/2022 06:42:01 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 06:42:01 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 06:42:01 PM rcomm.py[line:143]INFO - data -> b'li,79,14,254,31,68,240,\xb8\xee'
08/16/2022 06:42:01 PM daemon.py[line:1030]INFO - sensors state-->['79', '14', '254', '31', '68', '240']
08/16/2022 06:42:01 PM daemon.py[line:1033]INFO - [39]
08/16/2022 06:42:01 PM daemon.py[line:1025]INFO - b'li\xc8\xb3'
08/16/2022 06:42:01 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 06:42:01 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 06:42:01 PM rcomm.py[line:143]INFO - data -> b'li,79,14,254,31,68,240,\xb8\xee'
08/16/2022 06:42:01 PM daemon.py[line:1030]INFO - sensors state-->['79', '14', '254', '31', '68', '240']
08/16/2022 06:42:01 PM daemon.py[line:1033]INFO - [39]
08/16/2022 06:42:01 PM daemon.py[line:1025]INFO - b'li\xc8\xb3'
08/16/2022 06:42:01 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 06:42:01 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 06:42:01 PM rcomm.py[line:143]INFO - data -> b'li,79,14,254,31,68,240,\xb8\xee'
08/16/2022 06:42:01 PM daemon.py[line:1030]INFO - sensors state-->['79', '14', '254', '31', '68', '240']
08/16/2022 06:42:01 PM daemon.py[line:1033]INFO - [39]
08/16/2022 06:42:01 PM daemon.py[line:111]DEBUG - send_json -> {'rep': {'device': 'm3', 'result': 'error', 'meta': {'39': 'CLOSE'}}}
08/16/2022 06:42:15 PM daemon.py[line:93]INFO - gui msg: {'req': {'device': 'm3', 'command': 'lock', 'lock_id': '410'}}
08/16/2022 06:42:15 PM daemon.py[line:775]INFO - para_str-->39,
08/16/2022 06:42:15 PM daemon.py[line:1008]INFO - b"ld\x01'\xff6"
08/16/2022 06:42:15 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 06:42:15 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 06:42:15 PM rcomm.py[line:143]INFO - data -> b'ldok\x92\x97'
08/16/2022 06:42:15 PM daemon.py[line:1025]INFO - b'li\xc8\xb3'
08/16/2022 06:42:15 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 06:42:15 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 06:42:15 PM rcomm.py[line:143]INFO - data -> b'li,79,14,254,31,68,240,\xb8\xee'
08/16/2022 06:42:15 PM daemon.py[line:1030]INFO - sensors state-->['79', '14', '254', '31', '68', '240']
08/16/2022 06:42:15 PM daemon.py[line:1033]INFO - [39]
08/16/2022 06:42:15 PM daemon.py[line:1025]INFO - b'li\xc8\xb3'
08/16/2022 06:42:15 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 06:42:15 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 06:42:15 PM rcomm.py[line:143]INFO - data -> b'li,79,14,254,31,68,240,\xb8\xee'
08/16/2022 06:42:15 PM daemon.py[line:1030]INFO - sensors state-->['79', '14', '254', '31', '68', '240']
08/16/2022 06:42:15 PM daemon.py[line:1033]INFO - [39]
08/16/2022 06:42:15 PM daemon.py[line:1025]INFO - b'li\xc8\xb3'
08/16/2022 06:42:15 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 06:42:15 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 06:42:15 PM rcomm.py[line:143]INFO - data -> b'li,79,14,254,31,68,240,\xb8\xee'
08/16/2022 06:42:15 PM daemon.py[line:1030]INFO - sensors state-->['79', '14', '254', '31', '68', '240']
08/16/2022 06:42:15 PM daemon.py[line:1033]INFO - [39]
08/16/2022 06:42:15 PM daemon.py[line:111]DEBUG - send_json -> {'rep': {'device': 'm3', 'result': 'error', 'meta': {'39': 'CLOSE'}}}
08/16/2022 06:42:16 PM daemon.py[line:93]INFO - gui msg: {'req': {'device': 'm3', 'command': 'lock', 'lock_id': '410'}}
08/16/2022 06:42:16 PM daemon.py[line:775]INFO - para_str-->39,
08/16/2022 06:42:16 PM daemon.py[line:1008]INFO - b"ld\x01'\xff6"
08/16/2022 06:42:16 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 06:42:16 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 06:42:16 PM rcomm.py[line:143]INFO - data -> b'ldok\x92\x97'
08/16/2022 06:42:16 PM daemon.py[line:1025]INFO - b'li\xc8\xb3'
08/16/2022 06:42:16 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 06:42:16 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 06:42:16 PM rcomm.py[line:143]INFO - data -> b'li,79,14,254,31,68,240,\xb8\xee'
08/16/2022 06:42:16 PM daemon.py[line:1030]INFO - sensors state-->['79', '14', '254', '31', '68', '240']
08/16/2022 06:42:16 PM daemon.py[line:1033]INFO - [39]
08/16/2022 06:42:16 PM daemon.py[line:1025]INFO - b'li\xc8\xb3'
08/16/2022 06:42:16 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 06:42:16 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 06:42:17 PM rcomm.py[line:143]INFO - data -> b'li,79,14,254,31,68,240,\xb8\xee'
08/16/2022 06:42:17 PM daemon.py[line:1030]INFO - sensors state-->['79', '14', '254', '31', '68', '240']
08/16/2022 06:42:17 PM daemon.py[line:1033]INFO - [39]
08/16/2022 06:42:17 PM daemon.py[line:1025]INFO - b'li\xc8\xb3'
08/16/2022 06:42:17 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 06:42:17 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 06:42:17 PM rcomm.py[line:143]INFO - data -> b'li,79,14,254,31,68,240,\xb8\xee'
08/16/2022 06:42:17 PM daemon.py[line:1030]INFO - sensors state-->['79', '14', '254', '31', '68', '240']
08/16/2022 06:42:17 PM daemon.py[line:1033]INFO - [39]
08/16/2022 06:42:17 PM daemon.py[line:111]DEBUG - send_json -> {'rep': {'device': 'm3', 'result': 'error', 'meta': {'39': 'CLOSE'}}}
08/16/2022 06:42:22 PM daemon.py[line:93]INFO - gui msg: {'req': {'device': 'm3', 'command': 'lock', 'lock_id': '410'}}
08/16/2022 06:42:22 PM daemon.py[line:775]INFO - para_str-->39,
08/16/2022 06:42:22 PM daemon.py[line:1008]INFO - b"ld\x01'\xff6"
08/16/2022 06:42:22 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 06:42:22 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 06:42:22 PM rcomm.py[line:143]INFO - data -> b'ldok\x92\x97'
08/16/2022 06:42:22 PM daemon.py[line:1025]INFO - b'li\xc8\xb3'
08/16/2022 06:42:22 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 06:42:22 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 06:42:22 PM rcomm.py[line:143]INFO - data -> b'li,79,14,254,31,68,240,\xb8\xee'
08/16/2022 06:42:22 PM daemon.py[line:1030]INFO - sensors state-->['79', '14', '254', '31', '68', '240']
08/16/2022 06:42:22 PM daemon.py[line:1033]INFO - [39]
08/16/2022 06:42:22 PM daemon.py[line:1025]INFO - b'li\xc8\xb3'
08/16/2022 06:42:22 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 06:42:22 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 06:42:22 PM rcomm.py[line:143]INFO - data -> b'li,79,14,254,31,68,240,\xb8\xee'
08/16/2022 06:42:22 PM daemon.py[line:1030]INFO - sensors state-->['79', '14', '254', '31', '68', '240']
08/16/2022 06:42:22 PM daemon.py[line:1033]INFO - [39]
08/16/2022 06:42:22 PM daemon.py[line:1025]INFO - b'li\xc8\xb3'
08/16/2022 06:42:22 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 06:42:22 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 06:42:22 PM rcomm.py[line:143]INFO - data -> b'li,79,14,254,31,68,240,\xb8\xee'
08/16/2022 06:42:22 PM daemon.py[line:1030]INFO - sensors state-->['79', '14', '254', '31', '68', '240']
08/16/2022 06:42:22 PM daemon.py[line:1033]INFO - [39]
08/16/2022 06:42:23 PM daemon.py[line:111]DEBUG - send_json -> {'rep': {'device': 'm3', 'result': 'error', 'meta': {'39': 'CLOSE'}}}
08/16/2022 06:42:23 PM daemon.py[line:93]INFO - gui msg: {'req': {'device': 'm3', 'command': 'lock', 'lock_id': '410'}}
08/16/2022 06:42:23 PM daemon.py[line:775]INFO - para_str-->39,
08/16/2022 06:42:23 PM daemon.py[line:1008]INFO - b"ld\x01'\xff6"
08/16/2022 06:42:23 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 06:42:23 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 06:42:23 PM rcomm.py[line:143]INFO - data -> b'ldok\x92\x97'
08/16/2022 06:42:23 PM daemon.py[line:1025]INFO - b'li\xc8\xb3'
08/16/2022 06:42:23 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 06:42:23 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 06:42:23 PM rcomm.py[line:143]INFO - data -> b'li,79,14,254,31,68,240,\xb8\xee'
08/16/2022 06:42:23 PM daemon.py[line:1030]INFO - sensors state-->['79', '14', '254', '31', '68', '240']
08/16/2022 06:42:23 PM daemon.py[line:1033]INFO - [39]
08/16/2022 06:42:23 PM daemon.py[line:1025]INFO - b'li\xc8\xb3'
08/16/2022 06:42:23 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 06:42:23 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 06:42:23 PM rcomm.py[line:143]INFO - data -> b'li,79,14,254,31,68,240,\xb8\xee'
08/16/2022 06:42:23 PM daemon.py[line:1030]INFO - sensors state-->['79', '14', '254', '31', '68', '240']
08/16/2022 06:42:23 PM daemon.py[line:1033]INFO - [39]
08/16/2022 06:42:23 PM daemon.py[line:1025]INFO - b'li\xc8\xb3'
08/16/2022 06:42:23 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 06:42:24 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 06:42:24 PM rcomm.py[line:143]INFO - data -> b'li,79,14,254,31,68,240,\xb8\xee'
08/16/2022 06:42:24 PM daemon.py[line:1030]INFO - sensors state-->['79', '14', '254', '31', '68', '240']
08/16/2022 06:42:24 PM daemon.py[line:1033]INFO - [39]
08/16/2022 06:42:24 PM daemon.py[line:111]DEBUG - send_json -> {'rep': {'device': 'm3', 'result': 'error', 'meta': {'39': 'CLOSE'}}}
08/16/2022 06:42:24 PM daemon.py[line:93]INFO - gui msg: {'req': {'device': 'm3', 'command': 'lock', 'lock_id': '410'}}
08/16/2022 06:42:24 PM daemon.py[line:775]INFO - para_str-->39,
08/16/2022 06:42:24 PM daemon.py[line:1008]INFO - b"ld\x01'\xff6"
08/16/2022 06:42:24 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 06:42:24 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 06:42:24 PM rcomm.py[line:143]INFO - data -> b'ldok\x92\x97'
08/16/2022 06:42:24 PM daemon.py[line:1025]INFO - b'li\xc8\xb3'
08/16/2022 06:42:24 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 06:42:24 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 06:42:24 PM rcomm.py[line:143]INFO - data -> b'li,79,14,254,31,68,240,\xb8\xee'
08/16/2022 06:42:24 PM daemon.py[line:1030]INFO - sensors state-->['79', '14', '254', '31', '68', '240']
08/16/2022 06:42:24 PM daemon.py[line:1033]INFO - [39]
08/16/2022 06:42:24 PM daemon.py[line:1025]INFO - b'li\xc8\xb3'
08/16/2022 06:42:24 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 06:42:24 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 06:42:24 PM rcomm.py[line:143]INFO - data -> b'li,79,14,254,31,68,240,\xb8\xee'
08/16/2022 06:42:24 PM daemon.py[line:1030]INFO - sensors state-->['79', '14', '254', '31', '68', '240']
08/16/2022 06:42:24 PM daemon.py[line:1033]INFO - [39]
08/16/2022 06:42:25 PM daemon.py[line:1025]INFO - b'li\xc8\xb3'
08/16/2022 06:42:25 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 06:42:25 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 06:42:25 PM rcomm.py[line:143]INFO - data -> b'li,79,14,254,31,68,240,\xb8\xee'
08/16/2022 06:42:25 PM daemon.py[line:1030]INFO - sensors state-->['79', '14', '254', '31', '68', '240']
08/16/2022 06:42:25 PM daemon.py[line:1033]INFO - [39]
08/16/2022 06:42:25 PM daemon.py[line:111]DEBUG - send_json -> {'rep': {'device': 'm3', 'result': 'error', 'meta': {'39': 'CLOSE'}}}
08/16/2022 06:42:25 PM daemon.py[line:93]INFO - gui msg: {'req': {'device': 'm3', 'command': 'lock', 'lock_id': '410'}}
08/16/2022 06:42:25 PM daemon.py[line:775]INFO - para_str-->39,
08/16/2022 06:42:25 PM daemon.py[line:1008]INFO - b"ld\x01'\xff6"
08/16/2022 06:42:25 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 06:42:25 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 06:42:25 PM rcomm.py[line:143]INFO - data -> b'ldok\x92\x97'
08/16/2022 06:42:26 PM daemon.py[line:1025]INFO - b'li\xc8\xb3'
08/16/2022 06:42:26 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 06:42:26 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 06:42:26 PM rcomm.py[line:143]INFO - data -> b'li,79,14,254,31,68,240,\xb8\xee'
08/16/2022 06:42:26 PM daemon.py[line:1030]INFO - sensors state-->['79', '14', '254', '31', '68', '240']
08/16/2022 06:42:26 PM daemon.py[line:1033]INFO - [39]
08/16/2022 06:42:26 PM daemon.py[line:1025]INFO - b'li\xc8\xb3'
08/16/2022 06:42:26 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 06:42:26 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 06:42:26 PM rcomm.py[line:143]INFO - data -> b'li,79,14,254,31,68,240,\xb8\xee'
08/16/2022 06:42:26 PM daemon.py[line:1030]INFO - sensors state-->['79', '14', '254', '31', '68', '240']
08/16/2022 06:42:26 PM daemon.py[line:1033]INFO - [39]
08/16/2022 06:42:26 PM daemon.py[line:1025]INFO - b'li\xc8\xb3'
08/16/2022 06:42:26 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 06:42:26 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 06:42:26 PM rcomm.py[line:143]INFO - data -> b'li,79,14,254,31,68,240,\xb8\xee'
08/16/2022 06:42:26 PM daemon.py[line:1030]INFO - sensors state-->['79', '14', '254', '31', '68', '240']
08/16/2022 06:42:26 PM daemon.py[line:1033]INFO - [39]
08/16/2022 06:42:26 PM daemon.py[line:111]DEBUG - send_json -> {'rep': {'device': 'm3', 'result': 'error', 'meta': {'39': 'CLOSE'}}}
08/16/2022 06:42:27 PM daemon.py[line:93]INFO - gui msg: {'req': {'device': 'm3', 'command': 'lock', 'lock_id': '410'}}
08/16/2022 06:42:27 PM daemon.py[line:775]INFO - para_str-->39,
08/16/2022 06:42:27 PM daemon.py[line:1008]INFO - b"ld\x01'\xff6"
08/16/2022 06:42:27 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 06:42:27 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 06:42:27 PM rcomm.py[line:143]INFO - data -> b'ldok\x92\x97'
08/16/2022 06:42:27 PM daemon.py[line:1025]INFO - b'li\xc8\xb3'
08/16/2022 06:42:27 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 06:42:27 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 06:42:27 PM rcomm.py[line:143]INFO - data -> b'li,79,14,254,31,68,240,\xb8\xee'
08/16/2022 06:42:27 PM daemon.py[line:1030]INFO - sensors state-->['79', '14', '254', '31', '68', '240']
08/16/2022 06:42:27 PM daemon.py[line:1033]INFO - [39]
08/16/2022 06:42:27 PM daemon.py[line:1025]INFO - b'li\xc8\xb3'
08/16/2022 06:42:27 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 06:42:27 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 06:42:27 PM rcomm.py[line:143]INFO - data -> b'li,79,14,254,31,68,240,\xb8\xee'
08/16/2022 06:42:27 PM daemon.py[line:1030]INFO - sensors state-->['79', '14', '254', '31', '68', '240']
08/16/2022 06:42:27 PM daemon.py[line:1033]INFO - [39]
08/16/2022 06:42:28 PM daemon.py[line:1025]INFO - b'li\xc8\xb3'
08/16/2022 06:42:28 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 06:42:28 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 06:42:28 PM rcomm.py[line:143]INFO - data -> b'li,79,14,254,31,68,240,\xb8\xee'
08/16/2022 06:42:28 PM daemon.py[line:1030]INFO - sensors state-->['79', '14', '254', '31', '68', '240']
08/16/2022 06:42:28 PM daemon.py[line:1033]INFO - [39]
08/16/2022 06:42:28 PM daemon.py[line:111]DEBUG - send_json -> {'rep': {'device': 'm3', 'result': 'error', 'meta': {'39': 'CLOSE'}}}
08/16/2022 06:42:28 PM daemon.py[line:93]INFO - gui msg: {'req': {'device': 'm3', 'command': 'lock', 'lock_id': '410'}}
08/16/2022 06:42:28 PM daemon.py[line:775]INFO - para_str-->39,
08/16/2022 06:42:28 PM daemon.py[line:1008]INFO - b"ld\x01'\xff6"
08/16/2022 06:42:28 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 06:42:28 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 06:42:28 PM rcomm.py[line:143]INFO - data -> b'ldok\x92\x97'
08/16/2022 06:42:28 PM daemon.py[line:1025]INFO - b'li\xc8\xb3'
08/16/2022 06:42:28 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 06:42:28 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 06:42:28 PM rcomm.py[line:143]INFO - data -> b'li,79,14,254,31,68,240,\xb8\xee'
08/16/2022 06:42:28 PM daemon.py[line:1030]INFO - sensors state-->['79', '14', '254', '31', '68', '240']
08/16/2022 06:42:28 PM daemon.py[line:1033]INFO - [39]
08/16/2022 06:42:29 PM daemon.py[line:1025]INFO - b'li\xc8\xb3'
08/16/2022 06:42:29 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 06:42:29 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 06:42:29 PM rcomm.py[line:143]INFO - data -> b'li,79,14,254,31,68,240,\xb8\xee'
08/16/2022 06:42:29 PM daemon.py[line:1030]INFO - sensors state-->['79', '14', '254', '31', '68', '240']
08/16/2022 06:42:29 PM daemon.py[line:1033]INFO - [39]
08/16/2022 06:42:29 PM daemon.py[line:1025]INFO - b'li\xc8\xb3'
08/16/2022 06:42:29 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 06:42:29 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 06:42:29 PM rcomm.py[line:143]INFO - data -> b'li,79,14,254,31,68,240,\xb8\xee'
08/16/2022 06:42:29 PM daemon.py[line:1030]INFO - sensors state-->['79', '14', '254', '31', '68', '240']
08/16/2022 06:42:29 PM daemon.py[line:1033]INFO - [39]
08/16/2022 06:42:29 PM daemon.py[line:111]DEBUG - send_json -> {'rep': {'device': 'm3', 'result': 'error', 'meta': {'39': 'CLOSE'}}}
08/16/2022 06:42:29 PM daemon.py[line:93]INFO - gui msg: {'req': {'device': 'm3', 'command': 'lock', 'lock_id': '410'}}
08/16/2022 06:42:29 PM daemon.py[line:775]INFO - para_str-->39,
08/16/2022 06:42:29 PM daemon.py[line:1008]INFO - b"ld\x01'\xff6"
08/16/2022 06:42:29 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 06:42:29 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 06:42:29 PM rcomm.py[line:143]INFO - data -> b'ldok\x92\x97'
08/16/2022 06:42:29 PM daemon.py[line:1025]INFO - b'li\xc8\xb3'
08/16/2022 06:42:29 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 06:42:29 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 06:42:29 PM rcomm.py[line:143]INFO - data -> b'li,79,14,254,31,68,240,\xb8\xee'
08/16/2022 06:42:29 PM daemon.py[line:1030]INFO - sensors state-->['79', '14', '254', '31', '68', '240']
08/16/2022 06:42:29 PM daemon.py[line:1033]INFO - [39]
08/16/2022 06:42:30 PM daemon.py[line:1025]INFO - b'li\xc8\xb3'
08/16/2022 06:42:30 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 06:42:30 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 06:42:30 PM rcomm.py[line:143]INFO - data -> b'li,79,14,254,31,68,240,\xb8\xee'
08/16/2022 06:42:30 PM daemon.py[line:1030]INFO - sensors state-->['79', '14', '254', '31', '68', '240']
08/16/2022 06:42:30 PM daemon.py[line:1033]INFO - [39]
08/16/2022 06:42:30 PM daemon.py[line:1025]INFO - b'li\xc8\xb3'
08/16/2022 06:42:30 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 06:42:30 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 06:42:30 PM rcomm.py[line:143]INFO - data -> b'li,79,14,254,31,68,240,\xb8\xee'
08/16/2022 06:42:30 PM daemon.py[line:1030]INFO - sensors state-->['79', '14', '254', '31', '68', '240']
08/16/2022 06:42:30 PM daemon.py[line:1033]INFO - [39]
08/16/2022 06:42:30 PM daemon.py[line:111]DEBUG - send_json -> {'rep': {'device': 'm3', 'result': 'error', 'meta': {'39': 'CLOSE'}}}
08/16/2022 06:42:56 PM daemon.py[line:93]INFO - gui msg: {'req': {'device': 'm3', 'command': 'lock', 'lock_id': '410'}}
08/16/2022 06:42:56 PM daemon.py[line:775]INFO - para_str-->39,
08/16/2022 06:42:56 PM daemon.py[line:1008]INFO - b"ld\x01'\xff6"
08/16/2022 06:42:56 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 06:42:56 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 06:42:56 PM rcomm.py[line:143]INFO - data -> b'ldok\x92\x97'
08/16/2022 06:42:57 PM daemon.py[line:1025]INFO - b'li\xc8\xb3'
08/16/2022 06:42:57 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 06:42:57 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 06:42:57 PM rcomm.py[line:143]INFO - data -> b'li,79,14,254,31,4,240,A\x8d'
08/16/2022 06:42:57 PM daemon.py[line:1030]INFO - sensors state-->['79', '14', '254', '31', '4', '240']
08/16/2022 06:42:57 PM daemon.py[line:1033]INFO - [39]
08/16/2022 06:42:57 PM daemon.py[line:111]DEBUG - send_json -> {'rep': {'device': 'm3', 'result': 'success'}}
08/16/2022 06:42:57 PM daemon.py[line:93]INFO - gui msg: {'req': {'device': 'm3', 'command': 'lock', 'lock_id': '410'}}
08/16/2022 06:42:57 PM daemon.py[line:775]INFO - para_str-->39,
08/16/2022 06:42:57 PM daemon.py[line:1008]INFO - b"ld\x01'\xff6"
08/16/2022 06:42:57 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 06:42:58 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 06:42:58 PM rcomm.py[line:143]INFO - data -> b'ldok\x92\x97'
08/16/2022 06:42:58 PM daemon.py[line:1025]INFO - b'li\xc8\xb3'
08/16/2022 06:42:58 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 06:42:58 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 06:42:58 PM rcomm.py[line:143]INFO - data -> b'li,79,14,254,31,4,240,A\x8d'
08/16/2022 06:42:58 PM daemon.py[line:1030]INFO - sensors state-->['79', '14', '254', '31', '4', '240']
08/16/2022 06:42:58 PM daemon.py[line:1033]INFO - [39]
08/16/2022 06:42:58 PM daemon.py[line:111]DEBUG - send_json -> {'rep': {'device': 'm3', 'result': 'success'}}
08/16/2022 06:42:59 PM daemon.py[line:93]INFO - gui msg: {'req': {'device': 'm3', 'command': 'lock', 'lock_id': '410'}}
08/16/2022 06:42:59 PM daemon.py[line:775]INFO - para_str-->39,
08/16/2022 06:42:59 PM daemon.py[line:1008]INFO - b"ld\x01'\xff6"
08/16/2022 06:42:59 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 06:42:59 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 06:42:59 PM rcomm.py[line:143]INFO - data -> b'ldok\x92\x97'
08/16/2022 06:42:59 PM daemon.py[line:1025]INFO - b'li\xc8\xb3'
08/16/2022 06:42:59 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 06:42:59 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 06:42:59 PM rcomm.py[line:143]INFO - data -> b'li,79,14,254,31,4,240,A\x8d'
08/16/2022 06:42:59 PM daemon.py[line:1030]INFO - sensors state-->['79', '14', '254', '31', '4', '240']
08/16/2022 06:42:59 PM daemon.py[line:1033]INFO - [39]
08/16/2022 06:42:59 PM daemon.py[line:111]DEBUG - send_json -> {'rep': {'device': 'm3', 'result': 'success'}}
08/16/2022 06:43:00 PM daemon.py[line:93]INFO - gui msg: {'req': {'device': 'm3', 'command': 'lock', 'lock_id': '410'}}
08/16/2022 06:43:00 PM daemon.py[line:775]INFO - para_str-->39,
08/16/2022 06:43:00 PM daemon.py[line:1008]INFO - b"ld\x01'\xff6"
08/16/2022 06:43:00 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 06:43:00 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 06:43:00 PM rcomm.py[line:143]INFO - data -> b'ldok\x92\x97'
08/16/2022 06:43:00 PM daemon.py[line:1025]INFO - b'li\xc8\xb3'
08/16/2022 06:43:00 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 06:43:00 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 06:43:00 PM rcomm.py[line:143]INFO - data -> b'li,79,14,254,31,4,240,A\x8d'
08/16/2022 06:43:00 PM daemon.py[line:1030]INFO - sensors state-->['79', '14', '254', '31', '4', '240']
08/16/2022 06:43:00 PM daemon.py[line:1033]INFO - [39]
08/16/2022 06:43:00 PM daemon.py[line:111]DEBUG - send_json -> {'rep': {'device': 'm3', 'result': 'success'}}
08/16/2022 06:43:05 PM daemon.py[line:93]INFO - gui msg: {'req': {'device': 'm3', 'command': 'lock', 'lock_id': '411'}}
08/16/2022 06:43:05 PM daemon.py[line:775]INFO - para_str-->40,
08/16/2022 06:43:05 PM daemon.py[line:1008]INFO - b'ld\x01(\x10\xc7'
08/16/2022 06:43:05 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 06:43:05 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 06:43:05 PM rcomm.py[line:143]INFO - data -> b'ldok\x92\x97'
08/16/2022 06:43:05 PM daemon.py[line:1025]INFO - b'li\xc8\xb3'
08/16/2022 06:43:05 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 06:43:05 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 06:43:05 PM rcomm.py[line:143]INFO - data -> b'li,79,14,254,31,4,240,A\x8d'
08/16/2022 06:43:05 PM daemon.py[line:1030]INFO - sensors state-->['79', '14', '254', '31', '4', '240']
08/16/2022 06:43:05 PM daemon.py[line:1033]INFO - [40]
08/16/2022 06:43:05 PM daemon.py[line:111]DEBUG - send_json -> {'rep': {'device': 'm3', 'result': 'success'}}
08/16/2022 06:43:06 PM daemon.py[line:93]INFO - gui msg: {'req': {'device': 'm3', 'command': 'lock', 'lock_id': '411'}}
08/16/2022 06:43:06 PM daemon.py[line:775]INFO - para_str-->40,
08/16/2022 06:43:06 PM daemon.py[line:1008]INFO - b'ld\x01(\x10\xc7'
08/16/2022 06:43:06 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 06:43:06 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 06:43:06 PM rcomm.py[line:143]INFO - data -> b'ldok\x92\x97'
08/16/2022 06:43:06 PM daemon.py[line:1025]INFO - b'li\xc8\xb3'
08/16/2022 06:43:06 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 06:43:06 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 06:43:06 PM rcomm.py[line:143]INFO - data -> b'li,79,14,254,31,4,240,A\x8d'
08/16/2022 06:43:06 PM daemon.py[line:1030]INFO - sensors state-->['79', '14', '254', '31', '4', '240']
08/16/2022 06:43:06 PM daemon.py[line:1033]INFO - [40]
08/16/2022 06:43:06 PM daemon.py[line:111]DEBUG - send_json -> {'rep': {'device': 'm3', 'result': 'success'}}
08/16/2022 06:43:07 PM daemon.py[line:93]INFO - gui msg: {'req': {'device': 'm3', 'command': 'lock', 'lock_id': '411'}}
08/16/2022 06:43:07 PM daemon.py[line:775]INFO - para_str-->40,
08/16/2022 06:43:07 PM daemon.py[line:1008]INFO - b'ld\x01(\x10\xc7'
08/16/2022 06:43:07 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 06:43:07 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 06:43:07 PM rcomm.py[line:143]INFO - data -> b'ldok\x92\x97'
08/16/2022 06:43:07 PM daemon.py[line:1025]INFO - b'li\xc8\xb3'
08/16/2022 06:43:07 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 06:43:07 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 06:43:07 PM rcomm.py[line:143]INFO - data -> b'li,79,14,254,31,4,240,A\x8d'
08/16/2022 06:43:07 PM daemon.py[line:1030]INFO - sensors state-->['79', '14', '254', '31', '4', '240']
08/16/2022 06:43:07 PM daemon.py[line:1033]INFO - [40]
08/16/2022 06:43:07 PM daemon.py[line:111]DEBUG - send_json -> {'rep': {'device': 'm3', 'result': 'success'}}
08/16/2022 06:43:08 PM daemon.py[line:93]INFO - gui msg: {'req': {'device': 'm3', 'command': 'lock', 'lock_id': '411'}}
08/16/2022 06:43:08 PM daemon.py[line:775]INFO - para_str-->40,
08/16/2022 06:43:08 PM daemon.py[line:1008]INFO - b'ld\x01(\x10\xc7'
08/16/2022 06:43:08 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 06:43:08 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 06:43:08 PM rcomm.py[line:143]INFO - data -> b'ldok\x92\x97'
08/16/2022 06:43:08 PM daemon.py[line:1025]INFO - b'li\xc8\xb3'
08/16/2022 06:43:08 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 06:43:08 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 06:43:08 PM rcomm.py[line:143]INFO - data -> b'li,79,14,254,31,4,240,A\x8d'
08/16/2022 06:43:08 PM daemon.py[line:1030]INFO - sensors state-->['79', '14', '254', '31', '4', '240']
08/16/2022 06:43:08 PM daemon.py[line:1033]INFO - [40]
08/16/2022 06:43:08 PM daemon.py[line:111]DEBUG - send_json -> {'rep': {'device': 'm3', 'result': 'success'}}
08/16/2022 06:43:49 PM daemon.py[line:93]INFO - gui msg: {'req': {'device': 'm3', 'command': 'lock', 'lock_id': '411'}}
08/16/2022 06:43:49 PM daemon.py[line:775]INFO - para_str-->40,
08/16/2022 06:43:49 PM daemon.py[line:1008]INFO - b'ld\x01(\x10\xc7'
08/16/2022 06:43:49 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 06:43:49 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 06:43:49 PM rcomm.py[line:143]INFO - data -> b'ldok\x92\x97'
08/16/2022 06:43:50 PM daemon.py[line:1025]INFO - b'li\xc8\xb3'
08/16/2022 06:43:50 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 06:43:50 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 06:43:50 PM rcomm.py[line:143]INFO - data -> b'li,79,14,254,31,68,240,\xb8\xee'
08/16/2022 06:43:50 PM daemon.py[line:1030]INFO - sensors state-->['79', '14', '254', '31', '68', '240']
08/16/2022 06:43:50 PM daemon.py[line:1033]INFO - [40]
08/16/2022 06:43:50 PM daemon.py[line:111]DEBUG - send_json -> {'rep': {'device': 'm3', 'result': 'success'}}
08/16/2022 06:43:51 PM daemon.py[line:93]INFO - gui msg: {'req': {'device': 'm3', 'command': 'lock', 'lock_id': '410'}}
08/16/2022 06:43:51 PM daemon.py[line:775]INFO - para_str-->39,
08/16/2022 06:43:51 PM daemon.py[line:1008]INFO - b"ld\x01'\xff6"
08/16/2022 06:43:51 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 06:43:51 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 06:43:51 PM rcomm.py[line:143]INFO - data -> b'ldok\x92\x97'
08/16/2022 06:43:51 PM daemon.py[line:1025]INFO - b'li\xc8\xb3'
08/16/2022 06:43:51 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 06:43:51 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 06:43:51 PM rcomm.py[line:143]INFO - data -> b'li,79,14,254,31,68,240,\xb8\xee'
08/16/2022 06:43:51 PM daemon.py[line:1030]INFO - sensors state-->['79', '14', '254', '31', '68', '240']
08/16/2022 06:43:51 PM daemon.py[line:1033]INFO - [39]
08/16/2022 06:43:51 PM daemon.py[line:1025]INFO - b'li\xc8\xb3'
08/16/2022 06:43:51 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 06:43:51 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 06:43:51 PM rcomm.py[line:143]INFO - data -> b'li,79,14,254,31,68,240,\xb8\xee'
08/16/2022 06:43:51 PM daemon.py[line:1030]INFO - sensors state-->['79', '14', '254', '31', '68', '240']
08/16/2022 06:43:51 PM daemon.py[line:1033]INFO - [39]
08/16/2022 06:43:51 PM daemon.py[line:1025]INFO - b'li\xc8\xb3'
08/16/2022 06:43:51 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 06:43:51 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 06:43:51 PM rcomm.py[line:143]INFO - data -> b'li,79,14,254,31,68,240,\xb8\xee'
08/16/2022 06:43:51 PM daemon.py[line:1030]INFO - sensors state-->['79', '14', '254', '31', '68', '240']
08/16/2022 06:43:51 PM daemon.py[line:1033]INFO - [39]
08/16/2022 06:43:51 PM daemon.py[line:111]DEBUG - send_json -> {'rep': {'device': 'm3', 'result': 'error', 'meta': {'39': 'CLOSE'}}}
08/16/2022 06:43:52 PM daemon.py[line:93]INFO - gui msg: {'req': {'device': 'm3', 'command': 'lock', 'lock_id': '410'}}
08/16/2022 06:43:52 PM daemon.py[line:775]INFO - para_str-->39,
08/16/2022 06:43:52 PM daemon.py[line:1008]INFO - b"ld\x01'\xff6"
08/16/2022 06:43:52 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 06:43:52 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 06:43:52 PM rcomm.py[line:143]INFO - data -> b'ldok\x92\x97'
08/16/2022 06:43:52 PM daemon.py[line:1025]INFO - b'li\xc8\xb3'
08/16/2022 06:43:52 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 06:43:52 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 06:43:53 PM rcomm.py[line:143]INFO - data -> b'li,79,14,254,31,68,240,\xb8\xee'
08/16/2022 06:43:53 PM daemon.py[line:1030]INFO - sensors state-->['79', '14', '254', '31', '68', '240']
08/16/2022 06:43:53 PM daemon.py[line:1033]INFO - [39]
08/16/2022 06:43:53 PM daemon.py[line:1025]INFO - b'li\xc8\xb3'
08/16/2022 06:43:53 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 06:43:53 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 06:43:53 PM rcomm.py[line:143]INFO - data -> b'li,79,14,254,31,68,240,\xb8\xee'
08/16/2022 06:43:53 PM daemon.py[line:1030]INFO - sensors state-->['79', '14', '254', '31', '68', '240']
08/16/2022 06:43:53 PM daemon.py[line:1033]INFO - [39]
08/16/2022 06:43:53 PM daemon.py[line:1025]INFO - b'li\xc8\xb3'
08/16/2022 06:43:53 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 06:43:53 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 06:43:53 PM rcomm.py[line:143]INFO - data -> b'li,79,14,254,31,68,240,\xb8\xee'
08/16/2022 06:43:53 PM daemon.py[line:1030]INFO - sensors state-->['79', '14', '254', '31', '68', '240']
08/16/2022 06:43:53 PM daemon.py[line:1033]INFO - [39]
08/16/2022 06:43:53 PM daemon.py[line:111]DEBUG - send_json -> {'rep': {'device': 'm3', 'result': 'error', 'meta': {'39': 'CLOSE'}}}
08/16/2022 06:43:54 PM daemon.py[line:93]INFO - gui msg: {'req': {'device': 'm3', 'command': 'lock', 'lock_id': '410'}}
08/16/2022 06:43:54 PM daemon.py[line:775]INFO - para_str-->39,
08/16/2022 06:43:54 PM daemon.py[line:1008]INFO - b"ld\x01'\xff6"
08/16/2022 06:43:54 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 06:43:54 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 06:43:54 PM rcomm.py[line:143]INFO - data -> b'ldok\x92\x97'
08/16/2022 06:43:54 PM daemon.py[line:1025]INFO - b'li\xc8\xb3'
08/16/2022 06:43:54 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 06:43:54 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 06:43:54 PM rcomm.py[line:143]INFO - data -> b'li,79,14,254,31,68,240,\xb8\xee'
08/16/2022 06:43:54 PM daemon.py[line:1030]INFO - sensors state-->['79', '14', '254', '31', '68', '240']
08/16/2022 06:43:54 PM daemon.py[line:1033]INFO - [39]
08/16/2022 06:43:54 PM daemon.py[line:1025]INFO - b'li\xc8\xb3'
08/16/2022 06:43:54 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 06:43:54 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 06:43:54 PM rcomm.py[line:143]INFO - data -> b'li,79,14,254,31,68,240,\xb8\xee'
08/16/2022 06:43:54 PM daemon.py[line:1030]INFO - sensors state-->['79', '14', '254', '31', '68', '240']
08/16/2022 06:43:54 PM daemon.py[line:1033]INFO - [39]
08/16/2022 06:43:55 PM daemon.py[line:1025]INFO - b'li\xc8\xb3'
08/16/2022 06:43:55 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 06:43:55 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 06:43:55 PM rcomm.py[line:143]INFO - data -> b'li,79,14,254,31,68,240,\xb8\xee'
08/16/2022 06:43:55 PM daemon.py[line:1030]INFO - sensors state-->['79', '14', '254', '31', '68', '240']
08/16/2022 06:43:55 PM daemon.py[line:1033]INFO - [39]
08/16/2022 06:43:55 PM daemon.py[line:111]DEBUG - send_json -> {'rep': {'device': 'm3', 'result': 'error', 'meta': {'39': 'CLOSE'}}}
08/16/2022 06:43:59 PM serv.py[line:49]INFO - serv heatbeat
08/16/2022 06:44:03 PM daemon.py[line:93]INFO - gui msg: {'req': {'device': 'm3', 'command': 'lock', 'lock_id': '410'}}
08/16/2022 06:44:03 PM daemon.py[line:775]INFO - para_str-->39,
08/16/2022 06:44:03 PM daemon.py[line:1008]INFO - b"ld\x01'\xff6"
08/16/2022 06:44:03 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 06:44:03 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 06:44:03 PM rcomm.py[line:143]INFO - data -> b'ldok\x92\x97'
08/16/2022 06:44:04 PM daemon.py[line:1025]INFO - b'li\xc8\xb3'
08/16/2022 06:44:04 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 06:44:04 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 06:44:04 PM rcomm.py[line:143]INFO - data -> b'li,79,14,254,31,68,240,\xb8\xee'
08/16/2022 06:44:04 PM daemon.py[line:1030]INFO - sensors state-->['79', '14', '254', '31', '68', '240']
08/16/2022 06:44:04 PM daemon.py[line:1033]INFO - [39]
08/16/2022 06:44:04 PM daemon.py[line:1025]INFO - b'li\xc8\xb3'
08/16/2022 06:44:04 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 06:44:04 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 06:44:04 PM rcomm.py[line:143]INFO - data -> b'li,79,14,254,31,68,240,\xb8\xee'
08/16/2022 06:44:04 PM daemon.py[line:1030]INFO - sensors state-->['79', '14', '254', '31', '68', '240']
08/16/2022 06:44:04 PM daemon.py[line:1033]INFO - [39]
08/16/2022 06:44:04 PM daemon.py[line:1025]INFO - b'li\xc8\xb3'
08/16/2022 06:44:04 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 06:44:04 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 06:44:04 PM rcomm.py[line:143]INFO - data -> b'li,79,14,254,31,68,240,\xb8\xee'
08/16/2022 06:44:04 PM daemon.py[line:1030]INFO - sensors state-->['79', '14', '254', '31', '68', '240']
08/16/2022 06:44:04 PM daemon.py[line:1033]INFO - [39]
08/16/2022 06:44:04 PM daemon.py[line:111]DEBUG - send_json -> {'rep': {'device': 'm3', 'result': 'error', 'meta': {'39': 'CLOSE'}}}
08/16/2022 06:44:18 PM daemon.py[line:93]INFO - gui msg: {'req': {'device': 'm3', 'command': 'lock', 'lock_id': '410'}}
08/16/2022 06:44:18 PM daemon.py[line:775]INFO - para_str-->39,
08/16/2022 06:44:18 PM daemon.py[line:1008]INFO - b"ld\x01'\xff6"
08/16/2022 06:44:18 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 06:44:19 PM daemon.py[line:1018]ERROR - no ack
08/16/2022 06:44:19 PM daemon.py[line:1025]INFO - b'li\xc8\xb3'
08/16/2022 06:44:19 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 06:44:19 PM daemon.py[line:1042]INFO - no ack
08/16/2022 06:44:19 PM daemon.py[line:97]ERROR - failed to process json: 'bool' object has no attribute 'values'
08/16/2022 06:44:39 PM daemon.py[line:93]INFO - gui msg: {'req': {'device': 'm3', 'command': 'lock', 'lock_id': '411'}}
08/16/2022 06:44:39 PM daemon.py[line:775]INFO - para_str-->40,
08/16/2022 06:44:39 PM daemon.py[line:1008]INFO - b'ld\x01(\x10\xc7'
08/16/2022 06:44:39 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 06:44:39 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 06:44:39 PM rcomm.py[line:143]INFO - data -> b'ldok\x92\x97'
08/16/2022 06:44:39 PM daemon.py[line:1025]INFO - b'li\xc8\xb3'
08/16/2022 06:44:39 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 06:44:39 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 06:44:39 PM rcomm.py[line:143]INFO - data -> b'li,79,14,254,31,68,240,\xb8\xee'
08/16/2022 06:44:39 PM daemon.py[line:1030]INFO - sensors state-->['79', '14', '254', '31', '68', '240']
08/16/2022 06:44:39 PM daemon.py[line:1033]INFO - [40]
08/16/2022 06:44:39 PM daemon.py[line:111]DEBUG - send_json -> {'rep': {'device': 'm3', 'result': 'success'}}
08/16/2022 06:44:40 PM daemon.py[line:93]INFO - gui msg: {'req': {'device': 'm3', 'command': 'lock', 'lock_id': '411'}}
08/16/2022 06:44:40 PM daemon.py[line:775]INFO - para_str-->40,
08/16/2022 06:44:40 PM daemon.py[line:1008]INFO - b'ld\x01(\x10\xc7'
08/16/2022 06:44:40 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 06:44:40 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 06:44:40 PM rcomm.py[line:143]INFO - data -> b'ldok\x92\x97'
08/16/2022 06:44:40 PM daemon.py[line:1025]INFO - b'li\xc8\xb3'
08/16/2022 06:44:40 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 06:44:40 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 06:44:40 PM rcomm.py[line:143]INFO - data -> b'li,79,14,254,31,68,240,\xb8\xee'
08/16/2022 06:44:40 PM daemon.py[line:1030]INFO - sensors state-->['79', '14', '254', '31', '68', '240']
08/16/2022 06:44:40 PM daemon.py[line:1033]INFO - [40]
08/16/2022 06:44:40 PM daemon.py[line:111]DEBUG - send_json -> {'rep': {'device': 'm3', 'result': 'success'}}
08/16/2022 06:44:41 PM daemon.py[line:93]INFO - gui msg: {'req': {'device': 'm3', 'command': 'lock', 'lock_id': '411'}}
08/16/2022 06:44:41 PM daemon.py[line:775]INFO - para_str-->40,
08/16/2022 06:44:41 PM daemon.py[line:1008]INFO - b'ld\x01(\x10\xc7'
08/16/2022 06:44:41 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 06:44:41 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 06:44:41 PM rcomm.py[line:143]INFO - data -> b'ldok\x92\x97'
08/16/2022 06:44:41 PM daemon.py[line:1025]INFO - b'li\xc8\xb3'
08/16/2022 06:44:41 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 06:44:42 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 06:44:42 PM rcomm.py[line:143]INFO - data -> b'li,79,14,254,31,68,240,\xb8\xee'
08/16/2022 06:44:42 PM daemon.py[line:1030]INFO - sensors state-->['79', '14', '254', '31', '68', '240']
08/16/2022 06:44:42 PM daemon.py[line:1033]INFO - [40]
08/16/2022 06:44:42 PM daemon.py[line:111]DEBUG - send_json -> {'rep': {'device': 'm3', 'result': 'success'}}
08/16/2022 06:44:42 PM daemon.py[line:93]INFO - gui msg: {'req': {'device': 'm3', 'command': 'lock', 'lock_id': '411'}}
08/16/2022 06:44:42 PM daemon.py[line:775]INFO - para_str-->40,
08/16/2022 06:44:42 PM daemon.py[line:1008]INFO - b'ld\x01(\x10\xc7'
08/16/2022 06:44:42 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 06:44:42 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 06:44:42 PM rcomm.py[line:143]INFO - data -> b'ldok\x92\x97'
08/16/2022 06:44:43 PM daemon.py[line:1025]INFO - b'li\xc8\xb3'
08/16/2022 06:44:43 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 06:44:43 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 06:44:43 PM rcomm.py[line:143]INFO - data -> b'li,79,14,254,31,68,240,\xb8\xee'
08/16/2022 06:44:43 PM daemon.py[line:1030]INFO - sensors state-->['79', '14', '254', '31', '68', '240']
08/16/2022 06:44:43 PM daemon.py[line:1033]INFO - [40]
08/16/2022 06:44:43 PM daemon.py[line:111]DEBUG - send_json -> {'rep': {'device': 'm3', 'result': 'success'}}
08/16/2022 06:44:44 PM daemon.py[line:93]INFO - gui msg: {'req': {'device': 'm3', 'command': 'lock', 'lock_id': '411'}}
08/16/2022 06:44:44 PM daemon.py[line:775]INFO - para_str-->40,
08/16/2022 06:44:44 PM daemon.py[line:1008]INFO - b'ld\x01(\x10\xc7'
08/16/2022 06:44:44 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 06:44:44 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 06:44:44 PM rcomm.py[line:143]INFO - data -> b'ldok\x92\x97'
08/16/2022 06:44:44 PM daemon.py[line:1025]INFO - b'li\xc8\xb3'
08/16/2022 06:44:44 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 06:44:44 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 06:44:44 PM rcomm.py[line:143]INFO - data -> b'li,79,14,254,31,68,240,\xb8\xee'
08/16/2022 06:44:44 PM daemon.py[line:1030]INFO - sensors state-->['79', '14', '254', '31', '68', '240']
08/16/2022 06:44:44 PM daemon.py[line:1033]INFO - [40]
08/16/2022 06:44:44 PM daemon.py[line:111]DEBUG - send_json -> {'rep': {'device': 'm3', 'result': 'success'}}
08/16/2022 06:44:50 PM daemon.py[line:93]INFO - gui msg: {'req': {'device': 'm3', 'command': 'lock', 'lock_id': '410'}}
08/16/2022 06:44:50 PM daemon.py[line:775]INFO - para_str-->39,
08/16/2022 06:44:50 PM daemon.py[line:1008]INFO - b"ld\x01'\xff6"
08/16/2022 06:44:50 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 06:44:50 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 06:44:50 PM rcomm.py[line:143]INFO - data -> b'ldok\x92\x97'
08/16/2022 06:44:50 PM daemon.py[line:1025]INFO - b'li\xc8\xb3'
08/16/2022 06:44:50 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 06:44:50 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 06:44:50 PM rcomm.py[line:143]INFO - data -> b'li,79,14,254,31,68,240,\xb8\xee'
08/16/2022 06:44:50 PM daemon.py[line:1030]INFO - sensors state-->['79', '14', '254', '31', '68', '240']
08/16/2022 06:44:50 PM daemon.py[line:1033]INFO - [39]
08/16/2022 06:44:50 PM daemon.py[line:1025]INFO - b'li\xc8\xb3'
08/16/2022 06:44:50 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 06:44:50 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 06:44:50 PM rcomm.py[line:143]INFO - data -> b'li,79,14,254,31,68,240,\xb8\xee'
08/16/2022 06:44:50 PM daemon.py[line:1030]INFO - sensors state-->['79', '14', '254', '31', '68', '240']
08/16/2022 06:44:50 PM daemon.py[line:1033]INFO - [39]
08/16/2022 06:44:50 PM daemon.py[line:1025]INFO - b'li\xc8\xb3'
08/16/2022 06:44:50 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 06:44:50 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 06:44:50 PM rcomm.py[line:143]INFO - data -> b'li,79,14,254,31,68,240,\xb8\xee'
08/16/2022 06:44:50 PM daemon.py[line:1030]INFO - sensors state-->['79', '14', '254', '31', '68', '240']
08/16/2022 06:44:50 PM daemon.py[line:1033]INFO - [39]
08/16/2022 06:44:50 PM daemon.py[line:111]DEBUG - send_json -> {'rep': {'device': 'm3', 'result': 'error', 'meta': {'39': 'CLOSE'}}}
08/16/2022 06:44:51 PM daemon.py[line:93]INFO - gui msg: {'req': {'device': 'm3', 'command': 'lock', 'lock_id': '410'}}
08/16/2022 06:44:51 PM daemon.py[line:775]INFO - para_str-->39,
08/16/2022 06:44:51 PM daemon.py[line:1008]INFO - b"ld\x01'\xff6"
08/16/2022 06:44:51 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 06:44:51 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 06:44:51 PM rcomm.py[line:143]INFO - data -> b'ldok\x92\x97'
08/16/2022 06:44:52 PM daemon.py[line:1025]INFO - b'li\xc8\xb3'
08/16/2022 06:44:52 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 06:44:52 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 06:44:52 PM rcomm.py[line:143]INFO - data -> b'li,79,14,254,31,68,240,\xb8\xee'
08/16/2022 06:44:52 PM daemon.py[line:1030]INFO - sensors state-->['79', '14', '254', '31', '68', '240']
08/16/2022 06:44:52 PM daemon.py[line:1033]INFO - [39]
08/16/2022 06:44:52 PM daemon.py[line:1025]INFO - b'li\xc8\xb3'
08/16/2022 06:44:52 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 06:44:52 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 06:44:52 PM rcomm.py[line:143]INFO - data -> b'li,79,14,254,31,68,240,\xb8\xee'
08/16/2022 06:44:52 PM daemon.py[line:1030]INFO - sensors state-->['79', '14', '254', '31', '68', '240']
08/16/2022 06:44:52 PM daemon.py[line:1033]INFO - [39]
08/16/2022 06:44:52 PM daemon.py[line:1025]INFO - b'li\xc8\xb3'
08/16/2022 06:44:52 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 06:44:52 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 06:44:52 PM rcomm.py[line:143]INFO - data -> b'li,79,14,254,31,68,240,\xb8\xee'
08/16/2022 06:44:52 PM daemon.py[line:1030]INFO - sensors state-->['79', '14', '254', '31', '68', '240']
08/16/2022 06:44:52 PM daemon.py[line:1033]INFO - [39]
08/16/2022 06:44:52 PM daemon.py[line:111]DEBUG - send_json -> {'rep': {'device': 'm3', 'result': 'error', 'meta': {'39': 'CLOSE'}}}
08/16/2022 06:46:21 PM daemon.py[line:93]INFO - gui msg: {'req': {'device': 'm3', 'command': 'lock', 'lock_id': '410'}}
08/16/2022 06:46:21 PM daemon.py[line:775]INFO - para_str-->39,
08/16/2022 06:46:21 PM daemon.py[line:1008]INFO - b"ld\x01'\xff6"
08/16/2022 06:46:21 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 06:46:21 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 06:46:21 PM rcomm.py[line:143]INFO - data -> b'ldok\x92\x97'
08/16/2022 06:46:21 PM daemon.py[line:1025]INFO - b'li\xc8\xb3'
08/16/2022 06:46:21 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 06:46:21 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 06:46:21 PM rcomm.py[line:143]INFO - data -> b'li,79,14,254,159,4,240,\x01\x16'
08/16/2022 06:46:21 PM daemon.py[line:1030]INFO - sensors state-->['79', '14', '254', '159', '4', '240']
08/16/2022 06:46:21 PM daemon.py[line:1033]INFO - [39]
08/16/2022 06:46:21 PM daemon.py[line:111]DEBUG - send_json -> {'rep': {'device': 'm3', 'result': 'success'}}
08/16/2022 06:46:23 PM daemon.py[line:93]INFO - gui msg: {'req': {'device': 'm3', 'command': 'lock', 'lock_id': '411'}}
08/16/2022 06:46:23 PM daemon.py[line:775]INFO - para_str-->40,
08/16/2022 06:46:23 PM daemon.py[line:1008]INFO - b'ld\x01(\x10\xc7'
08/16/2022 06:46:23 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 06:46:23 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 06:46:23 PM rcomm.py[line:143]INFO - data -> b'ldok\x92\x97'
08/16/2022 06:46:23 PM daemon.py[line:1025]INFO - b'li\xc8\xb3'
08/16/2022 06:46:23 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 06:46:23 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 06:46:23 PM rcomm.py[line:143]INFO - data -> b'li,79,14,254,159,4,240,\x01\x16'
08/16/2022 06:46:23 PM daemon.py[line:1030]INFO - sensors state-->['79', '14', '254', '159', '4', '240']
08/16/2022 06:46:23 PM daemon.py[line:1033]INFO - [40]
08/16/2022 06:46:23 PM daemon.py[line:111]DEBUG - send_json -> {'rep': {'device': 'm3', 'result': 'success'}}
08/16/2022 06:46:24 PM daemon.py[line:93]INFO - gui msg: {'req': {'device': 'm3', 'command': 'lock', 'lock_id': '410'}}
08/16/2022 06:46:24 PM daemon.py[line:775]INFO - para_str-->39,
08/16/2022 06:46:24 PM daemon.py[line:1008]INFO - b"ld\x01'\xff6"
08/16/2022 06:46:24 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 06:46:24 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 06:46:24 PM rcomm.py[line:143]INFO - data -> b'ldok\x92\x97'
08/16/2022 06:46:24 PM daemon.py[line:1025]INFO - b'li\xc8\xb3'
08/16/2022 06:46:24 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 06:46:25 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 06:46:25 PM rcomm.py[line:143]INFO - data -> b'li,79,14,254,159,4,240,\x01\x16'
08/16/2022 06:46:25 PM daemon.py[line:1030]INFO - sensors state-->['79', '14', '254', '159', '4', '240']
08/16/2022 06:46:25 PM daemon.py[line:1033]INFO - [39]
08/16/2022 06:46:25 PM daemon.py[line:111]DEBUG - send_json -> {'rep': {'device': 'm3', 'result': 'success'}}
08/16/2022 06:46:55 PM daemon.py[line:93]INFO - gui msg: {'req': {'device': 'm3', 'command': 'lock', 'lock_id': '410'}}
08/16/2022 06:46:55 PM daemon.py[line:775]INFO - para_str-->39,
08/16/2022 06:46:55 PM daemon.py[line:1008]INFO - b"ld\x01'\xff6"
08/16/2022 06:46:55 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 06:46:56 PM daemon.py[line:1018]ERROR - no ack
08/16/2022 06:46:56 PM daemon.py[line:1025]INFO - b'li\xc8\xb3'
08/16/2022 06:46:56 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 06:46:56 PM daemon.py[line:1042]INFO - no ack
08/16/2022 06:46:56 PM daemon.py[line:97]ERROR - failed to process json: 'bool' object has no attribute 'values'
08/16/2022 06:46:57 PM daemon.py[line:93]INFO - gui msg: {'req': {'device': 'm3', 'command': 'lock', 'lock_id': '410'}}
08/16/2022 06:46:57 PM daemon.py[line:775]INFO - para_str-->39,
08/16/2022 06:46:57 PM daemon.py[line:1008]INFO - b"ld\x01'\xff6"
08/16/2022 06:46:57 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 06:46:58 PM daemon.py[line:1018]ERROR - no ack
08/16/2022 06:46:58 PM daemon.py[line:1025]INFO - b'li\xc8\xb3'
08/16/2022 06:46:58 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 06:46:58 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 06:46:58 PM rcomm.py[line:143]INFO - data -> b'li,79,14,254,31,4,240,A\x8d'
08/16/2022 06:46:58 PM daemon.py[line:1030]INFO - sensors state-->['79', '14', '254', '31', '4', '240']
08/16/2022 06:46:58 PM daemon.py[line:1033]INFO - [39]
08/16/2022 06:46:58 PM daemon.py[line:111]DEBUG - send_json -> {'rep': {'device': 'm3', 'result': 'success'}}
08/16/2022 06:46:59 PM daemon.py[line:93]INFO - gui msg: {'req': {'device': 'm3', 'command': 'lock', 'lock_id': '410'}}
08/16/2022 06:46:59 PM daemon.py[line:775]INFO - para_str-->39,
08/16/2022 06:46:59 PM daemon.py[line:1008]INFO - b"ld\x01'\xff6"
08/16/2022 06:46:59 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 06:46:59 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 06:46:59 PM rcomm.py[line:143]INFO - data -> b'ldok\x92\x97'
08/16/2022 06:47:00 PM daemon.py[line:1025]INFO - b'li\xc8\xb3'
08/16/2022 06:47:00 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 06:47:00 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 06:47:00 PM rcomm.py[line:143]INFO - data -> b'li,79,14,254,31,4,240,A\x8d'
08/16/2022 06:47:00 PM daemon.py[line:1030]INFO - sensors state-->['79', '14', '254', '31', '4', '240']
08/16/2022 06:47:00 PM daemon.py[line:1033]INFO - [39]
08/16/2022 06:47:00 PM daemon.py[line:111]DEBUG - send_json -> {'rep': {'device': 'm3', 'result': 'success'}}
08/16/2022 06:47:01 PM daemon.py[line:93]INFO - gui msg: {'req': {'device': 'm3', 'command': 'lock', 'lock_id': '411'}}
08/16/2022 06:47:01 PM daemon.py[line:775]INFO - para_str-->40,
08/16/2022 06:47:01 PM daemon.py[line:1008]INFO - b'ld\x01(\x10\xc7'
08/16/2022 06:47:01 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 06:47:01 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 06:47:01 PM rcomm.py[line:143]INFO - data -> b'ldok\x92\x97'
08/16/2022 06:47:01 PM daemon.py[line:1025]INFO - b'li\xc8\xb3'
08/16/2022 06:47:01 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 06:47:01 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 06:47:01 PM rcomm.py[line:143]INFO - data -> b'li,79,14,254,31,4,240,A\x8d'
08/16/2022 06:47:01 PM daemon.py[line:1030]INFO - sensors state-->['79', '14', '254', '31', '4', '240']
08/16/2022 06:47:01 PM daemon.py[line:1033]INFO - [40]
08/16/2022 06:47:01 PM daemon.py[line:111]DEBUG - send_json -> {'rep': {'device': 'm3', 'result': 'success'}}
08/16/2022 06:47:06 PM daemon.py[line:93]INFO - gui msg: {'req': {'device': 'm3', 'command': 'lock', 'lock_id': '406'}}
08/16/2022 06:47:06 PM daemon.py[line:775]INFO - para_str-->35,
08/16/2022 06:47:06 PM daemon.py[line:1008]INFO - b'ld\x01#{v'
08/16/2022 06:47:06 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 06:47:06 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 06:47:06 PM rcomm.py[line:143]INFO - data -> b'ldok\x92\x97'
08/16/2022 06:47:06 PM daemon.py[line:1025]INFO - b'li\xc8\xb3'
08/16/2022 06:47:06 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 06:47:06 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 06:47:06 PM rcomm.py[line:143]INFO - data -> b'li,79,14,254,31,4,240,A\x8d'
08/16/2022 06:47:06 PM daemon.py[line:1030]INFO - sensors state-->['79', '14', '254', '31', '4', '240']
08/16/2022 06:47:06 PM daemon.py[line:1033]INFO - [35]
08/16/2022 06:47:07 PM daemon.py[line:1025]INFO - b'li\xc8\xb3'
08/16/2022 06:47:07 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 06:47:07 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 06:47:07 PM rcomm.py[line:143]INFO - data -> b'li,79,14,254,31,4,240,A\x8d'
08/16/2022 06:47:07 PM daemon.py[line:1030]INFO - sensors state-->['79', '14', '254', '31', '4', '240']
08/16/2022 06:47:07 PM daemon.py[line:1033]INFO - [35]
08/16/2022 06:47:07 PM daemon.py[line:1025]INFO - b'li\xc8\xb3'
08/16/2022 06:47:07 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 06:47:07 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 06:47:07 PM rcomm.py[line:143]INFO - data -> b'li,79,14,254,31,4,240,A\x8d'
08/16/2022 06:47:07 PM daemon.py[line:1030]INFO - sensors state-->['79', '14', '254', '31', '4', '240']
08/16/2022 06:47:07 PM daemon.py[line:1033]INFO - [35]
08/16/2022 06:47:07 PM daemon.py[line:111]DEBUG - send_json -> {'rep': {'device': 'm3', 'result': 'error', 'meta': {'35': 'CLOSE'}}}
08/16/2022 06:47:10 PM daemon.py[line:93]INFO - gui msg: {'req': {'device': 'm3', 'command': 'lock', 'lock_id': '406'}}
08/16/2022 06:47:10 PM daemon.py[line:775]INFO - para_str-->35,
08/16/2022 06:47:10 PM daemon.py[line:1008]INFO - b'ld\x01#{v'
08/16/2022 06:47:10 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 06:47:10 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 06:47:10 PM rcomm.py[line:143]INFO - data -> b'ldok\x92\x97'
08/16/2022 06:47:10 PM daemon.py[line:1025]INFO - b'li\xc8\xb3'
08/16/2022 06:47:10 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 06:47:10 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 06:47:10 PM rcomm.py[line:143]INFO - data -> b'li,79,14,254,31,4,240,A\x8d'
08/16/2022 06:47:10 PM daemon.py[line:1030]INFO - sensors state-->['79', '14', '254', '31', '4', '240']
08/16/2022 06:47:10 PM daemon.py[line:1033]INFO - [35]
08/16/2022 06:47:10 PM daemon.py[line:1025]INFO - b'li\xc8\xb3'
08/16/2022 06:47:10 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 06:47:10 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 06:47:10 PM rcomm.py[line:143]INFO - data -> b'li,79,14,254,31,4,240,A\x8d'
08/16/2022 06:47:10 PM daemon.py[line:1030]INFO - sensors state-->['79', '14', '254', '31', '4', '240']
08/16/2022 06:47:10 PM daemon.py[line:1033]INFO - [35]
08/16/2022 06:47:10 PM daemon.py[line:1025]INFO - b'li\xc8\xb3'
08/16/2022 06:47:10 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 06:47:10 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 06:47:11 PM rcomm.py[line:143]INFO - data -> b'li,79,14,254,31,4,240,A\x8d'
08/16/2022 06:47:11 PM daemon.py[line:1030]INFO - sensors state-->['79', '14', '254', '31', '4', '240']
08/16/2022 06:47:11 PM daemon.py[line:1033]INFO - [35]
08/16/2022 06:47:11 PM daemon.py[line:111]DEBUG - send_json -> {'rep': {'device': 'm3', 'result': 'error', 'meta': {'35': 'CLOSE'}}}
08/16/2022 06:47:11 PM daemon.py[line:93]INFO - gui msg: {'req': {'device': 'm3', 'command': 'lock', 'lock_id': '406'}}
08/16/2022 06:47:11 PM daemon.py[line:775]INFO - para_str-->35,
08/16/2022 06:47:11 PM daemon.py[line:1008]INFO - b'ld\x01#{v'
08/16/2022 06:47:11 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 06:47:11 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 06:47:11 PM rcomm.py[line:143]INFO - data -> b'ldok\x92\x97'
08/16/2022 06:47:12 PM daemon.py[line:1025]INFO - b'li\xc8\xb3'
08/16/2022 06:47:12 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 06:47:12 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 06:47:12 PM rcomm.py[line:143]INFO - data -> b'li,79,14,254,31,4,240,A\x8d'
08/16/2022 06:47:12 PM daemon.py[line:1030]INFO - sensors state-->['79', '14', '254', '31', '4', '240']
08/16/2022 06:47:12 PM daemon.py[line:1033]INFO - [35]
08/16/2022 06:47:12 PM daemon.py[line:1025]INFO - b'li\xc8\xb3'
08/16/2022 06:47:12 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 06:47:12 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 06:47:12 PM rcomm.py[line:143]INFO - data -> b'li,79,14,254,31,4,240,A\x8d'
08/16/2022 06:47:12 PM daemon.py[line:1030]INFO - sensors state-->['79', '14', '254', '31', '4', '240']
08/16/2022 06:47:12 PM daemon.py[line:1033]INFO - [35]
08/16/2022 06:47:12 PM daemon.py[line:1025]INFO - b'li\xc8\xb3'
08/16/2022 06:47:12 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 06:47:12 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 06:47:12 PM rcomm.py[line:143]INFO - data -> b'li,79,14,254,31,4,240,A\x8d'
08/16/2022 06:47:12 PM daemon.py[line:1030]INFO - sensors state-->['79', '14', '254', '31', '4', '240']
08/16/2022 06:47:12 PM daemon.py[line:1033]INFO - [35]
08/16/2022 06:47:12 PM daemon.py[line:111]DEBUG - send_json -> {'rep': {'device': 'm3', 'result': 'error', 'meta': {'35': 'CLOSE'}}}
08/16/2022 06:47:57 PM daemon.py[line:93]INFO - gui msg: {'req': {'device': 'm3', 'command': 'lock', 'lock_id': '406'}}
08/16/2022 06:47:57 PM daemon.py[line:775]INFO - para_str-->35,
08/16/2022 06:47:57 PM daemon.py[line:1008]INFO - b'ld\x01#{v'
08/16/2022 06:47:57 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 06:47:57 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 06:47:57 PM rcomm.py[line:143]INFO - data -> b'ldok\x92\x97'
08/16/2022 06:47:57 PM daemon.py[line:1025]INFO - b'li\xc8\xb3'
08/16/2022 06:47:57 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 06:47:57 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 06:47:57 PM rcomm.py[line:143]INFO - data -> b'li,79,14,254,159,0,240,\xa0\x10'
08/16/2022 06:47:57 PM daemon.py[line:1030]INFO - sensors state-->['79', '14', '254', '159', '0', '240']
08/16/2022 06:47:57 PM daemon.py[line:1033]INFO - [35]
08/16/2022 06:47:57 PM daemon.py[line:111]DEBUG - send_json -> {'rep': {'device': 'm3', 'result': 'success'}}
08/16/2022 06:47:58 PM daemon.py[line:93]INFO - gui msg: {'req': {'device': 'm3', 'command': 'lock', 'lock_id': '406'}}
08/16/2022 06:47:58 PM daemon.py[line:775]INFO - para_str-->35,
08/16/2022 06:47:58 PM daemon.py[line:1008]INFO - b'ld\x01#{v'
08/16/2022 06:47:58 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 06:47:58 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 06:47:58 PM rcomm.py[line:143]INFO - data -> b'ldok\x92\x97'
08/16/2022 06:47:58 PM daemon.py[line:1025]INFO - b'li\xc8\xb3'
08/16/2022 06:47:58 PM rcomm.py[line:218]DEBUG - flush Y
08/16/2022 06:47:58 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 06:47:58 PM rcomm.py[line:143]INFO - data -> b'li,79,14,254,159,0,240,\xa0\x10'
08/16/2022 06:47:58 PM daemon.py[line:1030]INFO - sensors state-->['79', '14', '254', '159', '0', '240']
08/16/2022 06:47:58 PM daemon.py[line:1033]INFO - [35]
08/16/2022 06:47:58 PM daemon.py[line:111]DEBUG - send_json -> {'rep': {'device': 'm3', 'result': 'success'}}
08/16/2022 06:53:59 PM serv.py[line:49]INFO - serv heatbeat
08/16/2022 07:03:59 PM serv.py[line:49]INFO - serv heatbeat
08/16/2022 07:13:59 PM serv.py[line:49]INFO - serv heatbeat
08/16/2022 07:23:59 PM serv.py[line:49]INFO - serv heatbeat
08/16/2022 07:33:59 PM serv.py[line:49]INFO - serv heatbeat
08/16/2022 07:43:59 PM serv.py[line:49]INFO - serv heatbeat
08/16/2022 07:49:08 PM rcomm.py[line:139]INFO - read: Y
08/16/2022 07:49:08 PM rcomm.py[line:171]ERROR - failed to read dev: Y as [Errno 5] Input/output error
08/16/2022 07:49:08 PM rcomm.py[line:115]ERROR - failed to open device: Y as [Errno 2] could not open port /dev/serial/by-id/usb-FTDI_FT230X_Basic_UART_DK0B3QX3-if00-port0: [Errno 2] No such file or directory: '/dev/serial/by-id/usb-FTDI_FT230X_Basic_UART_DK0B3QX3-if00-port0'
08/16/2022 07:49:08 PM rcomm.py[line:115]ERROR - failed to open device: AC as [Errno 2] could not open port /dev/serial/by-id/usb-1a86_USB2.0-Serial-if00-port0: [Errno 2] No such file or directory: '/dev/serial/by-id/usb-1a86_USB2.0-Serial-if00-port0'
08/16/2022 10:11:31 PM serv.py[line:49]INFO - serv heatbeat
